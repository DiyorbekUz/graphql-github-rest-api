[{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-14T15:08:08Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-14T15:08:08Z"},"message":"Use recursion to traverse during passive unmount phase (#24918)\n\nThis converts the layout phase to iterate over its effects recursively\r\ninstead of iteratively. This makes it easier to track contextual\r\ninformation, like whether a fiber is inside a hidden tree.\r\n\r\nWe already made this change for several other phases, like mutation and\r\nlayout mount. See 481dece for more context.","tree":{"sha":"610bc17ba3a0cd71ba6e9d95fcd57adab2e491c7","url":"https://api.github.com/repos/facebook/react/git/trees/610bc17ba3a0cd71ba6e9d95fcd57adab2e491c7"},"url":"https://api.github.com/repos/facebook/react/git/commits/02206099afe9bf54435fe0bd978a4ccf3df9cace","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi0DFYCRBK7hj4Ov3rIwAAu0YIAJI6SJTt7he2/yXfDokFObH/\nog0Es/YixN3z9Ty2Vln8ydB927JaMcmUqW2rVTH7j1TdtxYSOK9M08E6AtWpYATp\nrUAzIZnVzWuVoH3mPl0SD3arlSvVIueqRDH3kE6GIvXItlAX4I2FivJoevqeQBie\nfQInEX++TfGSCwbPV/bhSxm+Bj4dCBO0LYhlOFIsYsoMvlUfgevBuwpg3caaEcYB\nXlecrsLjz8bTIpXHgajbOJhr5oYfhcLnTgycYVHARR8DTDm0noh4ofYFEYmTY3sv\nHLB5g/Thmkk5U0PlW2qVmO4BNmLhA5v8TI+sMIZBmAOv6t9Mj1KW6nwXoIqMVHU=\n=HRmV\n-----END PGP SIGNATURE-----\n","payload":"tree 610bc17ba3a0cd71ba6e9d95fcd57adab2e491c7\nparent d54880d4241aab772e6e2e6aedbb7176b9f2c191\nauthor Andrew Clark <git@andrewclark.io> 1657811288 -0400\ncommitter GitHub <noreply@github.com> 1657811288 -0400\n\nUse recursion to traverse during passive unmount phase (#24918)\n\nThis converts the layout phase to iterate over its effects recursively\r\ninstead of iteratively. This makes it easier to track contextual\r\ninformation, like whether a fiber is inside a hidden tree.\r\n\r\nWe already made this change for several other phases, like mutation and\r\nlayout mount. See 481dece for more context."}},{"author":{"name":"Mengdi Chen","email":"mengdi@fb.com","date":"2022-07-13T19:57:50Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-13T19:57:50Z"},"message":"React DevTools 4.24.7 -> 4.25.0 (#24919)","tree":{"sha":"4481ff95bcbcaf0a48734bf51c473be44144c05c","url":"https://api.github.com/repos/facebook/react/git/trees/4481ff95bcbcaf0a48734bf51c473be44144c05c"},"url":"https://api.github.com/repos/facebook/react/git/commits/d54880d4241aab772e6e2e6aedbb7176b9f2c191","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJizyO+CRBK7hj4Ov3rIwAAKEMIAEmNfZ75fCQbDIt2vAYtGJrI\nrsHNKy79ZrNQFblZt0uE1RNca2u4LgTjBR0gLSDqLHv1bw7+B9SJJnkfj1EtPqGW\nrMSahRNGD5q2OpvwVUof/ekNCij6pOTv1xDWUHMkgbo1Pcwshct4fYDYZzmH6oBa\nm8MWGS2mJh+i2tKTPaZ1HDEUsimGf3iondhlxWGI3dj4AZaVJeaDgyz4Tvb8+Ne1\nCljWDSVqGhugkOY0JrCYw9iBK9df8zlZNTuoT+lWwbndY/skPlFV1gvIH8wI2Pp1\nhALQT22dxCyzycA5snSJQLCaPdRtAvgVGW5TG1/yd9noxEtEBsHxrXBAJJ3m+tg=\n=wTIG\n-----END PGP SIGNATURE-----\n","payload":"tree 4481ff95bcbcaf0a48734bf51c473be44144c05c\nparent f629495199791ce2811661ab50c37aac7898f862\nauthor Mengdi Chen <mengdi@fb.com> 1657742270 -0400\ncommitter GitHub <noreply@github.com> 1657742270 -0400\n\nReact DevTools 4.24.7 -> 4.25.0 (#24919)\n\n"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-07-13T19:27:12Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-13T19:27:12Z"},"message":"[Transition Tracing] Rename transitionCallbacks to unstable_transitionCallbacks  (#24920)\n\nRenaming transitionCallbacks to unstable_transitionCallbacks as per convention","tree":{"sha":"c617f91c650f66727486cde9bf96c42cedf3c240","url":"https://api.github.com/repos/facebook/react/git/trees/c617f91c650f66727486cde9bf96c42cedf3c240"},"url":"https://api.github.com/repos/facebook/react/git/commits/f629495199791ce2811661ab50c37aac7898f862","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJizxyQCRBK7hj4Ov3rIwAAZJ4IAIayBwyO3aeFsU3wnGth1gVg\nd2ehtMEoiUDoUmIJv7FWPvXX267bnblT5nwGDZETYJxpE1U402l5r4Y+T068ur1+\nO57tPPShVYp83Z0yQi8+tD9tci2Ce5zSnilbl8CBRsAe7afF115kYM9E5xAn1xuf\nh+6ao5M0idMdlVTu1YA1Mo6aGqCuBAX5IL7UHssnKUQoRcmYAw+VdtoD6rIXcxR0\n/G6qYbiMn6sl9wCPpvVvpEhojiWqwnJp1zg1sJyqfjt+THdMMIVFCnjEQ77zQLgt\nOK7KhTwj1jn3xdwt0WRi+mKtFwggMb5g7jmHZCRtHeKfht3PiL2HMe5CL1TERYo=\n=3uGE\n-----END PGP SIGNATURE-----\n","payload":"tree c617f91c650f66727486cde9bf96c42cedf3c240\nparent 4bc83e682119085481a7c940d23c5f1568be002b\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1657740432 -0400\ncommitter GitHub <noreply@github.com> 1657740432 -0400\n\n[Transition Tracing] Rename transitionCallbacks to unstable_transitionCallbacks  (#24920)\n\nRenaming transitionCallbacks to unstable_transitionCallbacks as per convention"}},{"author":{"name":"Mengdi Chen","email":"mengdi@fb.com","date":"2022-07-13T19:21:32Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-13T19:21:32Z"},"message":"[DevTools] enable `enableProfilerComponentTree` flag for all builds (#24921)","tree":{"sha":"ce4d00c9a55b4e56e5a29467745dc69a301eee39","url":"https://api.github.com/repos/facebook/react/git/trees/ce4d00c9a55b4e56e5a29467745dc69a301eee39"},"url":"https://api.github.com/repos/facebook/react/git/commits/4bc83e682119085481a7c940d23c5f1568be002b","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJizxs8CRBK7hj4Ov3rIwAAA1QIAEskVW2PVXDVjek16PhM1Zzm\nZqgtJ4jtUWFvybkPcYRevlj9M1TFkVtLJl3hIEj2DprS4v7sxME7x08VDjPY2Yf+\n+U+wYolNiX7YbtSf2uEBQNceyXzHoT3NlRFimC1eLWvH+faulAXhpvVOBw3A+nft\nNjR4CLVHK5C4rYeTmEeolMXtIiPuuP+DTERulbD0kgPJ+5+qxerpXvkffzj2M9Xh\nTfJgBkb0flhocUSaWrlkJwY1u0BJxZaBpBGvFtHKBYR352RWayjo3Wc5Xp4FcRei\nGoPYvoGXqogghN+hZOulUPPs+iNMdb1s6UwO5HKbJ8kZTjWTvJX7Phw4GXSGwtE=\n=iSUr\n-----END PGP SIGNATURE-----\n","payload":"tree ce4d00c9a55b4e56e5a29467745dc69a301eee39\nparent 7a4336c4040bb26d8fe143f96d842acae4c728b5\nauthor Mengdi Chen <mengdi@fb.com> 1657740092 -0400\ncommitter GitHub <noreply@github.com> 1657740092 -0400\n\n[DevTools] enable `enableProfilerComponentTree` flag for all builds (#24921)\n\n"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T19:02:07Z"},"committer":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T20:06:53Z"},"message":"Use recursion to traverse during passive mount phase \n\nThis converts the layout phase to iterate over its effects\nrecursively instead of iteratively. This makes it easier to track \ncontextual information, like whether a fiber is inside a hidden tree.\n\nWe already made this change for the mutation phase. See 481dece for\nmore context.","tree":{"sha":"66c5c890e234e00036c48b9b8b422bd6e8b9523f","url":"https://api.github.com/repos/facebook/react/git/trees/66c5c890e234e00036c48b9b8b422bd6e8b9523f"},"url":"https://api.github.com/repos/facebook/react/git/commits/7a4336c4040bb26d8fe143f96d842acae4c728b5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T18:45:21Z"},"committer":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T20:06:53Z"},"message":"Wrap try-catch directly around each user function \n\n(This is the same as f9e6aef, but for the passive mount phase rather than the\nmutation phase.)\n\nThis moves the try-catch from around each fiber's passive mount phase to\ndireclty around each user function (effect function, callback, etc).\n\nWe already do this when unmounting because if one unmount function\nerrors, we still need to call all the others so they can clean up\ntheir resources.\n\nPreviously we didn't bother to do this for anything but unmount,\nbecause if a mount effect throws, we're going to delete that whole\ntree anyway.\n\nBut now that we're switching from an iterative loop to a recursive one,\nwe don't want every call frame on the stack to have a try-catch, since\nthe error handling requires additional memory.\n\nWrapping every user function is a bit tedious, but it's better\nfor performance. Many of them already had try blocks around\nthem already.","tree":{"sha":"e52f57dc9017ec2bc79690fa27ee860c30a2e1bf","url":"https://api.github.com/repos/facebook/react/git/trees/e52f57dc9017ec2bc79690fa27ee860c30a2e1bf"},"url":"https://api.github.com/repos/facebook/react/git/commits/bb1357b38170e81cfbf2398cc6fefcf7a1ef2ccb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T18:36:31Z"},"committer":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T20:06:53Z"},"message":"Move flag check into each switch case \n\nThe fiber tag is more specific than the effect flag, so we should always\nrefine the type of work first, to minimize redundant checks.","tree":{"sha":"98b30c2bca78ce4ed72e097a5b42f69a832f80b4","url":"https://api.github.com/repos/facebook/react/git/trees/98b30c2bca78ce4ed72e097a5b42f69a832f80b4"},"url":"https://api.github.com/repos/facebook/react/git/commits/de3c069843af825503b91ed10d04d03db2aa1c94","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-07-12T19:59:58Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-12T19:59:58Z"},"message":"[Transition Tracing][Code Cleanup] Delete Marker Name Change Tests (#24908)\n\nWe decided that changing the Tracing Marker name wasn't allowed and we would error, so this PR deletes all the tests that tested name change behavior","tree":{"sha":"814d8985bfaabaa69bf8829d531252a274a46e09","url":"https://api.github.com/repos/facebook/react/git/trees/814d8985bfaabaa69bf8829d531252a274a46e09"},"url":"https://api.github.com/repos/facebook/react/git/commits/f5916d15b66cce92bf0a6a4c8752154cadcc0cf8","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJizdK+CRBK7hj4Ov3rIwAA70EIAEvgeGkHL3OBkd1P6TwQNHcc\nxP4e5LZDBm7265rF2TpbzFUKi8m6tqQtfHj0jkQmYfn+jOBWuN/knGF572AtJwWZ\nedbs0x/5nB+HSyJ07c/UWzqGRcy+rLZ3I1wxCQmNGn06GGMtcrze9FwSAsYue2rY\nkI2c5zBgnIc62atCbuHeiC+2sNlQUYkOIpFAy6xTmZ2t1A+KEiEUL+gcM9w6LV2O\nUxXMWCmN9P1lKCGH9d8oXJrMMJHqRvQbfhxyc9VuTE74fBvN5pMaSnOb15ujsHBO\nXMWc/Si/Lb7nZFl18Ktz1Zp7P6c/6B1D/9WRQmPAyt1d9hm6Leb/DA+BCn3r9KA=\n=BHZa\n-----END PGP SIGNATURE-----\n","payload":"tree 814d8985bfaabaa69bf8829d531252a274a46e09\nparent fa20b319fcfad50d7b981ec57f111b4e24d6f559\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1657655998 -0400\ncommitter GitHub <noreply@github.com> 1657655998 -0700\n\n[Transition Tracing][Code Cleanup] Delete Marker Name Change Tests (#24908)\n\nWe decided that changing the Tracing Marker name wasn't allowed and we would error, so this PR deletes all the tests that tested name change behavior"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-07-12T19:48:04Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-12T19:48:04Z"},"message":"[Transition Tracing] Code Cleanup (#24880)\n\nThis PR cleans up some of the transition tracing code by:\r\n* Looping through marker transitions only when we process the markerComplete callback (rather than in the commit phase) so we block for less time during commit.\r\n* Renaming `PendingSuspenseBoundaries` to `pendingBoundaries`\r\n* Cleaning up the callback functions","tree":{"sha":"e9fb92c034c3e64f8020efba099a390e2266292f","url":"https://api.github.com/repos/facebook/react/git/trees/e9fb92c034c3e64f8020efba099a390e2266292f"},"url":"https://api.github.com/repos/facebook/react/git/commits/fa20b319fcfad50d7b981ec57f111b4e24d6f559","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJizc/0CRBK7hj4Ov3rIwAAJdoIAKM4jYbpCwnG9wRj9AQxZ/4x\nGUyJ81ofTgO+EBku8UJsm8JOR4nwKiyYyeNTgNlySGgH7jCtsZeSeTGT+OxA356j\nNu3vXmrqqybR30Dn44xvIpXzUP83+zeiDELVEI6pdFxz1PMmZ46zQ3kP7Teve5LC\nuN4pxSwDe0uwXxSVgZ89A/y5/GNPictyya8i24iG3DOeyE0lNVD0FHtRUZJvBmlA\nHbwesymzt63+I4+Z69r9gp3vXWoPVtWMGMYkAKoDeuhCDWufCF70JRbjtDjlXThK\nVt6ICcv/25oVkJED9cYLdvKQn58Odqx2gdB2rVKwPXTrqXBnASMYhBht+/5mBPg=\n=biJt\n-----END PGP SIGNATURE-----\n","payload":"tree e9fb92c034c3e64f8020efba099a390e2266292f\nparent 5e8c1961c03269ca0ee741182f3c877e0766efb8\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1657655284 -0400\ncommitter GitHub <noreply@github.com> 1657655284 -0700\n\n[Transition Tracing] Code Cleanup (#24880)\n\nThis PR cleans up some of the transition tracing code by:\r\n* Looping through marker transitions only when we process the markerComplete callback (rather than in the commit phase) so we block for less time during commit.\r\n* Renaming `PendingSuspenseBoundaries` to `pendingBoundaries`\r\n* Cleaning up the callback functions\r\n"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-07-12T18:59:54Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-12T18:59:54Z"},"message":"[Transition Tracing] onMarkerProgress (#24861)\n\nThis PR adds support for `onMarkerProgress` (`onTransitionProgress(transitionName: string, markerName: string, startTime: number, currentTime: number, pending: Array<{name: null | string}>)`)\r\n\r\nWe call this callback when:\r\n    * When **a child suspense boundary of the marker commits in a fallback state**. Only the suspense boundaries that are triggered and commit in a fallback state when the transition first occurs (and all subsequent suspense boundaries in the initial suspense boundary's subtree) are considered a part of the transition\r\n    * **A child suspense boundary of the marker resolves**\r\n   \r\nWhen we call `onMarkerProgress`, we call the function with a `pending` array. This array contains the names of the transition's suspense boundaries that are still in a fallback state","tree":{"sha":"f3c1b60c47399004d69faad2848e77daa1511e9b","url":"https://api.github.com/repos/facebook/react/git/trees/f3c1b60c47399004d69faad2848e77daa1511e9b"},"url":"https://api.github.com/repos/facebook/react/git/commits/5e8c1961c03269ca0ee741182f3c877e0766efb8","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJizcSqCRBK7hj4Ov3rIwAA7IEIADQwsq+2wkO7IYw4/9k+wzrU\n350yHA+Unmlj367QHgRewyP60cLn2dnaX77u077ltulY7U1DUADu4fdGOp4RzTmq\nkmwt89Y1Jja6nBh9ew/DXvg2EAxo6tzGWgWyffkTockLX13oyBm/BTR4fDtVqu3q\ni3FFjQRx+OHWZvMwIV+3WmivId6a6bivyp+78Zk5Bsyh4ra3QOCuQo5mrUuWIv1/\nQlrvIU0/ZtsLysv/EXRg+NWpCnzdemEgfrOSSVznZ2nMt4IWj/PZoCzoT0xkiXuj\nD+t1HJdTvAyaJxzrwquER3tho7hGolagSRiSCGIoKt7C9QgyyyP15UbN7N6Q924=\n=0Tqk\n-----END PGP SIGNATURE-----\n","payload":"tree f3c1b60c47399004d69faad2848e77daa1511e9b\nparent b641d0209717d1127296d26b53b8dc056d9e6952\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1657652394 -0400\ncommitter GitHub <noreply@github.com> 1657652394 -0700\n\n[Transition Tracing] onMarkerProgress (#24861)\n\nThis PR adds support for `onMarkerProgress` (`onTransitionProgress(transitionName: string, markerName: string, startTime: number, currentTime: number, pending: Array<{name: null | string}>)`)\r\n\r\nWe call this callback when:\r\n    * When **a child suspense boundary of the marker commits in a fallback state**. Only the suspense boundaries that are triggered and commit in a fallback state when the transition first occurs (and all subsequent suspense boundaries in the initial suspense boundary's subtree) are considered a part of the transition\r\n    * **A child suspense boundary of the marker resolves**\r\n   \r\nWhen we call `onMarkerProgress`, we call the function with a `pending` array. This array contains the names of the transition's suspense boundaries that are still in a fallback state"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T17:25:31Z"},"committer":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T17:27:22Z"},"message":"Use recursion to traverse during layout phase\n\nThis converts the layout phase to iterate over its effects\nrecursively instead of iteratively. This makes it easier to track \ncontextual information, like whether a fiber is inside a hidden tree.\n\nWe already made this change for the mutation phase. See 481dece for\nmore context.","tree":{"sha":"4b35a6ba9c6ca803bf9c2ed2fbb7fd4a67d0179b","url":"https://api.github.com/repos/facebook/react/git/trees/4b35a6ba9c6ca803bf9c2ed2fbb7fd4a67d0179b"},"url":"https://api.github.com/repos/facebook/react/git/commits/b641d0209717d1127296d26b53b8dc056d9e6952","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T16:57:34Z"},"committer":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T17:27:22Z"},"message":"Wrap try-catch directly around each user function\n\n(This is the same as f9e6aef, but for the layout phase rather than the\nmutation phase.)\n\nThis moves the try-catch from around each fiber's layout phase to\ndireclty around each user function (effect function, callback, etc).\n\nWe already do this when unmounting because if one unmount function\nerrors, we still need to call all the others so they can clean up\ntheir resources.\n\nPreviously we didn't bother to do this for anything but unmount,\nbecause if a mount effect throws, we're going to delete that whole\ntree anyway.\n\nBut now that we're switching from an iterative loop to a recursive one,\nwe don't want every call frame on the stack to have a try-catch, since\nthe error handling requires additional memory.\n\nWrapping every user function is a bit tedious, but it's better\nfor performance. Many of them already had try blocks around\nthem already.","tree":{"sha":"2e5ee1f54c04c819d2d7e97136b0879440f57494","url":"https://api.github.com/repos/facebook/react/git/trees/2e5ee1f54c04c819d2d7e97136b0879440f57494"},"url":"https://api.github.com/repos/facebook/react/git/commits/a1b1e391e1663a401b84642b2107390fe9451a38","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-08T17:28:45Z"},"committer":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T17:27:22Z"},"message":"Move flag check into each switch case \n\nThe fiber tag is more specific than the effect flag, so we should always\nrefine the type of work first, to minimize redundant checks.","tree":{"sha":"c5b7c1d6c3583ff0f618c7cfcffbf51a78b4f2e6","url":"https://api.github.com/repos/facebook/react/git/trees/c5b7c1d6c3583ff0f618c7cfcffbf51a78b4f2e6"},"url":"https://api.github.com/repos/facebook/react/git/commits/3df7e8f5dcc3e379d8ce738da2a87029467bcf1d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-08T17:10:14Z"},"committer":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-12T17:27:22Z"},"message":"Move ref commit effects inside switch statement\n\nOnly certain fiber types can have refs attached to them, so this moves the\nRef effect logic out of the common path and into the corresponding branch\nof the layout phase's switch statement.\n\nThe types of fibers this affects are host components and class components.\nFunction components are not affected because they can only have a ref via\nuseImperativeHandle, which has a different implementation. The experimental\nScope type attaches its refs in the mutation phase, not the layout phase.","tree":{"sha":"386612cf2a2594fc92e6a4d6348b74a977d356b9","url":"https://api.github.com/repos/facebook/react/git/trees/386612cf2a2594fc92e6a4d6348b74a977d356b9"},"url":"https://api.github.com/repos/facebook/react/git/commits/b8c96b136d9968fd593ea0ed44adfc2ac39b6b8d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-07-11T22:00:49Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-11T22:00:49Z"},"message":"[Transition Tracing] Don't call transition callbacks if no transition name specified (#24887)\n\nThis PR checks to see if `transition.name` is defined before adding the transition so we avoid doing unnecessary work for transitions without a transition name","tree":{"sha":"4fec21676ab004bcd049e1baff44e6e38d9bd59d","url":"https://api.github.com/repos/facebook/react/git/trees/4fec21676ab004bcd049e1baff44e6e38d9bd59d"},"url":"https://api.github.com/repos/facebook/react/git/commits/e225fa43ada4f4cf3d3ba4982cdd81bb093eaa46","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJizJ2RCRBK7hj4Ov3rIwAAGqYIALGhPibtJxxG3m+4Ras61tbc\nJRfsMDdkA2R4fa2FcW8Muye/Cok0sbbpPcWH45WRd363PmW65iwgfF0gBBMT/1mP\n2BT2gXI9t1waTFbobMXTM2EWoEUgBs+O0I00wD8dbNw3GlGlhiRUqyy4Lk93KEOB\nBBKOH1Jh4yc5S69DZww7uXLjFOxzwXp28ATsZZ7wFCUxz8yBYb+KS9l54fVHXIxi\n9/VmNDUIs/uq0oFTO/WxP3/Pli5Y+8KTF5qFd86kvgJ6kGRu8g2lauQIE2nzkn/Y\nVtKA99cO+X3vqBgGmsPdLhrdeBqaj5Y6UE4AxEGUHXGfY2zUK1jDwoncyBZsu7w=\n=GB8V\n-----END PGP SIGNATURE-----\n","payload":"tree 4fec21676ab004bcd049e1baff44e6e38d9bd59d\nparent dd2d6522754f52c70d02c51db25eb7cbd5d1c8eb\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1657576849 -0400\ncommitter GitHub <noreply@github.com> 1657576849 -0400\n\n[Transition Tracing] Don't call transition callbacks if no transition name specified (#24887)\n\nThis PR checks to see if `transition.name` is defined before adding the transition so we avoid doing unnecessary work for transitions without a transition name"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-07-08T16:31:44Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-08T16:31:44Z"},"message":"[Transition Tracing] Tracing Marker Name Change in Update Warning (#24873)\n\nWe should only support Tracing Marker's name field during component mount. This PR adds a warning if the Tracing Marker's name changes during an update.","tree":{"sha":"704e5ac43dd6181ad892bb7c0698cc78a2d39cd3","url":"https://api.github.com/repos/facebook/react/git/trees/704e5ac43dd6181ad892bb7c0698cc78a2d39cd3"},"url":"https://api.github.com/repos/facebook/react/git/commits/dd2d6522754f52c70d02c51db25eb7cbd5d1c8eb","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiyFvwCRBK7hj4Ov3rIwAANNwIAImFZLBdaFk4sl+SBf5igwcU\nih0tZ5PSoyq7aGAxcwA0+worC0+h7wCWkjiseMKtjwyqoLDsP2FhGEwmpTqTlOYP\nfEnH8lF2I3Wf11+te8aZPTpiqzEVdE/nFDWDKNu2I6HyBKjWi1nzqhg1bkc3TYyI\nl8I1TwYSLyTvEkyBQh/h+4EW79yzXzhBfPSAOQvBh5XjjrUND5IJBnlSbaKpN2Dk\nvDln1AZK2F33GKaZH5uVMU9zD2x6f2X7IPvRUlvI2mfz9VFQpDFnLa/zAjMbf1vv\n7cHTLS3mV+dA2NrrdNQwJ3d1qOffez3WOMQQgU+NFmuh5fCQTRvT1AnywkiJPWs=\n=+TOO\n-----END PGP SIGNATURE-----\n","payload":"tree 704e5ac43dd6181ad892bb7c0698cc78a2d39cd3\nparent 80208e7696b8e391fe301ab312c73cd5f500bd4c\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1657297904 -0400\ncommitter GitHub <noreply@github.com> 1657297904 -0400\n\n[Transition Tracing] Tracing Marker Name Change in Update Warning (#24873)\n\nWe should only support Tracing Marker's name field during component mount. This PR adds a warning if the Tracing Marker's name changes during an update."}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-07-08T16:13:29Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-08T16:13:29Z"},"message":"[Transition Tracing] Add onTransitionProgress Callback (#24833)\n\nThis PR adds support for `onTransitionProgress` (`onTransitionProgress(transitionName: string, startTime: number, currentTime: number, pending: Array<{name: null | string}>)`)\r\n\r\nWe call this callback when:\r\n    * When **a child suspense boundary of the transition commits in a fallback state**. Only the suspense boundaries that are triggered and commit in a fallback state when the transition first occurs (and all subsequent suspense boundaries in the initial suspense boundary's subtree) are considered a part of the transition\r\n    * **A child suspense boundary of the transition resolves**\r\n   \r\nWhen we call `onTransitionProgress`, we call the function with a `pending` array. This array contains the names of the transition's suspense boundaries that are still in a fallback state","tree":{"sha":"fcfd854f77c78ad279fb65622fbe8bcf24b7ff75","url":"https://api.github.com/repos/facebook/react/git/trees/fcfd854f77c78ad279fb65622fbe8bcf24b7ff75"},"url":"https://api.github.com/repos/facebook/react/git/commits/80208e7696b8e391fe301ab312c73cd5f500bd4c","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiyFepCRBK7hj4Ov3rIwAAPg4IAI1uVUec8uBX+uefrUP6JYmj\n2BcXu067dfl3NOOKOLu0UFyo1jKv7JRhpNa/0KoqOS2gA0paw4yIfa1OfkP6zfvB\nbsduRcz46GMxVMmLdiVyIKQF21IgJhyGcdwBe3VlO1uaiGxMBi3wJ/U5kp2sxn3g\nrbkhEXgqTe5qaL5wpk+0hYDSaW70oiDGBgKBw16pOitQgaTuNOo5PFLqUpNwnTzT\nGBnYPQcP21sAm8f1T78wp8LauDeGfKano9X+J8RRccj0uqvCjl4yZW6nIpm/VIyb\nQetIjiC6BH/CptpzobisHBGcZPda5+oAdayRFSBSS7m6PxdLlmrZIctAyUamYQQ=\n=Mypf\n-----END PGP SIGNATURE-----\n","payload":"tree fcfd854f77c78ad279fb65622fbe8bcf24b7ff75\nparent 30eb267abdb032bf78e6394bd9ad79102e1d3fb1\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1657296809 -0400\ncommitter GitHub <noreply@github.com> 1657296809 -0400\n\n[Transition Tracing] Add onTransitionProgress Callback (#24833)\n\nThis PR adds support for `onTransitionProgress` (`onTransitionProgress(transitionName: string, startTime: number, currentTime: number, pending: Array<{name: null | string}>)`)\r\n\r\nWe call this callback when:\r\n    * When **a child suspense boundary of the transition commits in a fallback state**. Only the suspense boundaries that are triggered and commit in a fallback state when the transition first occurs (and all subsequent suspense boundaries in the initial suspense boundary's subtree) are considered a part of the transition\r\n    * **A child suspense boundary of the transition resolves**\r\n   \r\nWhen we call `onTransitionProgress`, we call the function with a `pending` array. This array contains the names of the transition's suspense boundaries that are still in a fallback state"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-08T15:55:53Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-08T15:55:53Z"},"message":"Land forked reconciler changes (#24878)\n\nThis applies forked changes from the \"new\" reconciler to the \"old\" one.\r\n\r\nIncludes:\r\n\r\n- 67de5e3 [FORKED] Hidden trees should capture Suspense\r\n- 6ab05ee [FORKED] Track nearest Suspense handler on stack\r\n- 051ac55 [FORKED] Add HiddenContext to track if subtree is hidden","tree":{"sha":"aa155b68f0bd58a7aac4947cf7614b822033d0fc","url":"https://api.github.com/repos/facebook/react/git/trees/aa155b68f0bd58a7aac4947cf7614b822033d0fc"},"url":"https://api.github.com/repos/facebook/react/git/commits/30eb267abdb032bf78e6394bd9ad79102e1d3fb1","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiyFOJCRBK7hj4Ov3rIwAAovsIAA2IQzcJdxrvcR5I+HYMKFKS\nJGHhLvq307ziwwze8RC5TJQk9AsNNxrjx8mm6xoKVP6QPCoXfHQha8o6iyuDbUjT\njUDc4JHCvUCIx6ZHRZGKdjYVGRhUhTRjMfKdNzbsTvulwo8ULWcN3pEaqOt5b3jf\nmLGDJYhtlTLIjN0jOUT8oI83Ja1dLuoHrt5d8dHmlgS+lr/lp5wjc4c9k8iluPOw\nFeX9tDW9fhnTHHnyxemnfzUca3imfaVpuo+ivdh+A6Ybt5fDwwA0D8ykRlWT4Q6t\nleOCRVJVIBgoUfUMrKEHEm7euE6xTuBJEf65pDV0wblofKesT5ivD2CNhhehvpE=\n=YPS8\n-----END PGP SIGNATURE-----\n","payload":"tree aa155b68f0bd58a7aac4947cf7614b822033d0fc\nparent 5e4e2dae0ba1836d26fa4e5edb4475d3b3e0a60c\nauthor Andrew Clark <git@andrewclark.io> 1657295753 -0400\ncommitter GitHub <noreply@github.com> 1657295753 -0400\n\nLand forked reconciler changes (#24878)\n\nThis applies forked changes from the \"new\" reconciler to the \"old\" one.\r\n\r\nIncludes:\r\n\r\n- 67de5e3 [FORKED] Hidden trees should capture Suspense\r\n- 6ab05ee [FORKED] Track nearest Suspense handler on stack\r\n- 051ac55 [FORKED] Add HiddenContext to track if subtree is hidden"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-08T15:51:40Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-08T15:51:40Z"},"message":"Defer setState callbacks until component is visible (#24872)\n\nA class component `setState` callback should not fire if a component is inside a\r\nhidden Offscreen tree. Instead, it should wait until the next time the component\r\nis made visible.","tree":{"sha":"9bd2b6612cb1d8516924ab8eefff84207590918d","url":"https://api.github.com/repos/facebook/react/git/trees/9bd2b6612cb1d8516924ab8eefff84207590918d"},"url":"https://api.github.com/repos/facebook/react/git/commits/5e4e2dae0ba1836d26fa4e5edb4475d3b3e0a60c","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiyFKMCRBK7hj4Ov3rIwAA+5wIAKvqiltiTzGum4KuemQ+ECMv\nMKss5vsZAXpmQ+uDzARTvt4f6L9gGMB+18W0JHyUmgL/p2OrUOAQXqsWu/lO7X6T\nfnnopWkbi40I/GXGCntqVkKhK+8bYnmeL5k7nGpImcqgqN6sPo8GPdcJIDM+FaMF\nDAHYskseoquWhGj5mYvIZAk1Tw5Lh314QpiBhyFHZnO9+wRq1J3/MNJCeN+qrwwI\n1EYpQvFA1TKUzLF8ILHyNWzg3wNaGPcM3thpGGMEbzVb6Jmd2TrQb436hWhIMPU7\ndDwf066dXqUlSDnXDEGXTA3AIWUvMYVXy9epMbyNIpoNGdUeMwTEKwpjwq8V3CE=\n=Wzri\n-----END PGP SIGNATURE-----\n","payload":"tree 9bd2b6612cb1d8516924ab8eefff84207590918d\nparent 95e22ff528c875b090de51a0fb0d83181c4d1111\nauthor Andrew Clark <git@andrewclark.io> 1657295500 -0400\ncommitter GitHub <noreply@github.com> 1657295500 -0400\n\nDefer setState callbacks until component is visible (#24872)\n\nA class component `setState` callback should not fire if a component is inside a\r\nhidden Offscreen tree. Instead, it should wait until the next time the component\r\nis made visible."}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-07T20:57:42Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-07T20:57:42Z"},"message":"Delete Partial Renderer SSR implementation (#24868)\n\nThis removes the old server rendering implementation (the \"Partial Renderer\").\r\nIt was replaced in React 18 with a new streaming implementation (Fizz).\r\n\r\nWe hadn't removed it from the codebase yet because Facebook hadn't finished\r\nrolling out Fizz in production; it's been behind a feature flag while we run\r\nperformance tests and migrate our internal infrastructure.\r\n\r\nThe diff to land Fizz will land imminently, and once it does, we can merge\r\nthis commit.","tree":{"sha":"1ec7f63b6f15d5ab25d6244ab94006fdf249594a","url":"https://api.github.com/repos/facebook/react/git/trees/1ec7f63b6f15d5ab25d6244ab94006fdf249594a"},"url":"https://api.github.com/repos/facebook/react/git/commits/95e22ff528c875b090de51a0fb0d83181c4d1111","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJix0jGCRBK7hj4Ov3rIwAAfCQIAFICM37H1LYn0VoX4jArbgeU\nu9jcaZuoj5OLv8Hml62bPhMUM/5qd+xeLJtJxRXzEzLiDwumn/NzDhofjHOlOjxy\nnT/F4lch8bzZg1y6kI1NPFjuy22iIbhtFqc/6pWkYPndidLh5lOy7fBlkUNFDxjQ\nzGBmnGsvq3Iz4Rk5RBv/SD9XCnVxuO4/uvjGTBVtsjseHuynvRruWMEMi04hnDzt\nulxI94st4ldpNvo7tjFquynCBNK1+58A9yw88sFV6xFrdKO3CDgHsxN45QGQYSQo\njAROy2+GyMlCqt2+dhm+pc5c1fCqPxvM1ehhZu50AiXyfO/aixstIMb2eO0TKlc=\n=pvB4\n-----END PGP SIGNATURE-----\n","payload":"tree 1ec7f63b6f15d5ab25d6244ab94006fdf249594a\nparent c3b18571dbf27b47675619aefc9cc9a4a06dbe18\nauthor Andrew Clark <git@andrewclark.io> 1657227462 -0400\ncommitter GitHub <noreply@github.com> 1657227462 -0400\n\nDelete Partial Renderer SSR implementation (#24868)\n\nThis removes the old server rendering implementation (the \"Partial Renderer\").\r\nIt was replaced in React 18 with a new streaming implementation (Fizz).\r\n\r\nWe hadn't removed it from the codebase yet because Facebook hadn't finished\r\nrolling out Fizz in production; it's been behind a feature flag while we run\r\nperformance tests and migrate our internal infrastructure.\r\n\r\nThe diff to land Fizz will land imminently, and once it does, we can merge\r\nthis commit."}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-07-07T14:43:25Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-07T14:43:25Z"},"message":"[DevTools][Bugfix] Fix DevTools Perf Issue When Unmounting Large React Subtrees (#24863)\n\nWe've recently had multiple reports where, if React DevTools was installed, unmounting large React subtrees would take a huge performance hit (ex. from 50ms to 7 seconds). \r\n\r\nDigging in more, we realized for every fiber that unmounts, we called `untrackFibers`, which calls `clearTimeout` (and does some work manipulating a set, but this wasn't the bulk of the time). We ten call `recordUnmount`, which adds the timer back. Adding and removing the timer so many times was taking upwards of 50ms per timer add/remove call, which was resulting in exorbitant amounts of time spent in DevTools deleting subtrees.\r\n\r\nIt looks like we are calling `untrackFibers` so many times to avoid a race condition with Suspense children where we unmount them twice (first a \"virtual\" unmount when the suspense boundary is toggled from visible to invisible, and then an actual unmount when the new children are rendered) without modifying `fiberIDMap`. We can fix this race condition by using the `untrackFibersSet` as a lock and not calling `recordUnmount` if the fiber is in the set and hasn't been processed yet. This works because the only way fibers are added in the set is via `recordUnmount` anyway.\r\n\r\nThis PR also adds a test to make sure this change doesn't regress the previous behavior.\r\n\r\n**Before**\r\n![image](https://user-images.githubusercontent.com/2735514/177655428-774ee306-0568-49ce-987e-b5213b613265.png)\r\n\r\n**After**\r\n![image](https://user-images.githubusercontent.com/2735514/177655604-a217583f-787e-438e-b6f9-18953fe32444.png)","tree":{"sha":"33a92ba94183169424dec326d5deeb2e32d0ceb1","url":"https://api.github.com/repos/facebook/react/git/trees/33a92ba94183169424dec326d5deeb2e32d0ceb1"},"url":"https://api.github.com/repos/facebook/react/git/commits/c3b18571dbf27b47675619aefc9cc9a4a06dbe18","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixvENCRBK7hj4Ov3rIwAAyX0IALJWlKDBtT4l4WHRCq6q0cVX\n/3bdkk0tSTqwy24wTSBIn0is/x3/d1gYXiL1lSRVvwWBvpLQUx66YYjTWbdjXMz+\nJxGER6Z5s95EzA6ROeGO2ybylnBgkBq/scP8woO+QzZzHTHLKJfApWwf9kJu4WCL\n8fDkMwL6dyNUkVvEBrNBRCstJqq4vNL5kzy22jae69cfNvDBb/ULA6VTbMgMLFPD\nyg2nb/WWslMiMBZuMzEgytKh59G1uV6P3EpfAwqcvZnmujUBo+V3hXp2zz3PQ6p/\nIWIIFVI6lNj2n41RfOVBt6YGNuOQ5iz3ZtG8IPv2w5sqUj58KwbIdjC1FAVuN1M=\n=85MW\n-----END PGP SIGNATURE-----\n","payload":"tree 33a92ba94183169424dec326d5deeb2e32d0ceb1\nparent 8e35b5060875c875f468878f94bc3c0d7d45c52d\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1657205005 -0400\ncommitter GitHub <noreply@github.com> 1657205005 -0400\n\n[DevTools][Bugfix] Fix DevTools Perf Issue When Unmounting Large React Subtrees (#24863)\n\nWe've recently had multiple reports where, if React DevTools was installed, unmounting large React subtrees would take a huge performance hit (ex. from 50ms to 7 seconds). \r\n\r\nDigging in more, we realized for every fiber that unmounts, we called `untrackFibers`, which calls `clearTimeout` (and does some work manipulating a set, but this wasn't the bulk of the time). We ten call `recordUnmount`, which adds the timer back. Adding and removing the timer so many times was taking upwards of 50ms per timer add/remove call, which was resulting in exorbitant amounts of time spent in DevTools deleting subtrees.\r\n\r\nIt looks like we are calling `untrackFibers` so many times to avoid a race condition with Suspense children where we unmount them twice (first a \"virtual\" unmount when the suspense boundary is toggled from visible to invisible, and then an actual unmount when the new children are rendered) without modifying `fiberIDMap`. We can fix this race condition by using the `untrackFibersSet` as a lock and not calling `recordUnmount` if the fiber is in the set and hasn't been processed yet. This works because the only way fibers are added in the set is via `recordUnmount` anyway.\r\n\r\nThis PR also adds a test to make sure this change doesn't regress the previous behavior.\r\n\r\n**Before**\r\n![image](https://user-images.githubusercontent.com/2735514/177655428-774ee306-0568-49ce-987e-b5213b613265.png)\r\n\r\n**After**\r\n![image](https://user-images.githubusercontent.com/2735514/177655604-a217583f-787e-438e-b6f9-18953fe32444.png)\r\n"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-07-06T13:38:28Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-06T13:38:28Z"},"message":"[Transition Tracing] Refactor Code to Remove OffscreeInstance TODOs (#24855)\n\nRefactored code to pass flow and remove TODOs introduced in #24846","tree":{"sha":"d56fea0fbddaf595d25a80a5deecc047cff08899","url":"https://api.github.com/repos/facebook/react/git/trees/d56fea0fbddaf595d25a80a5deecc047cff08899"},"url":"https://api.github.com/repos/facebook/react/git/commits/8e35b5060875c875f468878f94bc3c0d7d45c52d","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixZBUCRBK7hj4Ov3rIwAApB4IAF0LLJzXsYVg+7kl85XEFzL5\nekc4C1rKQwAUVrtU2bd4nV1j2l9dXbZq22THEx5Q1fd4IasOpz/fQK8DNPCJ8e34\nE/dPNXG+a8l4DwIF6S67Con/p9fG8IUrfPfJVx9l8I2bLQa1u1/vcn45uYivZ2Sp\n7VrwUO+PrXlpwxCC1u8PrgZ8xPonVX8pRi/gqRUyx3yLR4KANPOxXA8KPu4Eh/qU\nR3ronVa59oXxjc5ilvw0GgVTGCiIKYnZm6YwopfQqy2m2CgADU6CegnLGOFGccci\nnRz4QyYoE1RA1KEx4qyN5IPk4YhYUKYoyAP3xxyT3DSu7eAFgDxh2QeMV8D9XJk=\n=x/XQ\n-----END PGP SIGNATURE-----\n","payload":"tree d56fea0fbddaf595d25a80a5deecc047cff08899\nparent deab1263a8b8a2cea96bcbff27358570cccc7284\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1657114708 -0400\ncommitter GitHub <noreply@github.com> 1657114708 -0400\n\n[Transition Tracing] Refactor Code to Remove OffscreeInstance TODOs (#24855)\n\nRefactored code to pass flow and remove TODOs introduced in #24846 "}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-07-06T13:37:46Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-06T13:37:46Z"},"message":"[Transition Tracing] Change Transition Type Passed Pending Transitions (#24856)\n\nThis PR changes the type of the object we store in the pending transitions callbacks map. Previously, we were recreating the transition object that we initially created during `startTransition`. However, we can actually reuse the object instead (and it also gives us a stable way to identify a transition). This PR changes the implementation to reuse the transition object instead of creating a new one","tree":{"sha":"e4e14400b5abf128d30d2e0d5e07bf350b674fe8","url":"https://api.github.com/repos/facebook/react/git/trees/e4e14400b5abf128d30d2e0d5e07bf350b674fe8"},"url":"https://api.github.com/repos/facebook/react/git/commits/deab1263a8b8a2cea96bcbff27358570cccc7284","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixZAqCRBK7hj4Ov3rIwAAKEoIAJlZuBuuX7JeZ8pxbPDdrA58\nA7hd+qCmpPCJpvIe1aWKJxqm0DylRLXc1SskiUHgZ/ABdvT3A4Ibb+fSjB48nESZ\n7xTpbkcYS7NoxoyXdQ/gOrnJCFrru0n7cGbUFmWe7JcLM+epNr+OjOL6tUo0x6Nr\n6vcwdQALTYos6omn9ay/Tn8U9MrEoBaBaK2xiGQAbY3GoeqQ3oz47qet1Pcg42IP\nGI5WV40AqmbplK7sfk4vf3nlLiNxlN/j3JFxoImGjV0fEsSsxCYFTMqPKMeTQWKX\nb0CoevZlWo1k0knQ6MJfJb6DY7LMF8e+qqMZgqnuffE90mow0KIzVg0m6/R3UoQ=\n=u+nw\n-----END PGP SIGNATURE-----\n","payload":"tree e4e14400b5abf128d30d2e0d5e07bf350b674fe8\nparent 82e9e9909876591dbe808cdac7110610e63c3896\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1657114666 -0400\ncommitter GitHub <noreply@github.com> 1657114666 -0400\n\n[Transition Tracing] Change Transition Type Passed Pending Transitions (#24856)\n\nThis PR changes the type of the object we store in the pending transitions callbacks map. Previously, we were recreating the transition object that we initially created during `startTransition`. However, we can actually reuse the object instead (and it also gives us a stable way to identify a transition). This PR changes the implementation to reuse the transition object instead of creating a new one "}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-05T21:51:27Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-05T21:51:27Z"},"message":"Suspending inside a hidden tree should not cause fallbacks to appear (#24699)\n\n* [FORKED] Hidden trees should capture Suspense\r\n\r\nIf something suspends inside a hidden tree, it should not affect\r\nanything in the visible part of the UI. This means that Offscreen acts\r\nlike a Suspense boundary whenever it's in its hidden state.\r\n\r\n* Add previous commit to forked revisions","tree":{"sha":"2e7b5aa34d5e147ab951dc7fc6a7b80fcd9120a9","url":"https://api.github.com/repos/facebook/react/git/trees/2e7b5aa34d5e147ab951dc7fc6a7b80fcd9120a9"},"url":"https://api.github.com/repos/facebook/react/git/commits/82e9e9909876591dbe808cdac7110610e63c3896","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixLJfCRBK7hj4Ov3rIwAAaXIIAJ1Sjebhmb4GQAMy97i3GISv\n4v3yBTAFdlLduunQ0n+GO3/JMUCW/wZPWe1Zo7Rd0swTOZMyWxxV0QGR6P5kjBMh\nkybpItJ1Xe+0ayUkQvYYz90oNugPPbql4U/hTRMFUiXUUSS6/DgYsfMh3XlJ+eCV\nfpHA7m/Y8OHWv0p9jnC8zjaPHPFs5QWaOcgEtHM+nsAsY/YwAmVJ4/r6JPU/yD9L\n/x4puaUAvOFNAjyNi9BIy4C6VBoNkmpz1X5aJLmsba+4Z7eWsdjDS6o0VEsKXr9L\nSpxpajHOvTa1JgKwdNEr1DUMbujtzJpyLlyWqv7DdmBhczgFiJiT6Da/YGSz1Vs=\n=M++x\n-----END PGP SIGNATURE-----\n","payload":"tree 2e7b5aa34d5e147ab951dc7fc6a7b80fcd9120a9\nparent c1f5884ffeceb8be2277e10c81aeaffca2dfe9d8\nauthor Andrew Clark <git@andrewclark.io> 1657057887 -0400\ncommitter GitHub <noreply@github.com> 1657057887 -0400\n\nSuspending inside a hidden tree should not cause fallbacks to appear (#24699)\n\n* [FORKED] Hidden trees should capture Suspense\r\n\r\nIf something suspends inside a hidden tree, it should not affect\r\nanything in the visible part of the UI. This means that Offscreen acts\r\nlike a Suspense boundary whenever it's in its hidden state.\r\n\r\n* Add previous commit to forked revisions"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-07-05T15:40:44Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-05T15:40:44Z"},"message":"Add missing null checks to OffscreenInstance code (#24846)\n\n`stateNode` is any-typed, so when reading from `stateNode` we should always cast\r\nit to the specific type for that type of work. I noticed a place in the commit\r\nphase where OffscreenInstance wasn't being cast. When I added the type\r\nassertion, it exposed some type errors where nullable values were being accessed\r\nwithout first being refined.\r\n\r\nI added the required null checks without verifying the logic of the existing\r\ncode. If the existing logic was correct, then the extra null checks won't have\r\nany affect on the behavior, because all they do is refine from a nullable type\r\nto a non-nullable type in places where the type was assumed to already be\r\nnon-nullable. But the result looks a bit fishy to me, so I also left behind some\r\nTODOs to follow up and verify it's correct.","tree":{"sha":"c2086cf4bb7654eaf14e9a030a8c550de923ff80","url":"https://api.github.com/repos/facebook/react/git/trees/c2086cf4bb7654eaf14e9a030a8c550de923ff80"},"url":"https://api.github.com/repos/facebook/react/git/commits/c1f5884ffeceb8be2277e10c81aeaffca2dfe9d8","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixFt8CRBK7hj4Ov3rIwAANjQIAI7n0JzCoCtoBtrDb7lMnYSG\nqUYb2v/0WRKTMXquYSXBtd+ShN2Qr+b5t64gW96aDRsMF7y8s2d6MlpOM6p7P7Dr\nWu+K1xOdUZznHP5KT6gHnTYRm5PBHqJJiBlBAkdZpn9oOND9aIIZoiRgQOfj9Ovd\nr9A4Y86O+EC9Rg9PRA7iTrSlo7tz2hD9iWRX2STLsILUglG0Gj3zrybd1PXgS7oN\nCd45C7fo4Za5UjHQZNoQBvdrNP/M7ld1Ku2CW9KmLWwwsAZuJlSmvbu7iXdBR8Qp\nb5AdF0MqMkCyTEyHmPuQ2EGxou6s4VgD6p8ojPYS4UjRgW58FcYrvKnhsTrw3O4=\n=uozk\n-----END PGP SIGNATURE-----\n","payload":"tree c2086cf4bb7654eaf14e9a030a8c550de923ff80\nparent 4cd788aef03d8f32c03e4dac4d0cf28b220cedfb\nauthor Andrew Clark <git@andrewclark.io> 1657035644 -0400\ncommitter GitHub <noreply@github.com> 1657035644 -0400\n\nAdd missing null checks to OffscreenInstance code (#24846)\n\n`stateNode` is any-typed, so when reading from `stateNode` we should always cast\r\nit to the specific type for that type of work. I noticed a place in the commit\r\nphase where OffscreenInstance wasn't being cast. When I added the type\r\nassertion, it exposed some type errors where nullable values were being accessed\r\nwithout first being refined.\r\n\r\nI added the required null checks without verifying the logic of the existing\r\ncode. If the existing logic was correct, then the extra null checks won't have\r\nany affect on the behavior, because all they do is refine from a nullable type\r\nto a non-nullable type in places where the type was assumed to already be\r\nnon-nullable. But the result looks a bit fishy to me, so I also left behind some\r\nTODOs to follow up and verify it's correct."}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-30T17:16:08Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-30T17:16:08Z"},"message":"Revert \"Revert [Transition Tracing] Refactor Transition Tracing Root Code\" (#24830)\n\n* refactor root\r\n\r\n* old\r\n\r\n* Add comments and push actual marker instance in pushMarkerInstance\r\n\r\n* old\r\n\r\n* refactor pushRootMarkerInstance\r\n\r\n* old\r\n\r\n* fix test","tree":{"sha":"54d3e777c37421691d43e0febc566494cf3e4ad0","url":"https://api.github.com/repos/facebook/react/git/trees/54d3e777c37421691d43e0febc566494cf3e4ad0"},"url":"https://api.github.com/repos/facebook/react/git/commits/4cd788aef03d8f32c03e4dac4d0cf28b220cedfb","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivdpYCRBK7hj4Ov3rIwAAK2AIAKbyOurl2sWTqWDbBGURAaev\nao7HD4y8eRfiMTkG27Go9hlMjYYag3O6T1GNejLBY6Kf9dEuRXNXxXQwV6yGZq32\nik1NmFgwy3MErf/vvwLSHY5ZbGmB0dM4YPZdYX669SotsHrYUFk7oJWlqqVMu8Ex\n8KTQGE8AWXgmVRdo7NylCPbZ/r5sIoDxsnHQWv+yUK00MZJJhWOUJWqe72MRLgfA\n/Q375eUKA/IdWhb58RM7tW7ynXwFtVRX6/Azgn/i/GB5ij9RmOrdfRl9oUe1TpgK\npSwrKGNqFDUK+1nJcip/FRcgwwKz4bcS/Z+BuqRGSr8nkN+kYUSfmTjpjzauVSE=\n=477j\n-----END PGP SIGNATURE-----\n","payload":"tree 54d3e777c37421691d43e0febc566494cf3e4ad0\nparent e61fd91f5c523adb63a3b97375ac95ac657dc07f\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1656609368 -0400\ncommitter GitHub <noreply@github.com> 1656609368 -0400\n\nRevert \"Revert [Transition Tracing] Refactor Transition Tracing Root Code\" (#24830)\n\n* refactor root\r\n\r\n* old\r\n\r\n* Add comments and push actual marker instance in pushMarkerInstance\r\n\r\n* old\r\n\r\n* refactor pushRootMarkerInstance\r\n\r\n* old\r\n\r\n* fix test"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-30T15:48:25Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-30T15:48:25Z"},"message":"Revert \"[Transition Tracing] Refactor Transition Tracing Root Code (#24766)\" (#24829)\n\nThis reverts commit 401296310fbc6a9e769936eda6a6d0269e9c84d0 because it's\r\nfailing on main, likely due to conflict with something that landed before the\r\nPR was merged. Need to rebase and fix.","tree":{"sha":"1a3f7acc2b453f050124d90a947b64a285c02fc4","url":"https://api.github.com/repos/facebook/react/git/trees/1a3f7acc2b453f050124d90a947b64a285c02fc4"},"url":"https://api.github.com/repos/facebook/react/git/commits/e61fd91f5c523adb63a3b97375ac95ac657dc07f","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivcXJCRBK7hj4Ov3rIwAAqnUIAE4Oo/4AQHTImykm9MRol0Qc\n63O7HsTjuCOVthLhUwPNvwxiSKbEWu2eiSLb99E6fHX4Xatf+4ZTswashvD6My2U\nqpcE/DWzCdpt9pJu7WQW+0CbXNKO5NcKDcT1dLTj0PthjQjyJj07PF7dGlwk1Lv3\niY35y0oYSJ/OqfHrx+aIA+JSXc3QXpDB+1CygwuYpSLilJ/hr5dQ7zL/TMRL29E5\nuKNSKDCfRlTA7X7CKy4iruFA9v6sHmxj2kTsYavS0XgmPi8YweuX3MfFRfP1u0FX\nQHcLYBTVdUSB25LjwfymSWrmlGz6CGnhtEyVnNl0DfLhTVp3aE2BH+vgNPALIdk=\n=yWOB\n-----END PGP SIGNATURE-----\n","payload":"tree 1a3f7acc2b453f050124d90a947b64a285c02fc4\nparent 401296310fbc6a9e769936eda6a6d0269e9c84d0\nauthor Andrew Clark <git@andrewclark.io> 1656604105 -0400\ncommitter GitHub <noreply@github.com> 1656604105 -0400\n\nRevert \"[Transition Tracing] Refactor Transition Tracing Root Code (#24766)\" (#24829)\n\nThis reverts commit 401296310fbc6a9e769936eda6a6d0269e9c84d0 because it's\r\nfailing on main, likely due to conflict with something that landed before the\r\nPR was merged. Need to rebase and fix."}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-30T15:16:32Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-30T15:16:32Z"},"message":"[Transition Tracing] Refactor Transition Tracing Root Code (#24766)\n\nThis PR refactors the transition tracing root code by reusing the tracing marker code. Namely it:\r\n* Refactors the tracing marker code so that it takes a tracing marker instance instead of a tracing marker fiber and rename the stack to `markerInstance` instead of `tracingMarker`\r\n* Pushes the root code onto the stack\r\n* Moves the instantiation of `root.incompleteTransitions` to the begin phase when we are pushing the root to the stack rather than in the commit phase","tree":{"sha":"763ee57d3978d922d6bc19ced0cd80c09851f274","url":"https://api.github.com/repos/facebook/react/git/trees/763ee57d3978d922d6bc19ced0cd80c09851f274"},"url":"https://api.github.com/repos/facebook/react/git/commits/401296310fbc6a9e769936eda6a6d0269e9c84d0","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivb5QCRBK7hj4Ov3rIwAAO/EIACmMAJV0y8n4Tf8Stl2kJrji\nH/Gd8Y26XOTabRdHyw/BguQ8aNPcL3+LjHfkU3oDO1TXHqph8MXQI8NZcOGRTpfa\nFZm6Tys3Zhs03M6A9y5juQqzYMIVyZyb6sv2q4LzjyHs2FuydUTmhUdvsISMIOeC\nfUs9cMDNAJh2roch25BjBylnkhJ0S19HVKygSC0EWWELTt2+f9zYL9lCUlOKAiT0\ncIcnH7o6sk+q9zqbutAXI+KfTnw5Cpj75kwj2C4PtQy4Y1ZbOb8vdW6YefOwRMhY\n0u0BaVRMzqUvBrUDr2hOTU3BfJCiSCSwZEPtkjiapAu6yrwmW7MALXBDz3nmU/I=\n=Y5lz\n-----END PGP SIGNATURE-----\n","payload":"tree 763ee57d3978d922d6bc19ced0cd80c09851f274\nparent 1859329021892484051339a76c2250fa4ca5f77e\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1656602192 -0400\ncommitter GitHub <noreply@github.com> 1656602192 -0700\n\n[Transition Tracing] Refactor Transition Tracing Root Code (#24766)\n\nThis PR refactors the transition tracing root code by reusing the tracing marker code. Namely it:\r\n* Refactors the tracing marker code so that it takes a tracing marker instance instead of a tracing marker fiber and rename the stack to `markerInstance` instead of `tracingMarker`\r\n* Pushes the root code onto the stack\r\n* Moves the instantiation of `root.incompleteTransitions` to the begin phase when we are pushing the root to the stack rather than in the commit phase"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-30T14:03:29Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-30T14:03:29Z"},"message":"Track nearest Suspense handler on stack (#24585)\n\n* [FORKED] Add HiddenContext to track if subtree is hidden\r\n\r\nThis adds a new stack cursor for tracking whether we're rendering inside\r\na subtree that's currently hidden.\r\n\r\nThis corresponds to the same place where we're already tracking the\r\n\"base lanes\" needed to reveal a hidden subtree — that is, when going\r\nfrom hidden -> visible, the base lanes are the ones that we skipped\r\nover when we deferred the subtree. We must includes all the base lanes\r\nand their updates in order to avoid an inconsistency with the\r\nsurrounding content that already committed.\r\n\r\nI consolidated the base lanes logic and the hidden logic into the same\r\nset of push/pop calls.\r\n\r\nThis is intended to replace the InvisibleParentContext that is currently\r\npart of SuspenseContext, but I haven't done that part yet.\r\n\r\n* Add previous commit to forked revisions\r\n\r\n* [FORKED] Track nearest Suspense handler on stack\r\n\r\nInstead of traversing the return path whenever something suspends to\r\nfind the nearest Suspense boundary, we can push the Suspense boundary\r\nonto the stack before entering its subtree. This doesn't affect the\r\noverall algorithm that much, but because we already do all the same\r\nlogic in the begin phase, we can save some redundant work by tracking\r\nthat information on the stack instead of recomputing it every time.\r\n\r\n* Add previous commit to forked revisions","tree":{"sha":"1a3f7acc2b453f050124d90a947b64a285c02fc4","url":"https://api.github.com/repos/facebook/react/git/trees/1a3f7acc2b453f050124d90a947b64a285c02fc4"},"url":"https://api.github.com/repos/facebook/react/git/commits/1859329021892484051339a76c2250fa4ca5f77e","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiva0xCRBK7hj4Ov3rIwAApcgIABlBbgzt9kJvBsDyVPjQ28N5\nOwOgurce+SYWQDpCwtG4lk0/fSjGpmtcpJRS8yIUQQ5nhJCALXLBoT1236x/FAXl\njGOoNV7oQKILi1tBV05tdYFjqnOL8b5kBRI1Al0g0ojygfbj3aJkwSRSeOZPqnJx\nizaVE+HEkb9sn7pVj6mvAruu7FGjRjmaPjghwfX+BHxlI6rp5wnDBvJ6G7zxkSjX\nhGaiyoDzDFixFOjDVm+NyovGykhwFzLqKl31exT0XL1u2W7JdZbUWEPc2dfYGlZl\nssc0ocRPm5wf4C5QHVOLQBuh+PFH8C0RfRYFvOuMfGxP64e7lvAlfUQJUN/TXNE=\n=Brc0\n-----END PGP SIGNATURE-----\n","payload":"tree 1a3f7acc2b453f050124d90a947b64a285c02fc4\nparent a7b192e0f16a5a585796c78cfdb688845d7710a5\nauthor Andrew Clark <git@andrewclark.io> 1656597809 -0400\ncommitter GitHub <noreply@github.com> 1656597809 -0400\n\nTrack nearest Suspense handler on stack (#24585)\n\n* [FORKED] Add HiddenContext to track if subtree is hidden\r\n\r\nThis adds a new stack cursor for tracking whether we're rendering inside\r\na subtree that's currently hidden.\r\n\r\nThis corresponds to the same place where we're already tracking the\r\n\"base lanes\" needed to reveal a hidden subtree — that is, when going\r\nfrom hidden -> visible, the base lanes are the ones that we skipped\r\nover when we deferred the subtree. We must includes all the base lanes\r\nand their updates in order to avoid an inconsistency with the\r\nsurrounding content that already committed.\r\n\r\nI consolidated the base lanes logic and the hidden logic into the same\r\nset of push/pop calls.\r\n\r\nThis is intended to replace the InvisibleParentContext that is currently\r\npart of SuspenseContext, but I haven't done that part yet.\r\n\r\n* Add previous commit to forked revisions\r\n\r\n* [FORKED] Track nearest Suspense handler on stack\r\n\r\nInstead of traversing the return path whenever something suspends to\r\nfind the nearest Suspense boundary, we can push the Suspense boundary\r\nonto the stack before entering its subtree. This doesn't affect the\r\noverall algorithm that much, but because we already do all the same\r\nlogic in the begin phase, we can save some redundant work by tracking\r\nthat information on the stack instead of recomputing it every time.\r\n\r\n* Add previous commit to forked revisions"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-30T13:44:54Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-30T13:44:54Z"},"message":"Add test gate alias for Offscreen (#24749)\n\nOffscreen is only enabled in the www and experimental channels. Instead\r\nof listing these on every Offscreen test, I added a test gate alias\r\ncalled `enableOffscreen`. Makes it easier to grep for these, and edit or\r\nremove the channels later.","tree":{"sha":"2218e7379920c6746953986597247b27798f5d2b","url":"https://api.github.com/repos/facebook/react/git/trees/2218e7379920c6746953986597247b27798f5d2b"},"url":"https://api.github.com/repos/facebook/react/git/commits/a7b192e0f16a5a585796c78cfdb688845d7710a5","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivajWCRBK7hj4Ov3rIwAAlDsIABEJeqFrmIJxNhTx60Wv4cjX\nmXHPPpxImT8Ey8e65cra8I+SP/x+51FlWHRR+EAT3oYzopG20tislDALw/wZJUg4\nhBpTVdcxmOtYsVtIHu5727uLIGzZqhxqlU1uVMpnQsll8fliXRYnAuHcpVIgtaFh\narFrua/3/9ns5FeLneu6RFuS2KQ24QvjDYLU0dOdoFCvwh5a/OPajluwRh84yOyW\ndVueqki7S6RgKMy73LXLgZCR0QJtQF+SGD0/ndqi06Ae0ZP0GEl5B7JarZVibEqm\nkMpDc+lKU4jh1u2vCUwRoFf/E/YpBmI3P08HX/r17a3lPacIt9HRP0Or7LguF9U=\n=mx68\n-----END PGP SIGNATURE-----\n","payload":"tree 2218e7379920c6746953986597247b27798f5d2b\nparent 6b6cf8311c05a10667c852e833d6f7f51fa476c7\nauthor Andrew Clark <git@andrewclark.io> 1656596694 -0400\ncommitter GitHub <noreply@github.com> 1656596694 -0400\n\nAdd test gate alias for Offscreen (#24749)\n\nOffscreen is only enabled in the www and experimental channels. Instead\r\nof listing these on every Offscreen test, I added a test gate alias\r\ncalled `enableOffscreen`. Makes it easier to grep for these, and edit or\r\nremove the channels later."}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-30T03:31:42Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-30T03:31:42Z"},"message":"Land forked reconciler changes (#24817)\n\nThis applies forked changes from the \"new\" reconciler to the \"old\" one.\r\n\r\nIncludes:\r\n\r\n- d410f0a [FORKED] Bugfix: Offscreen instance is null during setState\r\n- 58bb117 [FORKED] Check for infinite update loops even if unmounted\r\n- 31882b5 [FORKED] Bugfix: Revealing a hidden update\r\n- 17691ac [FORKED] Don't update childLanes until after current render","tree":{"sha":"1f8b261885a40a9ac12e49a8c61a724bd593294a","url":"https://api.github.com/repos/facebook/react/git/trees/1f8b261885a40a9ac12e49a8c61a724bd593294a"},"url":"https://api.github.com/repos/facebook/react/git/commits/6b6cf8311c05a10667c852e833d6f7f51fa476c7","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivRkeCRBK7hj4Ov3rIwAA/9EIAHPhwsyFKqBmY4t/VdEKLtRC\nlu6X2qzvOwrEWFj9Ywm/NwdeZyzdLOGlJRHFyospLvgwM70xCS8ZRqZ+NzEQBSOE\nb8Q+RpFwx31mLgrv9D6fctW/uS8izxLA4ZynXNERUmDgNpTq5OcUYMtVpmhmsdpG\nysdh+8UpmAZDMVfUwP/yv6LMM9CEZaeURBiVk7SZx0IK+c5Js5ht93f+QfHcg9sx\nZFxH/l6Tz9idhGzcGqHCdSEU0QjH5yfznag45af536NV4+lCTaFXTxPj8JDn6uWs\n9xNj+6IZZEPoCEH0jcH2oqoQRBjU9wp10kSXWQXhgAHtjYTibxjfYeN3/kYBros=\n=fqEz\n-----END PGP SIGNATURE-----\n","payload":"tree 1f8b261885a40a9ac12e49a8c61a724bd593294a\nparent 4e1fcfa77175765a7d51d70a2e519569012593d8\nauthor Andrew Clark <git@andrewclark.io> 1656559902 -0400\ncommitter GitHub <noreply@github.com> 1656559902 -0400\n\nLand forked reconciler changes (#24817)\n\nThis applies forked changes from the \"new\" reconciler to the \"old\" one.\r\n\r\nIncludes:\r\n\r\n- d410f0a [FORKED] Bugfix: Offscreen instance is null during setState\r\n- 58bb117 [FORKED] Check for infinite update loops even if unmounted\r\n- 31882b5 [FORKED] Bugfix: Revealing a hidden update\r\n- 17691ac [FORKED] Don't update childLanes until after current render"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-30T00:54:06Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-30T00:54:06Z"},"message":"[DevTools] Resign Timeline Profiler Sidebar (#24816)\n\nThis PR:\r\n* Redesigned the sidebar to resemble the flamegraph profiler sidebar and added title and timestamp to the sidebar\r\n* Added ability to copy the component stack (for places where you're unable to link to source)\r\n\r\nhttps://user-images.githubusercontent.com/2735514/176564897-5301d6d4-429a-4ea3-86cd-74427cff4ce6.mov","tree":{"sha":"38e5f513f688aa0b6ab780a89d01f9e48685c03f","url":"https://api.github.com/repos/facebook/react/git/trees/38e5f513f688aa0b6ab780a89d01f9e48685c03f"},"url":"https://api.github.com/repos/facebook/react/git/commits/4e1fcfa77175765a7d51d70a2e519569012593d8","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivPQuCRBK7hj4Ov3rIwAAJ9AIAG6OmRQlbaFH0f+WzPpJsQQg\nwD2TgiWaKNY7Kz1EmqYld6GhiTz+ujL4bFOsWrWqzbcI62FBsvgbfTeaCPjEIOFd\nDcEdOvEX8C4cW9LpyGWpVq2EzeL3oK/76H+CBXxzTUEwXsKTMPNL7i3na35ypbYD\nhp1g1iulFb5GQIaU7pc3n1lqOJ+lcYIp4mMoaYX62efuUD4461CYem5Hs5MKcrXz\ng5GPvytbtF+YCbRVa1T9GOn6qx/m0+RhKbhMecYqUa5Vivc/Bn+ucHm+NQKZUzUk\nlfgrgeiVE/edrTXgjuxCttm3Tpbhic/5TkpWaH9vhYbMPl3AtWeb1L7XMGh5+Lc=\n=HSNV\n-----END PGP SIGNATURE-----\n","payload":"tree 38e5f513f688aa0b6ab780a89d01f9e48685c03f\nparent 1974d08c93ddf171779fde59215e8430f36d281a\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1656550446 -0400\ncommitter GitHub <noreply@github.com> 1656550446 -0700\n\n[DevTools] Resign Timeline Profiler Sidebar (#24816)\n\nThis PR:\r\n* Redesigned the sidebar to resemble the flamegraph profiler sidebar and added title and timestamp to the sidebar\r\n* Added ability to copy the component stack (for places where you're unable to link to source)\r\n\r\nhttps://user-images.githubusercontent.com/2735514/176564897-5301d6d4-429a-4ea3-86cd-74427cff4ce6.mov\r\n\r\n"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-29T23:00:48Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-29T23:00:48Z"},"message":"[DevTools] Fix Bugs With Component Stacks (#24815)\n\nThis PR:\r\n* Simplifies the code in `SidebarEventInfo` by passing it the actual clicked event rather than an index.\r\n* Lightly refactored the `SidebarEventInfo` code so that it can be used for more than just `schedulingEvents`\r\n* Fixes bug. Previously, whenever a state update event was clicked, we updated the `selectedCommitIndex` in the `ProfilerContext`. However, this index is used for the selected commit in the Flamegraph profiler, which caused a bug where if you would change the contents of the event sidebar, the commit sidebar in the Flamegraph profiler would change too. This PR replaces this with the actual event info instead","tree":{"sha":"434841031bce8dd5660b9858799ebbaf046bf956","url":"https://api.github.com/repos/facebook/react/git/trees/434841031bce8dd5660b9858799ebbaf046bf956"},"url":"https://api.github.com/repos/facebook/react/git/commits/1974d08c93ddf171779fde59215e8430f36d281a","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivNmgCRBK7hj4Ov3rIwAAAPoIAIdHpzlyIww+edPQFuXh6XAt\nNHoY1mXnJKJ+ueD6oi3B7mW4AcsVLk9pNIbydZuPOZj0WAN/BiygXUAPjerLIQur\n/T/QvV4pfID8ilj/7Irjs24uWdiyWBU2QvtPAObN7GKBnVVsGipHWlP3ctnbUGjm\nvsqnnFnjtfhGaYdPdOnf0K45P2PMIZBRJDbkWaBrZYcIS4MFC6R8kS4Xhh74vdl0\n6GISmTMb7JL72WUjpJyk2yPqrvIYC6IBi/a6BB09jMHqKNnRznylwBAEJ1UIqFCl\nf0yMLpCxwe+vdY4OZFtBwc0m60Pw6UP7vW6Gtqo0P1h/qg4jPs9alCiYJ4HlTRg=\n=Kbg/\n-----END PGP SIGNATURE-----\n","payload":"tree 434841031bce8dd5660b9858799ebbaf046bf956\nparent cd80d3274d48155d0f83347daab3eda57009f41b\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1656543648 -0400\ncommitter GitHub <noreply@github.com> 1656543648 -0700\n\n[DevTools] Fix Bugs With Component Stacks (#24815)\n\nThis PR:\r\n* Simplifies the code in `SidebarEventInfo` by passing it the actual clicked event rather than an index.\r\n* Lightly refactored the `SidebarEventInfo` code so that it can be used for more than just `schedulingEvents`\r\n* Fixes bug. Previously, whenever a state update event was clicked, we updated the `selectedCommitIndex` in the `ProfilerContext`. However, this index is used for the selected commit in the Flamegraph profiler, which caused a bug where if you would change the contents of the event sidebar, the commit sidebar in the Flamegraph profiler would change too. This PR replaces this with the actual event info instead"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-29T17:38:27Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-29T17:38:27Z"},"message":"[DevTools] Add column number to viewSourceLineFunction (#24814)\n\nAdd column number for `viewSourceLineFunction` and renamed the function to `viewUrlSourceFunction` to match the other source function naming conventions","tree":{"sha":"87d61ae215123a467042c2f629e0c0609d984264","url":"https://api.github.com/repos/facebook/react/git/trees/87d61ae215123a467042c2f629e0c0609d984264"},"url":"https://api.github.com/repos/facebook/react/git/commits/cd80d3274d48155d0f83347daab3eda57009f41b","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivI4TCRBK7hj4Ov3rIwAALJ8IADPQreE4iRh3Y4XkkKt63rr1\nGpfHernKCllBTXU50tHxb0DxNEIMyz9nVQuk7UhzjQxy06pvXwKxNFJtr06wkuk9\nDrn0SZPjHEb+Zbqye6FiI6Dr/qKPPSgmFgziIXCK60veo5FJvUN1qAOnEGc2V8Uw\nrH2xW7huS2X8afEA+i7DIDGumP2goVQfue0ZSoF7T1W3gz75StYfMa2tfZIUvrGI\nJoxxD3WMDDi7eMWpTlf4UgF8hnYF9PT04/wYerdFkFxJOdmMAbSojmWkNxk1w+U7\nr2x5vCPnbvWLyVDChjSx/gUWrbAYLi/Si5i4MI+PMaFwiwFz/1Sw9FLKzmWQAD0=\n=wtsr\n-----END PGP SIGNATURE-----\n","payload":"tree 87d61ae215123a467042c2f629e0c0609d984264\nparent f01e119b7d6b32104d37a7a9247fdd5a25bd29d2\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1656524307 -0400\ncommitter GitHub <noreply@github.com> 1656524307 -0700\n\n[DevTools] Add column number to viewSourceLineFunction (#24814)\n\nAdd column number for `viewSourceLineFunction` and renamed the function to `viewUrlSourceFunction` to match the other source function naming conventions"}},{"author":{"name":"Mengdi Chen","email":"mengdi@fb.com","date":"2022-06-29T17:02:53Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-29T17:02:53Z"},"message":"[DevTools] Log page URL in internal build (#24799)\n\n* test log\r\n\r\n* fix attribute name\r\n\r\n* fix lint\r\n\r\n* tabs can be empty\r\n\r\n* improve coding style per comments","tree":{"sha":"156a784bee46ced1d231434ec0b4c17ebfdc64f7","url":"https://api.github.com/repos/facebook/react/git/trees/156a784bee46ced1d231434ec0b4c17ebfdc64f7"},"url":"https://api.github.com/repos/facebook/react/git/commits/f01e119b7d6b32104d37a7a9247fdd5a25bd29d2","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivIW9CRBK7hj4Ov3rIwAA+eAIAEtDePxgbc9nJ8oMIgwO5r1H\nCCEa22XQeGUOuwCXsWvRLYo0c8RJqDJMC8nS25y25mjKT0R6i0Yfz45UXfNWityd\nXWLwLbdkGkZf65/64HIOW/mE4AWUT9uqW+bMTB90c6/mddT7d9Wi/pmVVO2kHif4\n1Ych9tvsL6FrEPmBzxEaKB1bXVMRYT0WJuPXAbMwX3U9TeIcaxg8he21Vyr4nFFl\nlR642utHso3FYK5W8V8tj31pOgAS7QUw5ZVnx9qcg8XmZeD+qNfmiE6KhzJft5Sh\nYILuNR+ofhRH5LFNEzXi9u481SLQmB2CPAf7dLOZ5YI8Rgy4VpkjPkCv9n1yoKo=\n=wEuG\n-----END PGP SIGNATURE-----\n","payload":"tree 156a784bee46ced1d231434ec0b4c17ebfdc64f7\nparent d1432ba93e971b249d7055dbb3b91e34eb0d2100\nauthor Mengdi Chen <mengdi@fb.com> 1656522173 -0400\ncommitter GitHub <noreply@github.com> 1656522173 -0400\n\n[DevTools] Log page URL in internal build (#24799)\n\n* test log\r\n\r\n* fix attribute name\r\n\r\n* fix lint\r\n\r\n* tabs can be empty\r\n\r\n* improve coding style per comments"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-29T01:17:14Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-29T01:17:14Z"},"message":"[Transition Tracing] Fix excess calls to the transition start callback (#24806)\n\nThis PR fixes a bug where we would add a transition to the lanes map every time an update occurs. However, we didn't factor in that there might be multiple updates in a transition, which would cause the transition to be added multiple times to the transitionLanes map.\r\n\r\nThis changes the transitionLanes object from an Array of Arrays to an Array of Sets so that we only add a transition if it hasn't been added before, avoiding duplicates","tree":{"sha":"53b8089f78a34279f98b8f0b061e0b4b1a902c84","url":"https://api.github.com/repos/facebook/react/git/trees/53b8089f78a34279f98b8f0b061e0b4b1a902c84"},"url":"https://api.github.com/repos/facebook/react/git/commits/d1432ba93e971b249d7055dbb3b91e34eb0d2100","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiu6gaCRBK7hj4Ov3rIwAAtCMIAJZbpYuNX6akuFXkduKITtHW\n3gBcDvyNcScQIBI/mbcihnwLDycYQX1NMMeLgJuLj5u7YqzposNdqovT15fbofFY\nap3UqO8n30DnOcG1z4QYXdszXZ9QJ/ETX0TN1RTxakb48wBU7JxWwI0RpV09xX7e\nSiIXZXx2/xpjQHzwLaO5OrdbLe6gJf4wWtUBHIzOGIjlB4x8IK55hGl4h6iZ0N0b\nzRTKriorDLmVqXWzCi04GuRRjj6pjT3Anr2gG4HdHAtNFRG2dAQq32/nBA/jXwyj\n9CICpmKsXbXHKJI6wbfAgkcONE+7Tg/wBQtEa6usBXKLPADnZlhn6lwUXrxkzA8=\n=cc5L\n-----END PGP SIGNATURE-----\n","payload":"tree 53b8089f78a34279f98b8f0b061e0b4b1a902c84\nparent 2e1c8841e97923e7af50c5c5311e3724b7b6555d\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1656465434 -0400\ncommitter GitHub <noreply@github.com> 1656465434 -0400\n\n[Transition Tracing] Fix excess calls to the transition start callback (#24806)\n\nThis PR fixes a bug where we would add a transition to the lanes map every time an update occurs. However, we didn't factor in that there might be multiple updates in a transition, which would cause the transition to be added multiple times to the transitionLanes map.\r\n\r\nThis changes the transitionLanes object from an Array of Arrays to an Array of Sets so that we only add a transition if it hasn't been added before, avoiding duplicates"}},{"author":{"name":"Blake Friedman","email":"blakef@fb.com","date":"2022-06-28T21:15:24Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-28T21:15:24Z"},"message":"[DevTools] front-end for profiling event stack (#24805)\n\n* [DevTools] front-end for profiling event stack\r\n\r\nAdds a side-bar to the profiling tab. Users can now select an update event, and are\r\nshown the callstack from the originating component. When a source path is available\r\nthere is now UI to jump to source.\r\n\r\nAdd FB enabled feature flag: enableProfilerComponentTree for the side-bar.\r\n\r\nresolves #24170","tree":{"sha":"74595a0b039206f5bf2081b05f085f8741473897","url":"https://api.github.com/repos/facebook/react/git/trees/74595a0b039206f5bf2081b05f085f8741473897"},"url":"https://api.github.com/repos/facebook/react/git/commits/2e1c8841e97923e7af50c5c5311e3724b7b6555d","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiu29sCRBK7hj4Ov3rIwAAbtIIAI6IiqI4JHTKZ9YuX2VrObIq\nVhpCj7qihAmQ+vFBtalR3Jbfu1+5bXZ5VltRkfeFtikHTn6XJZq6dzVm/XMBxusk\neOQbiaEVL+d73jQ7Gm+1uaLInDTeNyNsZUs9NjH2qOycK3bFn9cJH8tMruTnIS3n\nHoMD4VQPxrN6d73UyjXhJFZKiBaWofh5VRMlP1PULtUCtDWOqi1PTOXm3ffCB5es\nzt1+6ELbHPLWUy5JTxHn8slOHyu3txVwbiJlxLN2G0ADBxUQIjlgk/dwKw5yhU4S\nW82vQUE/fpivT6oPCtCXvyyR/gn1WoUa0FAzZbAzwo0IJbM73CxJKfcZaV0c1VE=\n=bX3i\n-----END PGP SIGNATURE-----\n","payload":"tree 74595a0b039206f5bf2081b05f085f8741473897\nparent 88574c1b8bd4ed187f09a9c91d327784fe50dbe8\nauthor Blake Friedman <blakef@fb.com> 1656450924 +0100\ncommitter GitHub <noreply@github.com> 1656450924 +0100\n\n[DevTools] front-end for profiling event stack (#24805)\n\n* [DevTools] front-end for profiling event stack\r\n\r\nAdds a side-bar to the profiling tab. Users can now select an update event, and are\r\nshown the callstack from the originating component. When a source path is available\r\nthere is now UI to jump to source.\r\n\r\nAdd FB enabled feature flag: enableProfilerComponentTree for the side-bar.\r\n\r\nresolves #24170\r\n"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-28T17:09:59Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-28T17:09:59Z"},"message":"Fix enableTransitionTracing flag (#24801)\n\nMove `enableTransitionTracing` to `dynamicFeatureFlags` so it runs when you run `yarn test`","tree":{"sha":"2d0c9401ce0c96c5088489a8ae52a1e53fac7ea0","url":"https://api.github.com/repos/facebook/react/git/trees/2d0c9401ce0c96c5088489a8ae52a1e53fac7ea0"},"url":"https://api.github.com/repos/facebook/react/git/commits/88574c1b8bd4ed187f09a9c91d327784fe50dbe8","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiuzXnCRBK7hj4Ov3rIwAAeiwIAFSVvQ4C+VZZDssJbc5lvD8h\nvkrh0S16kRZ0bb2ktjMvf4LJt6fRpXuM4tqNDJroRaS/XgUPVAHPHiyiAqI1Ijo0\n8faA40HFRbjLbeA2j3hXXc9AG58sb0PsUqkfNd2EBg/9U3XDtlmA2eo9EcGmggfy\nHUjWtokkhLthlnWOCia9GHYnouIZF57x2xRxuk1g+2I9nsCmxue7vLyFlHA/+pYh\nrDZYmGXioGnbqE8MQaYFTNWPqNGmjIC6+IgHPsebSDm7z4xp88tl6h1jXji0kcYC\nQu0bWrmayMvuu45xvK1oaiU0LhHQzJ7eL86oDAkOL6BbtTyQAnKZn8rdEUFmHRs=\n=mHmV\n-----END PGP SIGNATURE-----\n","payload":"tree 2d0c9401ce0c96c5088489a8ae52a1e53fac7ea0\nparent a4bed469697a1e23c398fe80228df31ef6d4b612\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1656436199 -0400\ncommitter GitHub <noreply@github.com> 1656436199 -0400\n\nFix enableTransitionTracing flag (#24801)\n\nMove `enableTransitionTracing` to `dynamicFeatureFlags` so it runs when you run `yarn test`"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-27T16:46:43Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-27T16:46:43Z"},"message":"[Transition Tracing] Add Tracing Markers (#24686)\n\nThis PR adds support for Tracing Markers as well as onTracingMarkerComplete","tree":{"sha":"c6ba10ab09ca5087cf4d1eebea6340e72210a384","url":"https://api.github.com/repos/facebook/react/git/trees/c6ba10ab09ca5087cf4d1eebea6340e72210a384"},"url":"https://api.github.com/repos/facebook/react/git/commits/a4bed469697a1e23c398fe80228df31ef6d4b612","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiud7zCRBK7hj4Ov3rIwAAaAQIAJbTaTFfiFdgXS2m/rjLZYmP\nNSfwgKNPmTayV6TAYvQjKY8c9byN2uv4/iWts5tcGk9yHNIm9GXRY8GFM5S6l9Si\nvIfDV+IgWtE2YmTFKucuSiyAHBIJt9cYn5AIoLObNNKNsDo7MtU8eXiIv/DpMS0V\n8hUJcFYOUf70rE4W+Ffrns9tEapbx0YVvzac1R3vPcScRmV1nSJfLDh36MBU4FDg\nMkVaVltaw62G6OBTohmKGREAlcF//n0boNfkKPiS59aypERG0f9FHZp++KGvIfm+\nM/BPa6WXbYpvKGG2Tt4EsKKY7nGmVI6lrk3tgwstpaWOPeMknwnNhzvLs2mJDaE=\n=+bB6\n-----END PGP SIGNATURE-----\n","payload":"tree c6ba10ab09ca5087cf4d1eebea6340e72210a384\nparent 167853026cb193f81c0474d3bf9ef9e03dde203e\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1656348403 -0400\ncommitter GitHub <noreply@github.com> 1656348403 -0700\n\n[Transition Tracing] Add Tracing Markers (#24686)\n\nThis PR adds support for Tracing Markers as well as onTracingMarkerComplete"}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-06-26T19:22:10Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-26T19:22:10Z"},"message":"fix hydration warning suppression in text comparisons (#24784)\n\n* fix hydration warning suppression in text comparisons\r\n\r\n* lint\r\n\r\n* lowercase test","tree":{"sha":"71e8a2a13f35254bbbf75f9dab25133698bd2446","url":"https://api.github.com/repos/facebook/react/git/trees/71e8a2a13f35254bbbf75f9dab25133698bd2446"},"url":"https://api.github.com/repos/facebook/react/git/commits/167853026cb193f81c0474d3bf9ef9e03dde203e","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiuLHiCRBK7hj4Ov3rIwAAgHQIAGfzOqe5eem3E3IbF/KBUE3b\nXmOPQ8zfswUlTIUlq4iyziXgymKOS+jkhGP/kHv/OpBMfRj8HisY8MHwQp0rW5bT\nEM53SGz3+dSYXjvqeZDqS0TZrkKQ8cl3iHxMXIrrt5OLK3XWJWM54LJVzEOOmGej\nnyYlq74j4L5KO7+D968PIXppNcxVDzxKT2y5xb1bdcjNxkJ3FE/U53Pjm+HEAKEz\n5sIdaBL3x6d/RlffXZ40Xop1F1uh4nQXgkmND7phTapuo68N/7PeaUm9fb097ss8\n+OqCGOxFFV2FYfcUhUzt+RToDOJnpz6sGr9CvWyPE7MCjlHkhJ9QHIWmZzMYui0=\n=0aI3\n-----END PGP SIGNATURE-----\n","payload":"tree 71e8a2a13f35254bbbf75f9dab25133698bd2446\nparent 652e6c5a1b2067cbe1964c6b4ec1af5ff295d7ed\nauthor Josh Story <story@hey.com> 1656271330 -0700\ncommitter GitHub <noreply@github.com> 1656271330 -0700\n\nfix hydration warning suppression in text comparisons (#24784)\n\n* fix hydration warning suppression in text comparisons\r\n\r\n* lint\r\n\r\n* lowercase test"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-25T23:13:41Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-25T23:13:41Z"},"message":"[sizebot] Add link to diff view (#24790)\n\nUpdates the sizebot output so that the file names link to a diff view of\r\nthe corresponding build artifact.\r\n\r\nExample diff view: https://react-builds.vercel.app/commits/955cad9bcc6d755b2a672f8038fe9754e0fe5108/files/oss-stable-semver/react-dom/cjs/react-dom.production.min.js?compare=c3d7a7e3d72937443ef75b7e29335c98ad0f1424\r\n\r\nThe diff view itself is rendered by a Next.js app that I built as a side\r\nproject and is hosted at https://react-builds.vercel.app. If we find\r\nthis useful enough I could move the app to a React-owned repo but since\r\nthis isn't a critical feature it might be OK to leave it separate for\r\nnow, so we don't need to commit to supporting it indefinitely.","tree":{"sha":"bb1346c8f61e7f3365fad9de21591ca1f257f500","url":"https://api.github.com/repos/facebook/react/git/trees/bb1346c8f61e7f3365fad9de21591ca1f257f500"},"url":"https://api.github.com/repos/facebook/react/git/commits/652e6c5a1b2067cbe1964c6b4ec1af5ff295d7ed","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJit5alCRBK7hj4Ov3rIwAApzYIAE9Jh3wH2cTe2G3IC81wNQgk\npgJQqIb/wsiMhn4HiXoBjzQiPgUYL9HLZjM/6camI6j9+U78GxIPvue5twhjXXp0\nfctQElsT8DF53MmO1lbG3QVRhGSURyZrQVrJ5GFFpQtGCCEgAHe1K4qHQQFmZX4L\n54+ZsEzhZhjngtagIZhG2upF76fWFuL1CtUeBWAVkBqCsOLPselJ5cQcnjsflqtx\nRoS5WzP1mdfFevtklZebHlAAIxIDNrAxrfuo6oxkKXQ4rnR2dFegR8dhVSjNRZVe\n1DrkL7m2p0laOdQgnkJKoHmvBIFf2EORMH9/Fv8kJtsm4sX/C1f3LZHNTjFitjc=\n=B+5x\n-----END PGP SIGNATURE-----\n","payload":"tree bb1346c8f61e7f3365fad9de21591ca1f257f500\nparent 955cad9bcc6d755b2a672f8038fe9754e0fe5108\nauthor Andrew Clark <git@andrewclark.io> 1656198821 -0500\ncommitter GitHub <noreply@github.com> 1656198821 -0400\n\n[sizebot] Add link to diff view (#24790)\n\nUpdates the sizebot output so that the file names link to a diff view of\r\nthe corresponding build artifact.\r\n\r\nExample diff view: https://react-builds.vercel.app/commits/955cad9bcc6d755b2a672f8038fe9754e0fe5108/files/oss-stable-semver/react-dom/cjs/react-dom.production.min.js?compare=c3d7a7e3d72937443ef75b7e29335c98ad0f1424\r\n\r\nThe diff view itself is rendered by a Next.js app that I built as a side\r\nproject and is hosted at https://react-builds.vercel.app. If we find\r\nthis useful enough I could move the app to a React-owned repo but since\r\nthis isn't a critical feature it might be OK to leave it separate for\r\nnow, so we don't need to commit to supporting it indefinitely."}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-23T22:47:47Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-23T22:47:47Z"},"message":"[DevTools] Clean Up DevTools Code (#24782)\n\nThis PR cleans up the DevTools codebase by:\r\n* Consolidating `normalizeCodeLocInfo` into one place\r\n* Remove unused source argument in the DevTools component stacks code","tree":{"sha":"02d6fa499698b475950c8204d2531767d291606c","url":"https://api.github.com/repos/facebook/react/git/trees/02d6fa499698b475950c8204d2531767d291606c"},"url":"https://api.github.com/repos/facebook/react/git/commits/955cad9bcc6d755b2a672f8038fe9754e0fe5108","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJitO2TCRBK7hj4Ov3rIwAA+IgIAC8Yo0Rq0XSHvtsZ7TFSDAgw\nZmGoC0aPfnEKxy8PCB8FOKKEAQv5deUQxSK67u7Pk3Q3ngFxCPNBABC1iAD09J3k\nutjCoKA1tL+AMbwhCiLpyeZ5kqKi7RGbsUxOzcsql148a5Zn+7UpUMdSJGKfCY4K\nUUaq0SQZUToareQWIBDRy1Wm/u3C7eceH6xW+I45p9DldRPZvT3aHQsm5sqBfUNK\nP76CbBv2I6dlP/H2rZ3jyOO0sBa/qhwu7AY/11vmMjU9BIAcBAvN/T5ebfKcl43+\nb7YRPgwbbtek9vqxGj5/Hrej+iZpGvJxQpsqHeMno/VRxiJDxfdq8PLHI6zk7ZU=\n=HGx2\n-----END PGP SIGNATURE-----\n","payload":"tree 02d6fa499698b475950c8204d2531767d291606c\nparent 9abe745aa748271be170c67cc43b09f62ca5f2dc\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1656024467 -0400\ncommitter GitHub <noreply@github.com> 1656024467 -0700\n\n[DevTools] Clean Up DevTools Code (#24782)\n\nThis PR cleans up the DevTools codebase by:\r\n* Consolidating `normalizeCodeLocInfo` into one place\r\n* Remove unused source argument in the DevTools component stacks code"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-23T18:19:23Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-23T18:19:23Z"},"message":"[DevTools][Timeline Profiler] Component Stacks Backend (#24776)\n\nThis PR adds a component stack field to the `schedule-state-update` event. The algorithm is as follows:\r\n* During profiling, whenever a state update happens collect the parents of the fiber that caused the state update and store it in a map\r\n* After profiling finishes, post process the `schedule-state-update` event and using the parent fibers, generate the component stack by using`describeFiber`, a function that uses error throwing to get the location of the component by calling the component without props.\r\n\r\n---\r\n\r\nCo-authored-by: Blake Friedman <blake.friedman@gmail.com>","tree":{"sha":"802a496242ed4687417ffe2aa57aec9903a560be","url":"https://api.github.com/repos/facebook/react/git/trees/802a496242ed4687417ffe2aa57aec9903a560be"},"url":"https://api.github.com/repos/facebook/react/git/commits/9abe745aa748271be170c67cc43b09f62ca5f2dc","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJitK6rCRBK7hj4Ov3rIwAA+7QIAADvCrpdAbpHAP29SjkSbdbD\nLED2UHKJjqQieM0GHGiZIw9TQU/uf/DOGuujW6sHTmXBbwd8tB+h4GShQnrsoQ2M\nSaXupcHhxflqJI3Wg+XDnxY2Ii4VyYVAgsgPDMjjtoVvBNaW11i8pvo97ogrlFbB\ndc5afr53pE8LapWh96gpgrIf0PVyBPM5fv4hgbfj8GEHgloS5FZ7axGIrGL2uCvY\nj4woon/X5nivCL4qdoNCqn5N7y/jNhiwAiQhG0jamgxk+ibJiOwaEl8mJDkypxbv\nFFNEgc6/5bEsGEbkmIiKpZcRp2+CvhQediXq3CKFlJ62vsFHBleWjWvP/bCQSGk=\n=WPP7\n-----END PGP SIGNATURE-----\n","payload":"tree 802a496242ed4687417ffe2aa57aec9903a560be\nparent cf665c4b73a28b034c8173f4d929205fb12d2d2e\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1656008363 -0400\ncommitter GitHub <noreply@github.com> 1656008363 -0700\n\n[DevTools][Timeline Profiler] Component Stacks Backend (#24776)\n\nThis PR adds a component stack field to the `schedule-state-update` event. The algorithm is as follows:\r\n* During profiling, whenever a state update happens collect the parents of the fiber that caused the state update and store it in a map\r\n* After profiling finishes, post process the `schedule-state-update` event and using the parent fibers, generate the component stack by using`describeFiber`, a function that uses error throwing to get the location of the component by calling the component without props.\r\n\r\n---\r\n\r\nCo-authored-by: Blake Friedman <blake.friedman@gmail.com>"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-21T00:08:54Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-21T00:08:54Z"},"message":"[DevTools] Refactor incompleteTransitions field from Root Fiber memoized state to FiberRoot (#24765)\n\n`incompleteTransitions` persists across renders, so it should be part of the `fiber.stateNode` (ie FiberRoot) rather than `fiber.memoizedState`","tree":{"sha":"035e1341761509d4f1109ce0da96a1fad9bf1573","url":"https://api.github.com/repos/facebook/react/git/trees/035e1341761509d4f1109ce0da96a1fad9bf1573"},"url":"https://api.github.com/repos/facebook/react/git/commits/cf665c4b73a28b034c8173f4d929205fb12d2d2e","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJisQwWCRBK7hj4Ov3rIwAAcnQIAEx+sQmRLeoeBjuatMCaWRZq\n3XiFTojViKjt4PcjutY4WtlMksflm3HiNChUPFfZHESq5OT7BL+/ElS2pOZqvECX\nOJRSz+za395hMrXOhCO2cgTFWdQq1PvzL73H2/eByJDoy3TNEH3QdUb5Z5uCU5wr\nbfPYiEVxVdYmbAZJ8AeOcpQiTEQJj2mbJ725NAmcZabzPyjkvYRh0nlxXc5V+Ft1\nOA8OfcAvjOCrxgnK6lyVILQmwkAPjceQMMUnwWZ3u7j+IHTGHObWp42OO7mPlZDR\nFB9wJnjgva5MMV/uopm0P5NnvuWzOD09TllI17uNmHGcakv+oV/w+fZh7GjqQWQ=\n=eQTb\n-----END PGP SIGNATURE-----\n","payload":"tree 035e1341761509d4f1109ce0da96a1fad9bf1573\nparent d6255f0ac4d3282272165a68f64ab3444d6790d3\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1655770134 -0400\ncommitter GitHub <noreply@github.com> 1655770134 -0700\n\n[DevTools] Refactor incompleteTransitions field from Root Fiber memoized state to FiberRoot (#24765)\n\n`incompleteTransitions` persists across renders, so it should be part of the `fiber.stateNode` (ie FiberRoot) rather than `fiber.memoizedState`"}},{"author":{"name":"Mengdi Chen","email":"mengdi@fb.com","date":"2022-06-20T19:06:40Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-20T19:06:40Z"},"message":"[DevTool] fix build-for-devtools script (#24764)","tree":{"sha":"e53daa1416e71f973235f5b85fe47611fbaeaf7f","url":"https://api.github.com/repos/facebook/react/git/trees/e53daa1416e71f973235f5b85fe47611fbaeaf7f"},"url":"https://api.github.com/repos/facebook/react/git/commits/d6255f0ac4d3282272165a68f64ab3444d6790d3","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJisMVACRBK7hj4Ov3rIwAAMLwIAHInbnQQSTFk00ktMYXlHgUJ\nyyePibwNXAGI1ug4FbWqxtJ4POgGPJEHyvBRjfasMSiPrMdexlF/kXZYkMeh7ca9\n9csHJ/5ON6ho+k4cyt1dv73qpMpdE/3DVAFXr0J3Ur7szYlsVyyKQ1BOCxLKCFpl\nInpe/3qTMsRPhRk5Hh7NfJTYfrliLnhKI8w8cLjw6KoW0nfY/mMIe9Z7u2nHI7Q+\nvLeGV90jHeEli1eEcOTPqhGmzNGp4rgD5cqH6g7teYOBFrMiuY+GlD/IjdcRK0Pz\nUvCOOV03wD3TUfBqyK9/dFF9r7kXmI2Y9uCMbLdWSgcHOtHTsYPMWCE2QHXDLN8=\n=4AGB\n-----END PGP SIGNATURE-----\n","payload":"tree e53daa1416e71f973235f5b85fe47611fbaeaf7f\nparent 56389e81ffe17c97f3137f18cc6446a4b2c956de\nauthor Mengdi Chen <mengdi@fb.com> 1655752000 -0400\ncommitter GitHub <noreply@github.com> 1655752000 -0400\n\n[DevTool] fix build-for-devtools script (#24764)\n\n"}},{"author":{"name":"Sebastian Markbåge","email":"sebastian@calyptus.eu","date":"2022-06-19T15:05:41Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-19T15:05:41Z"},"message":"Abort Flight (#24754)\n\nAdd aborting to the Flight Server. This encodes the reason as an \"error\"\r\nrow that gets thrown client side. These are still exposed in prod which\r\nis a follow up we'll still have to do to encode them as digests instead.\r\n\r\nThe error is encoded once and then referenced by each row that needs to\r\nbe updated.","tree":{"sha":"d37c8f9165177e11da65c899b3c664f3993e5fe4","url":"https://api.github.com/repos/facebook/react/git/trees/d37c8f9165177e11da65c899b3c664f3993e5fe4"},"url":"https://api.github.com/repos/facebook/react/git/commits/56389e81ffe17c97f3137f18cc6446a4b2c956de","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJirztFCRBK7hj4Ov3rIwAA6L4IABpYr9YoqcyLCEgh5gD2FwyG\nkYnfzYhLKPAm9Sz94HC6KuKU1PkUmc65KR1Gc9GZRC0Whlzjbu/pYt2WGAtGJNlI\nANW5X3nDgzz4B0r63cApzH3BR+V/SjULEmL/WBzvkbicf8qCq90nWosieBXWzMhL\nk6yfkxkpOlVb/J/VWFexIXoD//u22rs3synkUZGbHe4mYd0Uvri3Dgq/mIuRw1ak\nAphyH7XIgcq39G+aMUYlq+AOSfhiToYqAaS+VQuLiWjpRgOyWw74y9j1KP2rDePw\noaZSkCrdhcvnmJFL5DikqVC6ElAFKxZ2jU9NssESjUhYMw2YBIJSlumun4alX7Q=\n=GTzq\n-----END PGP SIGNATURE-----\n","payload":"tree d37c8f9165177e11da65c899b3c664f3993e5fe4\nparent 0f216ae31d91f882134707af99d5da9c01e1f603\nauthor Sebastian Markbåge <sebastian@calyptus.eu> 1655651141 -0400\ncommitter GitHub <noreply@github.com> 1655651141 -0400\n\nAbort Flight (#24754)\n\nAdd aborting to the Flight Server. This encodes the reason as an \"error\"\r\nrow that gets thrown client side. These are still exposed in prod which\r\nis a follow up we'll still have to do to encode them as digests instead.\r\n\r\nThe error is encoded once and then referenced by each row that needs to\r\nbe updated."}},{"author":{"name":"Sebastian Markbåge","email":"sebastian@calyptus.eu","date":"2022-06-19T02:34:31Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-19T02:34:31Z"},"message":"Add entry points for \"static\" server rendering passes (#24752)\n\nThis will be used to add optimizations for static server rendering.","tree":{"sha":"5a2edf54d00aa0f3e76b6fbe26252a76decf4035","url":"https://api.github.com/repos/facebook/react/git/trees/5a2edf54d00aa0f3e76b6fbe26252a76decf4035"},"url":"https://api.github.com/repos/facebook/react/git/commits/0f216ae31d91f882134707af99d5da9c01e1f603","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiros3CRBK7hj4Ov3rIwAAVL4IACrX70WmQxTpGXBgGsWcC4Xb\nykH4nhDyBYHHdLYqCVRNRaEGJokViCETOCeoi8zvqGbhQrvfSUYpXkfiTJefPCTP\nxKBAcY2lwJ0eN7AXM0Tac1mnUunYASzy4GDGM4U/dc82AMtFWKwUVYHEgjwZV/3b\nRh+s0zA+7ZscB2HL4QY2a6dBizcFzpHcnTJ21RzgXwHF+hp/Ta/eP7bQyDS+Lnme\nqhfgXzPE53/1fhanuJyOJ4IGxMAjIRSrtzxQnUB9XFOQr/gVMpgtaLKoLzBKiAiP\nulsdVR2sZt8SkRSXyIXuh5UWhUfFvosYdrlMuLY1npUqopCNCc2O8+IO7+oUpqo=\n=wsW5\n-----END PGP SIGNATURE-----\n","payload":"tree 5a2edf54d00aa0f3e76b6fbe26252a76decf4035\nparent f796fa13ad13ee9939cb7847bfa90ada860068b2\nauthor Sebastian Markbåge <sebastian@calyptus.eu> 1655606071 -0400\ncommitter GitHub <noreply@github.com> 1655606071 -0400\n\nAdd entry points for \"static\" server rendering passes (#24752)\n\nThis will be used to add optimizations for static server rendering."}},{"author":{"name":"Sebastian Markbåge","email":"sebastian@calyptus.eu","date":"2022-06-18T19:02:11Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-18T19:02:11Z"},"message":"Rename Segment to Task in Flight (#24753)\n\nIn Fizz this got split into Task and Segment. We don't have a concept of\r\nSegment in Flight yet because we don't inline multiple segments into one\r\n\"Row\". We just emit one \"Row\" for each Segment if something suspends.\r\n\r\nThis makes Flight non-deterministic atm but that's something we'll want to\r\naddress.\r\n\r\nRegardless, right now, this is more like a Task than a Segment.","tree":{"sha":"a300e0bf1b06b200aae8563cc073ab8a7ee736ee","url":"https://api.github.com/repos/facebook/react/git/trees/a300e0bf1b06b200aae8563cc073ab8a7ee736ee"},"url":"https://api.github.com/repos/facebook/react/git/commits/f796fa13ad13ee9939cb7847bfa90ada860068b2","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiriEzCRBK7hj4Ov3rIwAA67YIAHu4IC1lYAdxmJIKVQtD77RC\nMvcV6QouNJL4Cnoru0ykMlg2DjhSeX/Loy+uyJJ9YOLsdbBrKACiB8EwPoPZL1VO\n9DGJttp0LWuseyWnou5E5Xg/bXkQExlMafrcN7LGAPhWjR8yaiAJRn2i5DC0R+x1\nf/V3rnSe+Kro8bIjKYt8toY0ab2y8qIRlLc69KHRi3pXbkGPR92EjLYNg4aLbmSd\np6WiAr3vqYxms7RfT/ZXA5HaLjMJmHAgNMeQlbQLEpeA3klQSQ9pzHLM6mVeSO37\nAeF4nJYuCw/kFBFXzW+jron3PiJvP0CgoNzqRDu8dncJdl2XYD17q/au2POLNR8=\n=PpEI\n-----END PGP SIGNATURE-----\n","payload":"tree a300e0bf1b06b200aae8563cc073ab8a7ee736ee\nparent 0f0aca3ab35354040950ac0001fd4c01d70dceb4\nauthor Sebastian Markbåge <sebastian@calyptus.eu> 1655578931 -0400\ncommitter GitHub <noreply@github.com> 1655578931 -0400\n\nRename Segment to Task in Flight (#24753)\n\nIn Fizz this got split into Task and Segment. We don't have a concept of\r\nSegment in Flight yet because we don't inline multiple segments into one\r\n\"Row\". We just emit one \"Row\" for each Segment if something suspends.\r\n\r\nThis makes Flight non-deterministic atm but that's something we'll want to\r\naddress.\r\n\r\nRegardless, right now, this is more like a Task than a Segment."}},{"author":{"name":"Sebastian Markbåge","email":"sebastian@calyptus.eu","date":"2022-06-18T15:01:58Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-18T15:01:58Z"},"message":"Aborting early should not infinitely suspend (#24751)\n\nBefore this change we weren't calling onError nor onFatalError if you abort\r\nbefore completing the shell.\r\n\r\nThis means that the render never completes and hangs.\r\n\r\nAborting early can happen before even creating the stream for AbortSignal,\r\nbefore rendering starts in Node since there's an setImmediate atm, or\r\nduring rendering.","tree":{"sha":"73e2413afdec7931d19646e9e21cd38661d5417f","url":"https://api.github.com/repos/facebook/react/git/trees/73e2413afdec7931d19646e9e21cd38661d5417f"},"url":"https://api.github.com/repos/facebook/react/git/commits/0f0aca3ab35354040950ac0001fd4c01d70dceb4","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJirejmCRBK7hj4Ov3rIwAAtxkIAC8llP2+INL4gLP4up4HTOd5\nA5eU0n/KxsQbbU+R4bX2Z7HnYwxnHVTvgowEiJXMIS1pDSN6mXaW3Cx6J0DWWVir\nJ1xpzmZk0z8aWkAsZPfKX26T5BLXq5sjnhal1D50LxT/Qzx5ThB5UauK7cRkzdxY\nXJAcOjn6jlFNZnjBoqb1bconVk3Dt8eRvxOwccaO6M30GImCqFSVczhpVyALV3rN\ng+vPDWdVgzRWCB98VOsk0V84k3E5FVrGcHuACvYKThVzTpGg2lpBrguGvpFWeff1\nY75HWmeEvFaKoP984AFVrJhNZNwFBWWEtlrVuwnsq11unSqGvm1on0e7LajLMwE=\n=IgL4\n-----END PGP SIGNATURE-----\n","payload":"tree 73e2413afdec7931d19646e9e21cd38661d5417f\nparent 12a738f1a87889bb5f7c4159641573fd04140664\nauthor Sebastian Markbåge <sebastian@calyptus.eu> 1655564518 -0400\ncommitter GitHub <noreply@github.com> 1655564518 -0400\n\nAborting early should not infinitely suspend (#24751)\n\nBefore this change we weren't calling onError nor onFatalError if you abort\r\nbefore completing the shell.\r\n\r\nThis means that the render never completes and hangs.\r\n\r\nAborting early can happen before even creating the stream for AbortSignal,\r\nbefore rendering starts in Node since there's an setImmediate atm, or\r\nduring rendering."}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-17T20:43:46Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-17T20:43:46Z"},"message":"[Transition Tracing] Add Support for Multiple Transitions on Root (#24732)\n\nWe can think of transitions on the root as a bunch of tracing markers. Therefore, we can map each transition to a map of pending suspense boundaries. When a transition's pending suspense boundary map is empty, we know that it's complete. This PR:\r\n* Combines the `pendingSuspenseBoundaries` and `transitions` into one `incompleteTransitions` object. This object is a map from a `transition` to a map of `pendingSuspenseBoundaries`\r\n* Refactored code to make it so that every transition has its own `pendingSuspenseBoundaries` map rather than sharing just one.\r\n* Moves the transition complete callback to the root. Alternatively, we can also keep a map of pendingSuspenseBoundaries to transitions on the Offscreen marker, but it's simpler to just call the transition complete callback on the root instead. We also only do this if there are transitions pending, so it shouldn't make too big of a difference","tree":{"sha":"38e4f5787b993087f02f543e34d958526ec9a760","url":"https://api.github.com/repos/facebook/react/git/trees/38e4f5787b993087f02f543e34d958526ec9a760"},"url":"https://api.github.com/repos/facebook/react/git/commits/12a738f1a87889bb5f7c4159641573fd04140664","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJirOeCCRBK7hj4Ov3rIwAALPIIAGPVT4RLhRQmHC0YMg5O6/Za\nYYPWtUktnmsuLxKiECPIYF/nHkwEzJIY750Eidx5q7fD+Z6F/o7O3ph85V4oAnGE\niUEVZY9MnEgNK5LvHfETx9NX+aTdzR60LYTHT+HHAIrzTWBSGiyBI4GH5A7Rbmdv\n3BtlU9M5M0SfUcMQXin8Kgi89oHH13Xdih71e+oiGX+5Wr1AZYf08pfap1/NFpbW\n291eykJ7AOfx2FHuOLHM7iLaiOK0SBVT6iFRiQDpNgPNOHVswYK9o2sP2+EmKBXL\nX0xmTHJ7PiqndkV2jalmzoOVyaYpH6Gpxnod88RFN55lPvaHQQKf1VDsAEsBr+k=\n=+ih8\n-----END PGP SIGNATURE-----\n","payload":"tree 38e4f5787b993087f02f543e34d958526ec9a760\nparent 72ebc703ac8abacd44fdeb1e3d66eb28b75e5a5b\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1655498626 -0400\ncommitter GitHub <noreply@github.com> 1655498626 -0700\n\n[Transition Tracing] Add Support for Multiple Transitions on Root (#24732)\n\nWe can think of transitions on the root as a bunch of tracing markers. Therefore, we can map each transition to a map of pending suspense boundaries. When a transition's pending suspense boundary map is empty, we know that it's complete. This PR:\r\n* Combines the `pendingSuspenseBoundaries` and `transitions` into one `incompleteTransitions` object. This object is a map from a `transition` to a map of `pendingSuspenseBoundaries`\r\n* Refactored code to make it so that every transition has its own `pendingSuspenseBoundaries` map rather than sharing just one.\r\n* Moves the transition complete callback to the root. Alternatively, we can also keep a map of pendingSuspenseBoundaries to transitions on the Offscreen marker, but it's simpler to just call the transition complete callback on the root instead. We also only do this if there are transitions pending, so it shouldn't make too big of a difference"}},{"author":{"name":"Mengdi Chen","email":"mengdi@fb.com","date":"2022-06-17T18:43:10Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-17T18:43:10Z"},"message":"[DevTools] fix useDeferredValue to match reconciler change (#24742)\n\n* [DevTools] fix useDeferredValue to match reconciler change\r\n\r\n* fixup\r\n\r\n* update test to catch original issue\r\n\r\n* fix lint\r\n\r\n* add safer tests for other composite hooks","tree":{"sha":"f96b6ae66c60fdb3b322731047ba385bc852d80d","url":"https://api.github.com/repos/facebook/react/git/trees/f96b6ae66c60fdb3b322731047ba385bc852d80d"},"url":"https://api.github.com/repos/facebook/react/git/commits/72ebc703ac8abacd44fdeb1e3d66eb28b75e5a5b","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJirMs+CRBK7hj4Ov3rIwAA12oIAIIda1duNr5XTKigIAHkdjtm\nUHGRh6WaVVHissotB/+TcoCM7VxfQqBQKzyMHEyng0nReaBjezxUFhtruhrtHygL\nEP4CSqg/Ps7eXGZ374RYPG5YfaSd+xUI6pICTlJsp9oq8meBcAO1xm3bMo/Q7IrP\nlJpyJppGJGflk+ybtZattSQJc4azc55a8Lq7DUsOP++wLRtYh42tpWI44rCW4zGx\nCMPafgsfiEBK+me2G/mRVxBMoHPL7afDXFgdZ9sav6giainoDe6su23NmGf6awLS\nkV9qfLIHMYRg0pHQ9TFKEOLQ4RSqJGQYaHy0Y9TB8b1B2DU+rWf2dVCt7gCN2lU=\n=dEpV\n-----END PGP SIGNATURE-----\n","payload":"tree f96b6ae66c60fdb3b322731047ba385bc852d80d\nparent a7c322c6f5fd33acfecf1d50dec4f911c3e9daf4\nauthor Mengdi Chen <mengdi@fb.com> 1655491390 -0400\ncommitter GitHub <noreply@github.com> 1655491390 -0400\n\n[DevTools] fix useDeferredValue to match reconciler change (#24742)\n\n* [DevTools] fix useDeferredValue to match reconciler change\r\n\r\n* fixup\r\n\r\n* update test to catch original issue\r\n\r\n* fix lint\r\n\r\n* add safer tests for other composite hooks"}},{"author":{"name":"Siyabend Ürün","email":"urunsiyabend@gmail.com","date":"2022-06-17T17:43:52Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-17T17:43:52Z"},"message":"Fix typo in dangerfile.js (insiginificant -> insignificant) (#24393)","tree":{"sha":"f70e5104df716d50ae93d89523bba0c5d534ca55","url":"https://api.github.com/repos/facebook/react/git/trees/f70e5104df716d50ae93d89523bba0c5d534ca55"},"url":"https://api.github.com/repos/facebook/react/git/commits/a7c322c6f5fd33acfecf1d50dec4f911c3e9daf4","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJirL1YCRBK7hj4Ov3rIwAAaOUIAHVc3zQ96pxKeu0HjdiU/xnH\n0VeURExLvdEdsBhu2pRyCyEuIQO7vZ2D1ScSt84o+SJepxu295LvO9VANYeqkLjJ\n1RVp0d6u4EOxcTj9OuKsG3OUulvUYxzhO26uzVe9uCK1pY+Gvz1oYWEMIQGE7Dpj\naKmqzASzP3BXv9yqn8sB848ZEKV15v2HHriTOW43HRnYJ2jwJf1V27kX/1Lyvcsa\nig0OrSwk7qbu+TbvXrtYMQdk1UuhQ3SbE8/HHY/+vGRUAGKbO1xrsx65HIZuHL90\nPuLJF9hBX0635whzJYJWgoCW1IyFptQ1e2P0YcLbU5waLR5SWSCDlW0ROnwKRug=\n=e+vj\n-----END PGP SIGNATURE-----\n","payload":"tree f70e5104df716d50ae93d89523bba0c5d534ca55\nparent 7cf9f5e03a245b4a879c5abc84e5ffb2824370e4\nauthor Siyabend Ürün <urunsiyabend@gmail.com> 1655487832 +0300\ncommitter GitHub <noreply@github.com> 1655487832 -0700\n\nFix typo in dangerfile.js (insiginificant -> insignificant) (#24393)\n\n"}},{"author":{"name":"Kerim Büyükakyüz","email":"99087793+kbuyukakyuz@users.noreply.github.com","date":"2022-06-17T17:43:17Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-17T17:43:17Z"},"message":"Extra space (#24612)","tree":{"sha":"b5676d1651f74d2d4ff52a38c52a7d927aeabf94","url":"https://api.github.com/repos/facebook/react/git/trees/b5676d1651f74d2d4ff52a38c52a7d927aeabf94"},"url":"https://api.github.com/repos/facebook/react/git/commits/7cf9f5e03a245b4a879c5abc84e5ffb2824370e4","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJirL01CRBK7hj4Ov3rIwAAkYEIAEyzL6yPk7qFb78CNhm7q/hn\nAE5BZit4exBIQzeDGDJUA+C25EB9LgizYMjk01eGKEFwS0MS9DurylFv1vVRU9oC\nmi7AHDKhw8jLksvEpBiJ2FscIm1+g1rubFj5Wvsfxv18hdQz238ZQe/aMTSV+Bdz\nDVeltBJSNUOVXYurn5dCLBmqTno1MxUV09h4IpB0L8Hw8y/+GVrqB3Npp9C5V69C\nYHI8X0u97/ppKSzqBLMuuIdetKykXpFolLgB7EfFlawGpq2nxj9T6JToNyDqywmn\nxMAynDRISVVWNJrlYYvrAZgS1H4BdzSa2z44qiWvMB+oPqVYkqUVU9AXMkoKrqM=\n=2IdE\n-----END PGP SIGNATURE-----\n","payload":"tree b5676d1651f74d2d4ff52a38c52a7d927aeabf94\nparent 229c86af07302d40b70c41de18106f80fe89836c\nauthor Kerim Büyükakyüz <99087793+kbuyukakyuz@users.noreply.github.com> 1655487797 +0300\ncommitter GitHub <noreply@github.com> 1655487797 -0700\n\nExtra space (#24612)\n\n"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-16T15:38:37Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-16T15:38:37Z"},"message":"Revert \"Land enableClientRenderFallbackOnTextMismatch\" (#24738)\n\nThis reverts commit 327e4a1f96fbb874001b17684fbb073046a84938.\r\n\r\nTurns out we hadn't rolled this out internally yet — I mistook\r\nenableClientRenderFallbackOnHydrationMismatch for\r\nsaid enableClientRenderFallbackOnTextMismatch. Need to revert\r\nuntil we finish rolling out the change.","tree":{"sha":"cf1628577e101c7af778a08abc4d04d12d31e3e8","url":"https://api.github.com/repos/facebook/react/git/trees/cf1628577e101c7af778a08abc4d04d12d31e3e8"},"url":"https://api.github.com/repos/facebook/react/git/commits/229c86af07302d40b70c41de18106f80fe89836c","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiq059CRBK7hj4Ov3rIwAAFhwIAA4rXOpjSbvH75k7M4x7SUaM\nJd0psH4EPZjSaqwZHeyZWRGhqYGJVtigSQePtt3bqg0lV3UPKHtyAAMnXDFGJcKg\n5fjAfzv0PMbc6WGt6JB9bG6dPIFOkbpurInyVTYP7ddJ/0yGN27Dzh5kyag+Eb2M\nHuLHkLs5xHTwNrjEQ2NAh1pBmREHO1D5PwDeWN83wHIsEc+r3EaHKb5FtMkwcA+F\nlDK4bFT69uwQjnC3MJalVby8+Wh+uiU95jSqHrgLMt2ytVkbq9EJShXytZpH4iie\nJcQq+Ay+V3GYF7Hzoociq7hqGzSCMWhCGoh2fTp2py1KXvsqhttNXmndv+D0yeY=\n=1AXz\n-----END PGP SIGNATURE-----\n","payload":"tree cf1628577e101c7af778a08abc4d04d12d31e3e8\nparent c3d7a7e3d72937443ef75b7e29335c98ad0f1424\nauthor Andrew Clark <git@andrewclark.io> 1655393917 -0400\ncommitter GitHub <noreply@github.com> 1655393917 -0400\n\nRevert \"Land enableClientRenderFallbackOnTextMismatch\" (#24738)\n\nThis reverts commit 327e4a1f96fbb874001b17684fbb073046a84938.\r\n\r\nTurns out we hadn't rolled this out internally yet — I mistook\r\nenableClientRenderFallbackOnHydrationMismatch for\r\nsaid enableClientRenderFallbackOnTextMismatch. Need to revert\r\nuntil we finish rolling out the change."}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-16T02:13:22Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-16T02:13:22Z"},"message":"Bugfix: Offscreen instance is null during setState (#24734)\n\n* [FORKED] Bugfix: Offscreen instance is null during setState\r\n\r\nDuring a setState, we traverse up the return path and check if any\r\nparent Offscreen components are currently hidden. To do that, we must\r\naccess the Offscreen fiber's `stateNode` field.\r\n\r\nOn a mounted Offscreen fiber, the `stateNode` is never null, so usually\r\nwe don't need to refine the type. When a fiber is unmounted, though,\r\nwe null out its `stateNode` field to prevent memory cycles. However,\r\nwe also null out its `return` field, so I had assumed that an unmounted\r\nOffscreen fiber would never be reachable.\r\n\r\nWhat I didn't consider is that it's possible to call `setState` on a\r\nfiber that never finished mounting. Because it never mounted, it was\r\nnever deleted. Because it was never deleted, its `return` field was\r\nnever disconnected.\r\n\r\nThis pattern is always accompanied by a warning but we still need to\r\naccount for it. There may also be other patterns where an unmounted\r\nOffscreen instance is reachable, too.\r\n\r\nThe discovery also suggests it may be better for memory\r\nusage if we don't attach the `return` pointer until the commit phase,\r\nthough in order to do that we'd need some other way to track the return\r\npointer during initial render, like on the stack.\r\n\r\nThe fix is to add a null check before reading the instance\r\nduring setState.\r\n\r\n* Add previous commit to list of forked revisions","tree":{"sha":"9f8faa63127ffa292023c6903d7d629cde1853e9","url":"https://api.github.com/repos/facebook/react/git/trees/9f8faa63127ffa292023c6903d7d629cde1853e9"},"url":"https://api.github.com/repos/facebook/react/git/commits/c3d7a7e3d72937443ef75b7e29335c98ad0f1424","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqpHCCRBK7hj4Ov3rIwAAzQgIAD7psOw+n8sC6ILqDyv09yXd\nKzH0R4amP2ATHP/8h4LlgwT/1dkhJfxz0mXPIxzLYkyoB6JqV2vdCi74HR0nWFri\nZJ/ru9TxuOzu9LtrtfwUJN9EM7+uwEq1UvWh4Kxifh2gIJSDCUQQu9X990kL4t1A\nWgBcwn6z3IuOt66nK7AdpR2uQo1+KVg1s3HBNvr/Jz3asxBpC3n5jcKq2FY0ZO1r\nt4ivGxP1bITGfJroFdU9At9u2lSYZgB/QfxMKT86oUFZkzMS3WWGbyFBLG+QDOM6\n+PnlKqlxuqgz9lmWZHnO6uEI9j0GXoangQ1fQt73+kBpNCT+PT/yILb0Zz5u5AY=\n=SHD/\n-----END PGP SIGNATURE-----\n","payload":"tree 9f8faa63127ffa292023c6903d7d629cde1853e9\nparent fcd720d3631a23a9e273db60bf2d35ff5f7dc406\nauthor Andrew Clark <git@andrewclark.io> 1655345602 -0400\ncommitter GitHub <noreply@github.com> 1655345602 -0400\n\nBugfix: Offscreen instance is null during setState (#24734)\n\n* [FORKED] Bugfix: Offscreen instance is null during setState\r\n\r\nDuring a setState, we traverse up the return path and check if any\r\nparent Offscreen components are currently hidden. To do that, we must\r\naccess the Offscreen fiber's `stateNode` field.\r\n\r\nOn a mounted Offscreen fiber, the `stateNode` is never null, so usually\r\nwe don't need to refine the type. When a fiber is unmounted, though,\r\nwe null out its `stateNode` field to prevent memory cycles. However,\r\nwe also null out its `return` field, so I had assumed that an unmounted\r\nOffscreen fiber would never be reachable.\r\n\r\nWhat I didn't consider is that it's possible to call `setState` on a\r\nfiber that never finished mounting. Because it never mounted, it was\r\nnever deleted. Because it was never deleted, its `return` field was\r\nnever disconnected.\r\n\r\nThis pattern is always accompanied by a warning but we still need to\r\naccount for it. There may also be other patterns where an unmounted\r\nOffscreen instance is reachable, too.\r\n\r\nThe discovery also suggests it may be better for memory\r\nusage if we don't attach the `return` pointer until the commit phase,\r\nthough in order to do that we'd need some other way to track the return\r\npointer during initial render, like on the stack.\r\n\r\nThe fix is to add a null check before reading the instance\r\nduring setState.\r\n\r\n* Add previous commit to list of forked revisions"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-15T18:51:51Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-15T18:51:51Z"},"message":"[Transition Tracing] Push Transition When Offscreen Becomes Visible (#24718)\n\nThis PR pushes all of a suspense boundary's transitions onto the transition stack when it goes from hidden to visible so we can pass it to any child suspense boundaries or tracing markers.","tree":{"sha":"ca0b7903dc474e75705735053d5e4084bd334913","url":"https://api.github.com/repos/facebook/react/git/trees/ca0b7903dc474e75705735053d5e4084bd334913"},"url":"https://api.github.com/repos/facebook/react/git/commits/fcd720d3631a23a9e273db60bf2d35ff5f7dc406","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqipHCRBK7hj4Ov3rIwAAGTEIAFldsl0Az1Eil1ihYWUumDah\nvGq/G69yPuTKQpEGaBfghBhlq/o76i4YiltgyLfpQwEMTs3KoTsXdAiZug0Ef4Z4\nYtGJIy3zBJvSTNM8NnMyzVM/atFDmBJRoQZABcqZ7uumdFttWyz5r10KkKyqk5n6\nAVN4EisjwB78pxMqGmBXa44cZgRfauGF/2CZ0RXZ8gyqUyeZ80EToM+5XVBrpd0c\nf9JOCmNjbx31mqyQTD+qga7iNa+D35XMsCU3jeyhF7ZrEZp/I+GhTaB16+C5EZUx\nbrRDd9AgvU3rYvOvkpziSKRTjKnkXe/6hnDdpf7ipL1FdWmAGCxtHDhhGtb/ev8=\n=w3dL\n-----END PGP SIGNATURE-----\n","payload":"tree ca0b7903dc474e75705735053d5e4084bd334913\nparent 522f47345f79bb117f338384e75c8a79622bd735\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1655319111 -0700\ncommitter GitHub <noreply@github.com> 1655319111 -0700\n\n[Transition Tracing] Push Transition When Offscreen Becomes Visible (#24718)\n\nThis PR pushes all of a suspense boundary's transitions onto the transition stack when it goes from hidden to visible so we can pass it to any child suspense boundaries or tracing markers."}},{"author":{"name":"Sebastian Markbåge","email":"sebastian@calyptus.eu","date":"2022-06-15T00:16:42Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-15T00:16:42Z"},"message":"Move the Error creation to be lazy (#24728)\n\nCreating an Error captures a stack trace which can be somewhat expensive.\r\nWe shouldn't do tthat always for every render.\r\n\r\nThis also ensures that the stack trace is more useful because you can\r\nfollow through the Node.js code to see the cause.","tree":{"sha":"1a3e36ecdd2caf9f0442d0b0c8e70d052cd97514","url":"https://api.github.com/repos/facebook/react/git/trees/1a3e36ecdd2caf9f0442d0b0c8e70d052cd97514"},"url":"https://api.github.com/repos/facebook/react/git/commits/522f47345f79bb117f338384e75c8a79622bd735","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqSTqCRBK7hj4Ov3rIwAAj8cIAEi65tkPRKlNC6iifteD64aC\nwKRXHyj6a9SSNt/r2lBeodeug/I+cdzrzjhYoX6JmWZFIFyo08Jc8aodwLNpMIKA\nu6Sik7bT/v0WQ1KDTRI2trMp+ooZshGxfKAenafo5rs8VkWoG8eVsyRKGuRXFkeH\nYgM4cUg6D/iZrwgCIgNtA7V4h4Q3UY2kyTwbyUl5N63VX07rMiOfsBjr51Vr9DET\nnU2qzjgadIrPr3sy/ktekF9C9QWpuSZA+nMSKVHgN6xxllklQ/x6jd3U6zv0GCNd\nMxkN4e9hBuhiY5xR3nh2LIfw6F6C2tvu2EHVft+0Gy/7sGrPoZ1YySzAmgXTLuI=\n=8sG/\n-----END PGP SIGNATURE-----\n","payload":"tree 1a3e36ecdd2caf9f0442d0b0c8e70d052cd97514\nparent 256aefbea1449869620fb26f6ec695536ab453f5\nauthor Sebastian Markbåge <sebastian@calyptus.eu> 1655252202 -0400\ncommitter GitHub <noreply@github.com> 1655252202 -0400\n\nMove the Error creation to be lazy (#24728)\n\nCreating an Error captures a stack trace which can be somewhat expensive.\r\nWe shouldn't do tthat always for every render.\r\n\r\nThis also ensures that the stack trace is more useful because you can\r\nfollow through the Node.js code to see the cause."}},{"author":{"name":"dan","email":"dan.abramov@me.com","date":"2022-06-14T21:34:30Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-14T21:34:30Z"},"message":"Typo","tree":{"sha":"2fc1796a6c5f09bb6cd0c29228bca1a35b6cf228","url":"https://api.github.com/repos/facebook/react/git/trees/2fc1796a6c5f09bb6cd0c29228bca1a35b6cf228"},"url":"https://api.github.com/repos/facebook/react/git/commits/256aefbea1449869620fb26f6ec695536ab453f5","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqP7mCRBK7hj4Ov3rIwAALXEIAA+46sIl51G1BitcJozQmhk8\nTtj0VJUJ8HimexEAeDppsZ86P2bOpdEH7VHmDF63nkUfRfVft9PAxeI0xk2KwGgV\nrLfsroKgxZ8TTtrxy3kkcPEQEYvaz/aJnREOi86vA7b5ChU6tkrzCtgkFfQ5Ibx6\nK4LCor16H9TCeXrYM2/dkBQewsrALrgm8L/ZeppyNgIcJVJlJpKCmnYZz5e/+o7x\nxnzAQNI9/vUCBqfFJHl59fLqZmk586LoLsms5Lwy/WjZkqbwvjZzDGHbVHVcI/Cb\n/iA04eO7zE2uydclAlzXhtbnTdaJkQ0W+5uzbua8FYZYRGJ3xRxKPHtRhB9D9VE=\n=E1h3\n-----END PGP SIGNATURE-----\n","payload":"tree 2fc1796a6c5f09bb6cd0c29228bca1a35b6cf228\nparent 6522179f43949d3b5d9b7d46f7a2f9574eebce81\nauthor dan <dan.abramov@me.com> 1655242470 +0100\ncommitter GitHub <noreply@github.com> 1655242470 +0100\n\nTypo"}},{"author":{"name":"Sebastian Markbåge","email":"sebastian@calyptus.eu","date":"2022-06-14T21:11:01Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-14T21:11:01Z"},"message":"Enable no-longer experimental (#24727)","tree":{"sha":"bb09401f0ef4f6c84b718b5ccd242e0c67487da4","url":"https://api.github.com/repos/facebook/react/git/trees/bb09401f0ef4f6c84b718b5ccd242e0c67487da4"},"url":"https://api.github.com/repos/facebook/react/git/commits/6522179f43949d3b5d9b7d46f7a2f9574eebce81","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqPllCRBK7hj4Ov3rIwAAR00IAHYUNhJA//ndTyrTdtPiYzc3\nXjssCQpzsorclkQmYnVMgb83VXpBKuLjegWfLVucdoa9ejR8JyRQqaUGhsgSE1qN\ng9KyB2nt+M+ajSIAPo+QUzNPinzDspQwUqhQFKCBRQJ19nkVGGiT9lnIMiWt87P/\nRHJ1doUr0VCj9hpB50mOi+Sn9zcjfCAgEx9TTYf3BOip/nDsMbMwluZZ4PWwg0iO\nDd4WQtNZjfFVibo17+qLlAsBaMPeQgV2/PG2cpmUMlIy4X+ELLMS2sn9O3rQilnC\nLvlebqn7pODEbHlzB4VM7PlDEhmq/Mj4ybvbKBgyEeAr5FfTSmaeY8GlFVF0gZY=\n=vTPl\n-----END PGP SIGNATURE-----\n","payload":"tree bb09401f0ef4f6c84b718b5ccd242e0c67487da4\nparent 567500d71083f84cdd4259a76f8a1289d159747f\nauthor Sebastian Markbåge <sebastian@calyptus.eu> 1655241061 -0400\ncommitter GitHub <noreply@github.com> 1655241061 -0400\n\nEnable no-longer experimental (#24727)\n\n"}},{"author":{"name":"Sebastian Markbåge","email":"sebastian@calyptus.eu","date":"2022-06-14T20:48:33Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-14T20:48:33Z"},"message":"Move renderToString tests out of the streamable API tests (#24724)\n\nReactDOMFizzServer(Browser/Node)-test file is really meant to just be a\r\nvery shallow tests of the Browser/Node specific streaming APIs.\r\n\r\nMost of the general streaming tests are in ReactDOMFizzServer-test instead\r\nof testing all streaming related things in each environment.\r\n\r\nThe legacy renderToString APIs are mostly covered by ReactServerRendering-test\r\net al for historical reasons.","tree":{"sha":"ee47e73e12fd49dc8db73375b259c67d809ff824","url":"https://api.github.com/repos/facebook/react/git/trees/ee47e73e12fd49dc8db73375b259c67d809ff824"},"url":"https://api.github.com/repos/facebook/react/git/commits/567500d71083f84cdd4259a76f8a1289d159747f","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqPQhCRBK7hj4Ov3rIwAAd8wIAAgysQum5R4pkDJ1PNDbg7Ec\nK0up4eoqc42Xq6GrV7/wfIx2u6mwEIumeaAa3ZqDyI/RpnDFudke4qGr1UHWNQDr\n3Kh981NqxdY3zN8jdaSSAbHsOnKvyojpLnKOT1ELLkob83m8ioeDogOa1t43+q1x\nOz/9eHL7ViuD9XMsIsCoOgUBMLqgR9FKIgvBy2VFunMKydb8vNPbkd9I2IGfB6Ko\nYaHiOxLd85sg+IE4G4/7G2imJVXuD7xqeLUS9dBbg7KJkeyCuN8WcdWj4TjKPoTS\nSloirnMquyIu4cxyz2PW3d0X4IUsfPBMEOAZMpqrP8oztYPDB4Uli5Tqmo/KAmw=\n=qlnc\n-----END PGP SIGNATURE-----\n","payload":"tree ee47e73e12fd49dc8db73375b259c67d809ff824\nparent 5cc2487e0858c8d3c5415137b3c3a95d8f5a0356\nauthor Sebastian Markbåge <sebastian@calyptus.eu> 1655239713 -0400\ncommitter GitHub <noreply@github.com> 1655239713 -0400\n\nMove renderToString tests out of the streamable API tests (#24724)\n\nReactDOMFizzServer(Browser/Node)-test file is really meant to just be a\r\nvery shallow tests of the Browser/Node specific streaming APIs.\r\n\r\nMost of the general streaming tests are in ReactDOMFizzServer-test instead\r\nof testing all streaming related things in each environment.\r\n\r\nThe legacy renderToString APIs are mostly covered by ReactServerRendering-test\r\net al for historical reasons."}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-06-14T20:24:00Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-14T20:24:00Z"},"message":"bump versions for next release (#24725)","tree":{"sha":"dfc2c07ce8afa9e01df1c38ad4531986fd394db3","url":"https://api.github.com/repos/facebook/react/git/trees/dfc2c07ce8afa9e01df1c38ad4531986fd394db3"},"url":"https://api.github.com/repos/facebook/react/git/commits/5cc2487e0858c8d3c5415137b3c3a95d8f5a0356","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqO5gCRBK7hj4Ov3rIwAAjdsIAECwYD00ksTv7nx0KQKZTOiI\n0nVHw4Lhs/A/7HmiL/sVC+to4gkydXmaaRfvIB9KrSepEsnCdonXhlYLhCy7bGOt\nIRV9CT8ws3Ho38/pxN3Yq97L2zlCfBcAWqTrAk4PN1ycmqjeSWxFIKpg3893CW/U\n/W+3ab53kSunNgOcc9NldrJeu/dZLShlYiMlnQUiusdV3deQC60GH/ljGGdaW8T8\nfNsUDpPx1YylREu15foGVco/Kf3SVjaKgQRHrHLph/K+g1nYnSeHzEN+ODGFfnHE\nEdc8UkJagYNomekBZl7KZGW6zRS6HRaDWC/1+nsr9E/gKQP69OkqTBROA7Nyocg=\n=szBT\n-----END PGP SIGNATURE-----\n","payload":"tree dfc2c07ce8afa9e01df1c38ad4531986fd394db3\nparent 89bae8f371eb2cf49dbe310ec7f04d0e52e32f98\nauthor Josh Story <story@hey.com> 1655238240 -0700\ncommitter GitHub <noreply@github.com> 1655238240 -0700\n\nbump versions for next release (#24725)\n\n"}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-06-14T19:49:54Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-14T19:49:54Z"},"message":"Update Changelog release date for 18.2.0","tree":{"sha":"7878c09f328f22dced485ce477709d73115d0145","url":"https://api.github.com/repos/facebook/react/git/trees/7878c09f328f22dced485ce477709d73115d0145"},"url":"https://api.github.com/repos/facebook/react/git/commits/89bae8f371eb2cf49dbe310ec7f04d0e52e32f98","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqOZiCRBK7hj4Ov3rIwAAYlwIAGBLRlBk8630ioJxRHD74tRu\nJpShOBaw4fHkAVTwSm+kpuctx1V+Ts9K7d4CvJo6vHH7Eb7JsqECLx1pj2aJNhC1\nh+csTsdEMuDorADJZECem/3chKQqMEX4DjQKAYdDkIHK6ndDELJO19cZATiIziIB\nDbR6hf6sUkuOSXEndmbF4LtNRwsZph45zglb53qRdR2i930SBxEB5ep/JK50drri\nh7X+71ldnuAeiwYkDpXRBZGdPW0r8zpjazYJjDKLbRxM98QL68rsEVlEy/NcTlli\nUvHXHdCIsTAuvGzbb9PDNrbA5mq+X1OjgJwaUoqiazt8AvNpe4iofYGKftI7LJA=\n=VC+1\n-----END PGP SIGNATURE-----\n","payload":"tree 7878c09f328f22dced485ce477709d73115d0145\nparent 54f17e490f8b8f39ef9f296c87cd0fba217ce28c\nauthor Josh Story <story@hey.com> 1655236194 -0700\ncommitter GitHub <noreply@github.com> 1655236194 -0700\n\nUpdate Changelog release date for 18.2.0"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-14T18:48:01Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-14T18:48:01Z"},"message":"[Transition Tracing] Fix Cache and Transitions Pop Order (#24719)\n\nWe push the Cache before the transition so we should pop the transition before the cache. This PR fixes this issue.","tree":{"sha":"da1c0270c23f498d7dc686c5aa7974e1bab628e8","url":"https://api.github.com/repos/facebook/react/git/trees/da1c0270c23f498d7dc686c5aa7974e1bab628e8"},"url":"https://api.github.com/repos/facebook/react/git/commits/54f17e490f8b8f39ef9f296c87cd0fba217ce28c","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqNfhCRBK7hj4Ov3rIwAAal0IAFlK4GsyNprOU7qgPwNoIyiW\nbCqA1DeyTXjETHIqqEag/e9qFTVD7pjFqfZFs/q+ooz9P49RnbkUB8vD/OAquJYZ\nkrRKD7wYURCuyya5q5e1Fi+9TnoUBEiraIEJxNHvDLx7V/lMlGmuglCGKvWYZft9\nbuqHuNbPittYysBEgjbOYpbyqh2Kb7urrMrgIBtQszLjZ1iAXE5TR4/BjC91r0h7\n0zkRX9mAQte77ptfF0nJD6OFra2W3tYqee91/RXU+qRV82ZgB/3IFiiOpvaC5LpH\nKMdLdUDMnQReW048sI+Gi8yfnHGfqhncAjQRciu7wr1oDJT6ABF3jY06ATXyNVo=\n=m3NT\n-----END PGP SIGNATURE-----\n","payload":"tree da1c0270c23f498d7dc686c5aa7974e1bab628e8\nparent be229c5655074642ee664f532f2e7411dd7dccc7\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1655232481 -0700\ncommitter GitHub <noreply@github.com> 1655232481 -0700\n\n[Transition Tracing] Fix Cache and Transitions Pop Order (#24719)\n\nWe push the Cache before the transition so we should pop the transition before the cache. This PR fixes this issue."}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-06-13T19:36:49Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-13T19:36:49Z"},"message":"Changelog for 18.2 (#24717)\n\n* 1820-changelog\r\n\r\n* generalize date and fix version typo\r\n\r\n* reword, edit, and condense\r\n\r\n* punctuation\r\n\r\n* Nits\r\n\r\nCo-authored-by: dan <dan.abramov@gmail.com>","tree":{"sha":"921151906b4f605aae9ff8ad25b3335030b098f0","url":"https://api.github.com/repos/facebook/react/git/trees/921151906b4f605aae9ff8ad25b3335030b098f0"},"url":"https://api.github.com/repos/facebook/react/git/commits/be229c5655074642ee664f532f2e7411dd7dccc7","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJip5HRCRBK7hj4Ov3rIwAAbp8IAKqJufWEyp11Sm5yoXaWGzMo\nWLNAE5BbCy7/h2Wjv04jK0vkDUuYbEaird16CwkxJ+R70wKJJyckqPqLRXVyWz7A\n08dGZjEzgSQ4jpNYTJaeIyZcsCoJ835rvqNDz35EFH8u9Sqa9w0TNJjQDoP2Mp+M\n9ZdxBaQYVTuQVZbsokmcyIS/L8XHcZc7i2h7Jie+kQG3/g5iqZ4nwzeCnUHZzxcx\nGgKBJPYmNKWbwUX7Zbi0PwqSp9F+ksvY2YzO4i5CfoEirk59riQ4jXP3ZCx4l62N\nbL+IgM/WoIAdFoBSUw60tAs0Na1BsXOAQFs1h6blbp0ziKerscDA+xeSr5JqdG4=\n=Xakp\n-----END PGP SIGNATURE-----\n","payload":"tree 921151906b4f605aae9ff8ad25b3335030b098f0\nparent 7cf8dfd94f29a42102e5e553395d9bb1b1710c42\nauthor Josh Story <story@hey.com> 1655149009 -0700\ncommitter GitHub <noreply@github.com> 1655149009 -0700\n\nChangelog for 18.2 (#24717)\n\n* 1820-changelog\r\n\r\n* generalize date and fix version typo\r\n\r\n* reword, edit, and condense\r\n\r\n* punctuation\r\n\r\n* Nits\r\n\r\nCo-authored-by: dan <dan.abramov@gmail.com>"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-13T17:56:21Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-13T17:56:21Z"},"message":"[Transition Tracing] Create/Process Marker Complete Callback (#24700)\n\nThis PR adds code to add a marker complete callback to the queue. It also adds code to process marker complete callback.\r\n\r\nMarker complete callbacks, in addition to the fields that transition complete callbacks need, also have a `markerName` field","tree":{"sha":"599c9e391133555b9aa009a684a674e100faa79c","url":"https://api.github.com/repos/facebook/react/git/trees/599c9e391133555b9aa009a684a674e100faa79c"},"url":"https://api.github.com/repos/facebook/react/git/commits/7cf8dfd94f29a42102e5e553395d9bb1b1710c42","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJip3pFCRBK7hj4Ov3rIwAAzRUIAHhbiG3aMwa0OjE4vZT6n0x+\nbJJv+Xlit8pxhvEgcXMSYpjXseAdO9d6hztg+ibmH2nD07wKld+fItxU4YNPj3Xm\nRu05347yK/RTSRVl6Yk9KQPBhq1uhj5YsnLo7I/3+Qj15GkbC8JbR9HEAf6O6tt2\nAdEzc2wmBM0EBA/1DE6amByQu8qYZGd3TuRXhHstn74x1Frnpj17X8dbgQeJTME3\nYzNxIBu/E2DQYG3MdsIDZIUTGa87jsW2FV2cER8FuhQtoUnFynrc0FuhdoA2sb6r\nKUE14A7zZtjgKx0DGit42LMI7qf2nVN0gKSPB10E2GFxYJx3aWw1EdsQqJPJ4dM=\n=KO9G\n-----END PGP SIGNATURE-----\n","payload":"tree 599c9e391133555b9aa009a684a674e100faa79c\nparent 327e4a1f96fbb874001b17684fbb073046a84938\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1655142981 -0700\ncommitter GitHub <noreply@github.com> 1655142981 -0700\n\n[Transition Tracing] Create/Process Marker Complete Callback (#24700)\n\nThis PR adds code to add a marker complete callback to the queue. It also adds code to process marker complete callback.\r\n\r\nMarker complete callbacks, in addition to the fields that transition complete callbacks need, also have a `markerName` field"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-12T22:12:33Z"},"committer":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-13T16:01:44Z"},"message":"[Follow-up] Land enableClientRenderFallbackOnTextMismatch\n\nThis was meant to land in the previous commit; forgot to stage the\nchanges when I was rebasing.","tree":{"sha":"a16e23e58851c679f624600afadd103a13c4f437","url":"https://api.github.com/repos/facebook/react/git/trees/a16e23e58851c679f624600afadd103a13c4f437"},"url":"https://api.github.com/repos/facebook/react/git/commits/327e4a1f96fbb874001b17684fbb073046a84938","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-13T15:58:03Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-13T15:58:03Z"},"message":"Land enableClientRenderFallbackOnTextMismatch (#24714)\n\nThis was released to open source in 18.0 and is already hardcoded to\r\ntrue in www.","tree":{"sha":"5bff93b34702d7c9599fb40648654da5857321f8","url":"https://api.github.com/repos/facebook/react/git/trees/5bff93b34702d7c9599fb40648654da5857321f8"},"url":"https://api.github.com/repos/facebook/react/git/commits/29c2c633159cb2171bb04fe84b9caa09904388e8","comment_count":1,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJip16LCRBK7hj4Ov3rIwAAtHkIACdaHa2+c0pKv9AjZv53HMi8\n72+JSw61NApVFs49hiI3t7n3Ubw/qcJBXDMxIvDwFeQfDi1w7QMYK2ViY3vGYrQS\nNeIMOCp/+8b7gQ6pjR43gclQgvwPIm0wGsVUrX7hoDiRzYD7py1JW0fInFf8Eov8\nbDPPIm0O6vLtrRZhR555o4EdFdUyBQd6oR/BXw4FEgl5vBtJ32CpkXa8kRqG3OgX\nS1ri7vVGW5w10XkP9GgeMt+5ZwEE7DXoDdlX9Vwc2jCTpUupZMxCsKUUTICxhkhJ\nfCA33PPOFMbzZ2jWYThyVaUNdmlt7KBf5MqS1/p6+ZUtO2lm1E/5ctvpmbwHZa0=\n=dLjF\n-----END PGP SIGNATURE-----\n","payload":"tree 5bff93b34702d7c9599fb40648654da5857321f8\nparent a8c9cb18b7e5d9eb3817272a1260f9f6b79815a2\nauthor Andrew Clark <git@andrewclark.io> 1655135883 -0400\ncommitter GitHub <noreply@github.com> 1655135883 -0400\n\nLand enableClientRenderFallbackOnTextMismatch (#24714)\n\nThis was released to open source in 18.0 and is already hardcoded to\r\ntrue in www."}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-13T15:27:40Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-13T15:27:40Z"},"message":"Land enableSuspenseLayoutEffectSemantics flag (#24713)\n\nThis was released to open source in 18.0 and is already hardcoded to\r\ntrue in www.","tree":{"sha":"5bff93b34702d7c9599fb40648654da5857321f8","url":"https://api.github.com/repos/facebook/react/git/trees/5bff93b34702d7c9599fb40648654da5857321f8"},"url":"https://api.github.com/repos/facebook/react/git/commits/a8c9cb18b7e5d9eb3817272a1260f9f6b79815a2","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJip1dsCRBK7hj4Ov3rIwAAPncIAI9QcNcew6O/dNBbgiUwO9jE\nXC8STDQcmTqjSo0OV7L4dgivm4zDXBK5hLSUZMBubRp1de4c1WhUhrgcb2oGlHsO\ncL58JJnyQ9NjQ5OGOJkAune3E7r6GwbITxLCm6+ODttsMw7JKSyd6RleLJkPidpX\nKC9gJqDpud0c2EmhzpxdTl89t5xLBHjQVnlCsWPs4ZMqKES3bKZN3AjFwimSuyzR\nB+7gRgYu6XO6nBOOWhk3F1BP1kZFV42gTHkn+e8Y/FRuiogliF9nm/FmxEf9Yoy5\n1beVJXRTVgg2dJ2Hhgrw7Wfq1W7IB4B23x/8Qx+Aw2ULvVgkQJmTXBdlKFqr6x8=\n=sfPh\n-----END PGP SIGNATURE-----\n","payload":"tree 5bff93b34702d7c9599fb40648654da5857321f8\nparent f7b44539ca9c2d126c7d12cfd0d9d4f13ad5851f\nauthor Andrew Clark <git@andrewclark.io> 1655134060 -0400\ncommitter GitHub <noreply@github.com> 1655134060 -0400\n\nLand enableSuspenseLayoutEffectSemantics flag (#24713)\n\nThis was released to open source in 18.0 and is already hardcoded to\r\ntrue in www."}},{"author":{"name":"Mengdi Chen","email":"mengdi@fb.com","date":"2022-06-10T14:38:33Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-10T14:38:33Z"},"message":"[DevTools] enable \"reload & profile\" button for timeline view (#24702)","tree":{"sha":"44b256d1dbcf029e3f490fde37e542eff05be02a","url":"https://api.github.com/repos/facebook/react/git/trees/44b256d1dbcf029e3f490fde37e542eff05be02a"},"url":"https://api.github.com/repos/facebook/react/git/commits/f7b44539ca9c2d126c7d12cfd0d9d4f13ad5851f","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJio1dpCRBK7hj4Ov3rIwAA41YIAEtb85uraeCCtedRrGPrG5jf\nyTbHhn3RH/NY+roalG724ohP94euYaHlHu/lFMRl4WX3wwnbuSRTxBB+0DSryFXH\nhZz2YNUqGWQmLcSnPkeGR2UIwLZRM7DyGo6X6re+DuOMMDCwNkBvWFAPHfEFrzk8\ncYIoyFM6GVyedOr0gt1OpM1W2igSMl3M3M2k761iASzxm3VhY4heIq4BuJI8FQVk\nUrV3bKcatFLuZplUTBwYha2LO4ULneGD48kkj0nh+qd9ElHl4Tgkb+8DE11D2BM8\nL3coOBZ/7oQUfqmRN2VCsBCtwzWrWoteqWTYYIr/9zWWyadxJhiiiiAKHr1v/F8=\n=IkDC\n-----END PGP SIGNATURE-----\n","payload":"tree 44b256d1dbcf029e3f490fde37e542eff05be02a\nparent a8555c308e06eacf807ec47caafd1e0e789d2c54\nauthor Mengdi Chen <mengdi@fb.com> 1654871913 -0400\ncommitter GitHub <noreply@github.com> 1654871913 -0400\n\n[DevTools] enable \"reload & profile\" button for timeline view (#24702)\n\n"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-10T00:10:42Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-10T00:10:42Z"},"message":"[Transition Tracing] Add Tracing Marker Stack (#24661)\n\nWhen a suspense boundary suspends or commits, we need to notify the corresponding tracing markers so that they know when to log that they've completed. To do this, we add a stack of tracing markers. In the begin phase, we will push the tracing markers onto the stack, and during the complete/unwind phase we will pop the tracing markers off the stack\r\n\r\nIn a later PR, we will store the active tracing markers on the suspense boundary, and during the commit phase we will process the active tracing markers by adding/removing the boundary as appropriate.","tree":{"sha":"8c9f79e56ac474a85abb8251327da81b2884650d","url":"https://api.github.com/repos/facebook/react/git/trees/8c9f79e56ac474a85abb8251327da81b2884650d"},"url":"https://api.github.com/repos/facebook/react/git/commits/a8555c308e06eacf807ec47caafd1e0e789d2c54","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioowCCRBK7hj4Ov3rIwAAaCwIAAef2T/j4sPVlTYwzvl4bRTx\nyCheObE0W8amIRDzGGfFr06/0apVdYUsz25G1lm6st8vB+HJqP8ztQfBVfl8McLs\nH3XMP+MFF3fkG7RaqexgbYVLNbbGnRXeay1Wqm6CT3qjA+t9l8CfvtLUZJwtWvp/\n7mHVK2k8UHcXkBcyFH08N2tAyYYqCeEgE8fN5ga0NypRW07lev99XujcTbLToj8N\na5+0+rkTlLiGhef5PXBjFdLZMXq5eZvZiSwU+xe4/fvJnuNLWXzgULKGJ1KBVCQF\nSs824fZJODxXDmjs3OF17/awvDvzxEOva0U1BhIXI56NH9amUH4C1lxTNQsWxnQ=\n=z3wM\n-----END PGP SIGNATURE-----\n","payload":"tree 8c9f79e56ac474a85abb8251327da81b2884650d\nparent 8186b19378d9085fcdec32c42e2ec8845c1f8ce0\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1654819842 -0700\ncommitter GitHub <noreply@github.com> 1654819842 -0700\n\n[Transition Tracing] Add Tracing Marker Stack (#24661)\n\nWhen a suspense boundary suspends or commits, we need to notify the corresponding tracing markers so that they know when to log that they've completed. To do this, we add a stack of tracing markers. In the begin phase, we will push the tracing markers onto the stack, and during the complete/unwind phase we will pop the tracing markers off the stack\r\n\r\nIn a later PR, we will store the active tracing markers on the suspense boundary, and during the commit phase we will process the active tracing markers by adding/removing the boundary as appropriate."}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-09T02:29:10Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-09T02:29:10Z"},"message":"Check for infinite update loops even if unmounted (#24697)\n\n* [FORKED] Check for infinite update loops even if unmounted\r\n\r\nThe infinite update loop check doesn't need to run if the component\r\nalready unmounted, because an update to an unmounted component can't\r\ncause a re-render. But because we used to run the check in this case,\r\nanyway, I found one test in www that happens to \"rely on\" this behavior\r\n(accidentally). The test is a pretty messy snapshot thing that I have no\r\ninterest fixing so to unblock the sync I'm just going to switch this\r\nback to how it was.\r\n\r\n* Add previous commit to forked revisions","tree":{"sha":"0f9b7c74cb4631ea6c8319718e4cb7cb2c9a7488","url":"https://api.github.com/repos/facebook/react/git/trees/0f9b7c74cb4631ea6c8319718e4cb7cb2c9a7488"},"url":"https://api.github.com/repos/facebook/react/git/commits/8186b19378d9085fcdec32c42e2ec8845c1f8ce0","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioVr2CRBK7hj4Ov3rIwAAdFQIAI4wiZkYPkA4ecDoK6OVwqe0\nULxEM3fBUb16sWtZkuyIFjo6fFIrG1dH4P35RuNFDNkNaZx3rOFkOv0j3mhUBhRs\nxWaXhT8wIruFZqVWD9Waxxed5ciaJ2FqrTKCDKbJbIzW9Lp5PPT8sZqPAud8pfP7\noczcucYq/Cu+ugdoJXPx9z3O90Z5BZNu1Pv+HCYKP84eVJoGCqFkaEPd03xxvREA\nibADX7HDxqwM7HiFbzGqdlLeCOStsf+R3T98srsC7jG/Q0h/j2jmrrlV9bMVQA21\nWSB0Ge1k+prRodqqySvSB5uCFe8CKo6jFWCfeNBos3WtLBpA0GlITQ+XC0/j4NQ=\n=dq1i\n-----END PGP SIGNATURE-----\n","payload":"tree 0f9b7c74cb4631ea6c8319718e4cb7cb2c9a7488\nparent 9e3b772b8cabbd8cadc7522ebe3dde3279e79d9e\nauthor Andrew Clark <git@andrewclark.io> 1654741750 -0400\ncommitter GitHub <noreply@github.com> 1654741750 -0400\n\nCheck for infinite update loops even if unmounted (#24697)\n\n* [FORKED] Check for infinite update loops even if unmounted\r\n\r\nThe infinite update loop check doesn't need to run if the component\r\nalready unmounted, because an update to an unmounted component can't\r\ncause a re-render. But because we used to run the check in this case,\r\nanyway, I found one test in www that happens to \"rely on\" this behavior\r\n(accidentally). The test is a pretty messy snapshot thing that I have no\r\ninterest fixing so to unblock the sync I'm just going to switch this\r\nback to how it was.\r\n\r\n* Add previous commit to forked revisions"}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-06-08T23:59:49Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-08T23:59:49Z"},"message":"Update error transform to allow excluding errors inside subexpressions like ternaries (#24693)\n\n* Update error transform to allow excluding errors inside subexpressions like ternaries\r\n\r\n* make leadingcomments aggregation walk the expression stack","tree":{"sha":"0ab71922682cd9fc52d369b66d37155563cbce6d","url":"https://api.github.com/repos/facebook/react/git/trees/0ab71922682cd9fc52d369b66d37155563cbce6d"},"url":"https://api.github.com/repos/facebook/react/git/commits/9e3b772b8cabbd8cadc7522ebe3dde3279e79d9e","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioTf1CRBK7hj4Ov3rIwAA6IQIAAVGL4+Q6x0ADANtRl8WiLaW\nnO0Udvk0CL8TsoYOSnAPe7KKeVGqJq/3sxOtYtJg2CLygoX0rajvUyx6DRSu/RqO\nuQ9BTalfp3DYWVLjypfACukoWd+q1CJaGQ1ylFrL4JgEXIBEPVpT3ARyxSXyyENa\nO6OkED9iC18JIiRLMrq9hNgBR6x0+juES8AsCJMZmTrfJ9aO9MOxwB/ypp0vdhSa\nA4/LDxWOg9OqNMG6j/gP1m3koHvkq+KBpDoqZLu29m2/aJxyHzLtrvCZNkzDnNCW\nd+BSwo9/T6e+YwYSvbLowI2NFJ5CETc6h4DZ1OJooOQCy8U4hTzLEfAn5qkGqk4=\n=ojx/\n-----END PGP SIGNATURE-----\n","payload":"tree 0ab71922682cd9fc52d369b66d37155563cbce6d\nparent 3e92eb0fce762aca49d2ea18b869a2fd8a75089e\nauthor Josh Story <story@hey.com> 1654732789 -0700\ncommitter GitHub <noreply@github.com> 1654732789 -0700\n\nUpdate error transform to allow excluding errors inside subexpressions like ternaries (#24693)\n\n* Update error transform to allow excluding errors inside subexpressions like ternaries\r\n\r\n* make leadingcomments aggregation walk the expression stack"}},{"author":{"name":"Mengdi Chen","email":"mengdi@fb.com","date":"2022-06-08T20:01:06Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-08T20:01:06Z"},"message":"[DevTools] find best renderer when inspecting (#24665)\n\n* [DevTools] find best renderer when inspecting\r\n\r\n* fix lint\r\n\r\n* fix test\r\n\r\n* fix lint\r\n\r\n* move logic to agent\r\n\r\n* fix lint\r\n\r\n* style improvements per review comments\r\n\r\n* fix lint & flow\r\n\r\n* re-add try catch for safety","tree":{"sha":"839b68268fe5604b770a863831a3fd65e03bb39a","url":"https://api.github.com/repos/facebook/react/git/trees/839b68268fe5604b770a863831a3fd65e03bb39a"},"url":"https://api.github.com/repos/facebook/react/git/commits/3e92eb0fce762aca49d2ea18b869a2fd8a75089e","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioQACCRBK7hj4Ov3rIwAArRoIAAe32on3uSPNmDUi5TiCFlsz\nYuMQQ5DrHvmWFZod5JXbvSPcTao47mzS6xiRXXKgM4SvbgK1FJJw3NMr4KTqX2h5\n1FFeA3sBfVA3qOUWiKlPaK2XsuK9OpmX2FGZ2pp9zQFtfYVsx+3VQs5MbQW91y/T\nt8VKp93WaEY4ym3xv52MXUdSOi2Bp1Q7OZFvQ/p5i8wGRD3xZ6MLfTOPBevF39wo\nsaObjFsera331h9M972czg4Fr3XocD/Q9S7Q8KiwzuQIAib6q+orV4eKz0jqfkC8\nP66Oca+Y/M91oM2u09oiGz4IKVVNDy6y5n2WTdWvjP5YOEZE/0kvQZNQ4jJ3uTU=\n=Ysrf\n-----END PGP SIGNATURE-----\n","payload":"tree 839b68268fe5604b770a863831a3fd65e03bb39a\nparent 42b330c1c9bf71ca512c56c204bca36bdd53b3c6\nauthor Mengdi Chen <mengdi@fb.com> 1654718466 -0400\ncommitter GitHub <noreply@github.com> 1654718466 -0400\n\n[DevTools] find best renderer when inspecting (#24665)\n\n* [DevTools] find best renderer when inspecting\r\n\r\n* fix lint\r\n\r\n* fix test\r\n\r\n* fix lint\r\n\r\n* move logic to agent\r\n\r\n* fix lint\r\n\r\n* style improvements per review comments\r\n\r\n* fix lint & flow\r\n\r\n* re-add try catch for safety"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-08T17:07:05Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-08T17:07:05Z"},"message":"Fix check_error_codes CI job (#24692)\n\nThe diff command was missing a --quiet argument, causing the job not to\r\nfail when unminified messages were found.","tree":{"sha":"15675f967b9e80f2e0d4e19f732f1124a4ab95f3","url":"https://api.github.com/repos/facebook/react/git/trees/15675f967b9e80f2e0d4e19f732f1124a4ab95f3"},"url":"https://api.github.com/repos/facebook/react/git/commits/42b330c1c9bf71ca512c56c204bca36bdd53b3c6","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioNc5CRBK7hj4Ov3rIwAANqoIAHszGKukRmXhYbyxULsi1kiF\n/HB2tI5C1qbvBi8JnzHthVo0R5cxDixE+bnm94yxgTEuB7jwwnmxQt0MiFWCSBP/\nWGT9y7RXztbGpRR4cwGPfrib6BU1NMUjg60wiER99bJ+/mR3RpbJqtIjQ9AZq93R\nqPeTb2BMeSZa7QdeqtKi1/t5SLbpUMEbnvWyOmF12OIxWlvdezyN32Tl1DuVKNQm\nG2SZCkYLZDsC462cuDIVds8ErP8Xdgss8huxY86J9wUmq38V5K5mogPF937ILLv7\nJs8699bJyCaRjnK2nO0qI7X+5wWVAmUuV5/NYz900FYOtwTPKipgwYQJHASZYpM=\n=/J1h\n-----END PGP SIGNATURE-----\n","payload":"tree 15675f967b9e80f2e0d4e19f732f1124a4ab95f3\nparent 060505e9dce2f3d5d9d67c2a9415b94e5b0ca291\nauthor Andrew Clark <git@andrewclark.io> 1654708025 -0400\ncommitter GitHub <noreply@github.com> 1654708025 -0400\n\nFix check_error_codes CI job (#24692)\n\nThe diff command was missing a --quiet argument, causing the job not to\r\nfail when unminified messages were found."}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-06-08T16:49:31Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-08T16:49:31Z"},"message":"Fix misapplying prod error opt-out (#24688)\n\nThe eslint-disable-next-line opt out for prod error minification was not properly working. In the build a replacable error was output even though it was not failing the build. This change refactors the code to avoid the erroneous behavior but a fix for the lint may be better","tree":{"sha":"913e8412021a6e5a7ac8fc88fbbfe80062d1bfe1","url":"https://api.github.com/repos/facebook/react/git/trees/913e8412021a6e5a7ac8fc88fbbfe80062d1bfe1"},"url":"https://api.github.com/repos/facebook/react/git/commits/060505e9dce2f3d5d9d67c2a9415b94e5b0ca291","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioNMbCRBK7hj4Ov3rIwAAw/4IAEUJzLLpNzHpcqATMjnh8QvY\nBYDiHqmTtLX4Pp5I3FaUZia9GqsP7EJDgfk84JC3VtVeQRs1vUISEJ1zXWr804HM\n2DADQxO6YhyD3RgFPARyWJ1Nh70dRL44zufjSiqXMiG5QWBGdvS10qelBjq0ZuB+\nhI8H09Ax1RDhTSCdb3As6uMCR5xcSFlfklHUc+bTVD+YZD35Hlww/4bPLIRN++to\n1wXMeEp7gUAIM2dkOQPquy0wC+E6+GzNUKwiN4EJmiKuJEJC9DMrU9eMMyrAAe/P\nH0ZmvpUX/YvY68RebHoQ0TRiyhiu98I33tOWd+Go2YAJVJtf6JurigBq5OxgM7Q=\n=6i0J\n-----END PGP SIGNATURE-----\n","payload":"tree 913e8412021a6e5a7ac8fc88fbbfe80062d1bfe1\nparent 47944142f57d8c1c7b79eaf6522de38e76137ca5\nauthor Josh Story <story@hey.com> 1654706971 -0700\ncommitter GitHub <noreply@github.com> 1654706971 -0700\n\nFix misapplying prod error opt-out (#24688)\n\nThe eslint-disable-next-line opt out for prod error minification was not properly working. In the build a replacable error was output even though it was not failing the build. This change refactors the code to avoid the erroneous behavior but a fix for the lint may be better"}},{"author":{"name":"Mathieu Dutour","email":"mathieu@dutour.me","date":"2022-06-08T16:00:10Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-08T16:00:10Z"},"message":"`now` isn't part of the react-reconciler config anymore (#24689)","tree":{"sha":"9e7d90be5c6dbc23763c1357ced7c3ef7d85b630","url":"https://api.github.com/repos/facebook/react/git/trees/9e7d90be5c6dbc23763c1357ced7c3ef7d85b630"},"url":"https://api.github.com/repos/facebook/react/git/commits/47944142f57d8c1c7b79eaf6522de38e76137ca5","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioMeKCRBK7hj4Ov3rIwAA01YIAJGktLPLh2ARYKjAnHEzyo0Y\nxaGlMInCl62CoHTaifkzCI7P6NZvt9GRQfXqyLOGlWcZ4m2U0XMeaQz3nuCXAg5w\nXwM8lfBjzE+8vS3BTKw5t5Yl9VuYcNZUMZQ91RuCamU/hEqFRe23TzLFFBYm62nr\n1kaOBlMsadI65Gs+PuqBUZ6sOIVVvbHCmWgn80XigyPGcsvNd075ZpDlv72x/lCi\nSZz6p55Lw//xJzUX5L30cZ+boXIIno93e5YtbgjT60chdIzCu8SGTZIhlcq4Uql5\n8/T+D/yO9hrswtQs9IYaaSES4X0ZbEm+P7SquhQBHGOkK9heRDwgdm4Upfnyj2w=\n=W47b\n-----END PGP SIGNATURE-----\n","payload":"tree 9e7d90be5c6dbc23763c1357ced7c3ef7d85b630\nparent b345523528f6b346c3a6de2145d5df6b2e23ca75\nauthor Mathieu Dutour <mathieu@dutour.me> 1654704010 +0200\ncommitter GitHub <noreply@github.com> 1654704010 +0100\n\n`now` isn't part of the react-reconciler config anymore (#24689)\n\n"}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-06-08T05:36:09Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-08T05:36:09Z"},"message":"[Fizz] Support abort reasons (#24680)\n\n* [Fizz] Support abort reasons\r\n\r\nFizz supports aborting the render but does not currently accept a reason. The various render functions that use Fizz have some automatic and some user-controlled abort semantics that can be useful to communicate with the running program and users about why an Abort happened.\r\n\r\nThis change implements abort reasons for renderToReadableStream and renderToPipeable stream as well as legacy renderers such as renderToString and related implementations.\r\n\r\nFor AbortController implementations the reason passed to the abort method is forwarded to Fizz and sent to the onError handler. If no reason is provided the AbortController should construct an AbortError DOMException and as a fallback Fizz will generate a similar error in the absence of a reason\r\n\r\nFor pipeable  streams, an abort function is returned alongside pipe which already accepted a reason. That reason is now forwarded to Fizz and the implementation described above.\r\n\r\nFor legacy renderers there is no exposed abort functionality but it is used internally and the reasons provided give useful context to, for instance to the fact that Suspense is not supported in renderToString-like renderers","tree":{"sha":"0a4d39a7fe66221c8b4e4b8140267f30353e80be","url":"https://api.github.com/repos/facebook/react/git/trees/0a4d39a7fe66221c8b4e4b8140267f30353e80be"},"url":"https://api.github.com/repos/facebook/react/git/commits/b345523528f6b346c3a6de2145d5df6b2e23ca75","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioDVJCRBK7hj4Ov3rIwAA2IMIAFyH8ZiM+x485WMFwskosiDE\nkCdWakjyODK3+SEzlOchGRvyvc/GqNzMvAPUz454AOlyD6DgWAaZUCmRAGLEBcUG\naMWMZsG/ePTu9RIX2ci5wDKxCHYCjOWFCOmmrXAzhHrGGEMEoCjRtej651W7UAMW\ngXhcE14zXHM0Oewyjfi4GJ/WWkPK/GtP4CZ2UPjHFPVvmw/1AGsnT1QkAiGZLkuj\nm8Sw77fx12+jtMZvkBM6wlX6AnuYhlOZj5KXzRFAQUvhp2w02m6tI4+ZD2coKGjG\n70E3bCv/b9IVt+CAZvlOUlIBeJlY7isspIFG2ZGos3LOXywueLiIhD8sT/kSmuI=\n=2Rhu\n-----END PGP SIGNATURE-----\n","payload":"tree 0a4d39a7fe66221c8b4e4b8140267f30353e80be\nparent 79f54c16dc3d5298e6037df75db2beb3552896e9\nauthor Josh Story <story@hey.com> 1654666569 -0700\ncommitter GitHub <noreply@github.com> 1654666569 -0700\n\n[Fizz] Support abort reasons (#24680)\n\n* [Fizz] Support abort reasons\r\n\r\nFizz supports aborting the render but does not currently accept a reason. The various render functions that use Fizz have some automatic and some user-controlled abort semantics that can be useful to communicate with the running program and users about why an Abort happened.\r\n\r\nThis change implements abort reasons for renderToReadableStream and renderToPipeable stream as well as legacy renderers such as renderToString and related implementations.\r\n\r\nFor AbortController implementations the reason passed to the abort method is forwarded to Fizz and sent to the onError handler. If no reason is provided the AbortController should construct an AbortError DOMException and as a fallback Fizz will generate a similar error in the absence of a reason\r\n\r\nFor pipeable  streams, an abort function is returned alongside pipe which already accepted a reason. That reason is now forwarded to Fizz and the implementation described above.\r\n\r\nFor legacy renderers there is no exposed abort functionality but it is used internally and the reasons provided give useful context to, for instance to the fact that Suspense is not supported in renderToString-like renderers"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-08T00:04:02Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-08T00:04:02Z"},"message":"Bugfix: Revealing a hidden update (#24685)\n\n* Add `isHidden` to OffscreenInstance\r\n\r\nWe need to be able to read whether an offscreen tree is hidden from\r\nan imperative event. We can store this on its OffscreenInstance.\r\n\r\nWe were already scheduling a commit effect whenever the visibility\r\nchanges, in order to toggle the inner effects. So we can reuse that.\r\n\r\n* [FORKED] Bugfix: Revealing a hidden update\r\n\r\nThis fixes a bug I discovered related to revealing a hidden Offscreen\r\ntree. When this happens, we include in that render all the updates that\r\nhad previously been deferred — that is, all the updates that would have\r\nalready committed if the tree weren't hidden. This is necessary to avoid\r\ntearing with the surrounding contents. (This was the \"flickering\"\r\nSuspense bug we found a few years ago: #18411.)\r\n\r\nThe way we do this is by tracking the lanes of the updates that were\r\ndeferred by a hidden tree. These are the \"base\" lanes. Then, in order\r\nto reveal the hidden tree, we process any update that matches one of\r\nthose base lanes.\r\n\r\nThe bug I discovered is that some of these base lanes may include\r\nupdates that were not present at the time the tree was hidden. We cannot\r\nflush those updates earlier that the surrounding contents — that, too,\r\ncould cause tearing.\r\n\r\nThe crux of the problem is that we sometimes reuse the same lane for\r\nbase updates and for non-base updates. So the lane alone isn't\r\nsufficient to distinguish between these cases. We must track this in\r\nsome other way.\r\n\r\nThe solution I landed upon was to add an extra OffscreenLane bit to any\r\nupdate that is made to a hidden tree. Then later when we reveal the\r\ntree, we'll know not to treat them as base updates.\r\n\r\nThe extra OffscreenLane bit is removed as soon as that lane is committed\r\nby the root (markRootFinished) — at that point, it gets\r\n\"upgraded\" to a base update.\r\n\r\nThe trickiest part of this algorithm is reliably detecting when an\r\nupdate is made to a hidden tree. What makes this challenging is when the\r\nupdate is received during a concurrent event, while a render is already\r\nin progress — it's possible the work-in-progress render is about to\r\nflip the visibility of the tree that's being updated, leading to a race\r\ncondition.\r\n\r\nTo avoid a race condition, we will wait to read the visibility of the\r\ntree until the current render has finished. In other words, this makes\r\nit an atomic operation. Most of this logic was already implemented\r\nin #24663.\r\n\r\nBecause this bugfix depends on a moderately risky refactor to the update\r\nqueue (#24663), it only works in the \"new\" reconciler fork. We will roll\r\nit out gradually to www before landing in the main fork.\r\n\r\n* Add previous commit to list of forked revisions","tree":{"sha":"936b37ddec0941dfb9c79e5e81a814122c658d83","url":"https://api.github.com/repos/facebook/react/git/trees/936b37ddec0941dfb9c79e5e81a814122c658d83"},"url":"https://api.github.com/repos/facebook/react/git/commits/79f54c16dc3d5298e6037df75db2beb3552896e9","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJin+dyCRBK7hj4Ov3rIwAAf1EIAFOLDbLhnibnwGh9jXR0SmGG\n8rTjbVtaQASoDPL9i926VeEeaWlmrwdCD1bMQ1VweCi9uCNaTao5lTcQJWG+Wnjv\nKg5VwSG+zjc3GQLyJ/nA/IEpV5kmLMspNUT7T2YIBj0iCkzqEhVS9GeFE6nOuiej\n9GY/QdXh3iFi9AFyADF3jWknaM4MddQ0uw3hTrs418N54ihx6VkepK2rhgVYyEDw\ngVboni3QzwX0o1r5r9arONTBgfkR2O6abLjfsm5Xvl9c6IgAOgmEnzttm0LmNqVV\n7gvqBHyZM59FAx7lIJn1xTnEqLz2Dfo8Vwzmhami5SwYjz3PPoVV/tLpSuFRgiI=\n=uXDn\n-----END PGP SIGNATURE-----\n","payload":"tree 936b37ddec0941dfb9c79e5e81a814122c658d83\nparent 7e8a020a4aa8a24e5f0c0ce06b25e485d2888f57\nauthor Andrew Clark <git@andrewclark.io> 1654646642 -0400\ncommitter GitHub <noreply@github.com> 1654646642 -0400\n\nBugfix: Revealing a hidden update (#24685)\n\n* Add `isHidden` to OffscreenInstance\r\n\r\nWe need to be able to read whether an offscreen tree is hidden from\r\nan imperative event. We can store this on its OffscreenInstance.\r\n\r\nWe were already scheduling a commit effect whenever the visibility\r\nchanges, in order to toggle the inner effects. So we can reuse that.\r\n\r\n* [FORKED] Bugfix: Revealing a hidden update\r\n\r\nThis fixes a bug I discovered related to revealing a hidden Offscreen\r\ntree. When this happens, we include in that render all the updates that\r\nhad previously been deferred — that is, all the updates that would have\r\nalready committed if the tree weren't hidden. This is necessary to avoid\r\ntearing with the surrounding contents. (This was the \"flickering\"\r\nSuspense bug we found a few years ago: #18411.)\r\n\r\nThe way we do this is by tracking the lanes of the updates that were\r\ndeferred by a hidden tree. These are the \"base\" lanes. Then, in order\r\nto reveal the hidden tree, we process any update that matches one of\r\nthose base lanes.\r\n\r\nThe bug I discovered is that some of these base lanes may include\r\nupdates that were not present at the time the tree was hidden. We cannot\r\nflush those updates earlier that the surrounding contents — that, too,\r\ncould cause tearing.\r\n\r\nThe crux of the problem is that we sometimes reuse the same lane for\r\nbase updates and for non-base updates. So the lane alone isn't\r\nsufficient to distinguish between these cases. We must track this in\r\nsome other way.\r\n\r\nThe solution I landed upon was to add an extra OffscreenLane bit to any\r\nupdate that is made to a hidden tree. Then later when we reveal the\r\ntree, we'll know not to treat them as base updates.\r\n\r\nThe extra OffscreenLane bit is removed as soon as that lane is committed\r\nby the root (markRootFinished) — at that point, it gets\r\n\"upgraded\" to a base update.\r\n\r\nThe trickiest part of this algorithm is reliably detecting when an\r\nupdate is made to a hidden tree. What makes this challenging is when the\r\nupdate is received during a concurrent event, while a render is already\r\nin progress — it's possible the work-in-progress render is about to\r\nflip the visibility of the tree that's being updated, leading to a race\r\ncondition.\r\n\r\nTo avoid a race condition, we will wait to read the visibility of the\r\ntree until the current render has finished. In other words, this makes\r\nit an atomic operation. Most of this logic was already implemented\r\nin #24663.\r\n\r\nBecause this bugfix depends on a moderately risky refactor to the update\r\nqueue (#24663), it only works in the \"new\" reconciler fork. We will roll\r\nit out gradually to www before landing in the main fork.\r\n\r\n* Add previous commit to list of forked revisions"}},{"author":{"name":"Sebastian Markbåge","email":"sebastian@calyptus.eu","date":"2022-06-07T19:12:51Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-07T19:12:51Z"},"message":"Remove extra Server Context argument (#24683)\n\nThis was left over from a refactor.","tree":{"sha":"fa26633f068f5bf8cb24bba24b232251959a553f","url":"https://api.github.com/repos/facebook/react/git/trees/fa26633f068f5bf8cb24bba24b232251959a553f"},"url":"https://api.github.com/repos/facebook/react/git/commits/7e8a020a4aa8a24e5f0c0ce06b25e485d2888f57","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJin6MzCRBK7hj4Ov3rIwAALPYIAFN0H6CEllVlP9kkrhyA1uht\ncpYzm4KrIWwAqqsplHY7cy1Ae08uR9GvuQXzBbysF+uR8yt900279XsrYC/EmuMJ\nuqE1AFbUuFJoZUJRe1+AOklPHjrFKGKep+ScHMickirfuOqGCQKoQCEWzpF3Z9hu\nhnOMspS6LfzYNUvpX5I0zlNtqXF+36k41hwRXbSLYnohvjJYbM+PcQW9ZTrgPgNl\nSfwPHYO+QnFQj56MdbGbmWiFOBe9Y4gYr2pMqjlfTvmPnkg4lUZJF678TYZdJjAu\nrjaGCXY5aMoEKX2jGBUR3dyaeAJdjfPsYPMIpuu1p8vTrxlYKaDZaRrp2JIWN/4=\n=IZno\n-----END PGP SIGNATURE-----\n","payload":"tree fa26633f068f5bf8cb24bba24b232251959a553f\nparent 3bb154bbab78038f1b0aad42f10c006b71eac8da\nauthor Sebastian Markbåge <sebastian@calyptus.eu> 1654629171 -0400\ncommitter GitHub <noreply@github.com> 1654629171 -0400\n\nRemove extra Server Context argument (#24683)\n\nThis was left over from a refactor."}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-07T18:05:04Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-07T18:05:04Z"},"message":"[DevTools] Run Devtools Regression Tests Once a Day (#24678)\n\nWe don't need to run DevTools regression tests once an hour, and also it makes getting the most recent react build or react devtools build really annoying, so run them once a day instead","tree":{"sha":"4c1fc314a776f23c613074fae8a0644a5595d901","url":"https://api.github.com/repos/facebook/react/git/trees/4c1fc314a776f23c613074fae8a0644a5595d901"},"url":"https://api.github.com/repos/facebook/react/git/commits/3bb154bbab78038f1b0aad42f10c006b71eac8da","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJin5NQCRBK7hj4Ov3rIwAAkUEIACUyHXv8Se0C34kqyh2RZM/9\ns8rd3VddOpm3XxJxFu0ylLUul8QBs3V33Jy0C0/Gl+ZC3NBI6R4tSKXOPGelMcMT\nncShIAgVRd5GwbkVRlh6wL7TavehYWaC4H3sgBtg2EyDTLUswJkoJi/QGQwScUrA\nWQr96euEUN+jVpk0yyNQgtSOmzViFvLV466Km/wx2mQUrWTq/dNzS9HgCpQIGqtt\nnAcrKBd05rTzhLptO8CEzJY8YkoU8U5AOgBPipC/rJFK3l+smAjCb4UCNMzR/MC3\nOmE8JncvZV6CJ/imMHHzmtIeuUL7ZcOSpEcuwDZ62xB6+EWDp7kXPnibhQ4xCww=\n=LNO4\n-----END PGP SIGNATURE-----\n","payload":"tree 4c1fc314a776f23c613074fae8a0644a5595d901\nparent bcbeb52bf36c6f5ecdad46a48e87cf4354c5a64f\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1654625104 -0700\ncommitter GitHub <noreply@github.com> 1654625104 -0700\n\n[DevTools] Run Devtools Regression Tests Once a Day (#24678)\n\nWe don't need to run DevTools regression tests once an hour, and also it makes getting the most recent react build or react devtools build really annoying, so run them once a day instead"}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-06-07T07:33:36Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-07T07:33:36Z"},"message":"[Fizz] Disallow complex children in <title> elements (#24679)\n\n* [Fizz] Disallow complex children in <title> elements\r\n\r\n<title> Elements in the DOM can only have Text content. In Fizz if more than one text node is emitted an HTML comment node is used as a text separator. Unfortunately because of the content restriction of the DOM representation of the title element this separator is displayed as escaped text which is not what the component author intended.\r\n\r\nThis commit special cases title handling, primarily to issue warnings if you pass complex children to <title>. At the moment title expects to receive a single child or an array of length 1. In both cases the type of that child must be string or number. If anything more complex is provided a warning will be logged to the console explaining why this is problematic.\r\n\r\nThere is no runtime behavior change so broken things are still broken (e.g. returning two text nodes which will cause a separator or using Suspense inside title children) but they should at least be accompanied by warnings that are useful.\r\n\r\nOne edge case that will now warn but won't technically break an application is if you use a Component that returns a single string as a child of title. This is a form of indirection that works but becasue we cannot discriminate between a Component that will follow the rules and one that violates them the warning is issued regardless.\r\n\r\n* fixup dev warning conditional logic\r\n\r\n* lints\r\n\r\n* fix bugs","tree":{"sha":"6732f705db23e6e348ab8c4bfbfd7b1721649f66","url":"https://api.github.com/repos/facebook/react/git/trees/6732f705db23e6e348ab8c4bfbfd7b1721649f66"},"url":"https://api.github.com/repos/facebook/react/git/commits/bcbeb52bf36c6f5ecdad46a48e87cf4354c5a64f","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJinv9QCRBK7hj4Ov3rIwAAgGwIAEv4gJCR80I07PH6aZ7aZqiU\npD9Mac/9kfhe5s/wyY800AeyARMi18uvm2k0bNfY6lxL5CzfWZhWXvj98aMptRzP\nqdpo2Laig/PxcNvekxSt6NiCjXmwbnuvTZ34XjeOtyS4LXg8mENUud87FcUUpI1j\ngFAHEup+U2uvzi6HFSt2IZw3W/bOnTfDdfpUkyfCXSYCowzNoBDezez+L+oiEZ/u\nVsxWNySgWnBt4SXup9Cjvry95L5tdZur9cZ7skOuRmqBmA6qsknj5F1C6RQnP5yQ\nJFbBh8NkjiC5pyFP8Ozj+Keqs5Ey7oz6De7p7sb9TrASyCJ8wph4s+qoxlzM2UA=\n=D2ov\n-----END PGP SIGNATURE-----\n","payload":"tree 6732f705db23e6e348ab8c4bfbfd7b1721649f66\nparent 4f29ba1cc52061e439cede3813e100557b23a15c\nauthor Josh Story <story@hey.com> 1654587216 -0400\ncommitter GitHub <noreply@github.com> 1654587216 -0700\n\n[Fizz] Disallow complex children in <title> elements (#24679)\n\n* [Fizz] Disallow complex children in <title> elements\r\n\r\n<title> Elements in the DOM can only have Text content. In Fizz if more than one text node is emitted an HTML comment node is used as a text separator. Unfortunately because of the content restriction of the DOM representation of the title element this separator is displayed as escaped text which is not what the component author intended.\r\n\r\nThis commit special cases title handling, primarily to issue warnings if you pass complex children to <title>. At the moment title expects to receive a single child or an array of length 1. In both cases the type of that child must be string or number. If anything more complex is provided a warning will be logged to the console explaining why this is problematic.\r\n\r\nThere is no runtime behavior change so broken things are still broken (e.g. returning two text nodes which will cause a separator or using Suspense inside title children) but they should at least be accompanied by warnings that are useful.\r\n\r\nOne edge case that will now warn but won't technically break an application is if you use a Component that returns a single string as a child of title. This is a form of indirection that works but becasue we cannot discriminate between a Component that will follow the rules and one that violates them the warning is issued regardless.\r\n\r\n* fixup dev warning conditional logic\r\n\r\n* lints\r\n\r\n* fix bugs"}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-06-06T21:23:32Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-06T21:23:32Z"},"message":"support errorInfo in onRecoverableError (#24591)\n\n* extend onRecoverableError API to support errorInfo\r\n\r\nerrorInfo has been used in Error Boundaries wiht componentDidCatch for a while now. To date this metadata only contained a componentStack. onRecoverableError only receives an error (type mixed) argument and thus providing additional error metadata was not possible without mutating user created mixed objects.\r\n\r\nThis change modifies rootConcurrentErrors rootRecoverableErrors, and hydrationErrors so all expect CapturedValue types. additionally a new factory function allows the creation of CapturedValues from a value plus a hash and stack.\r\n\r\nIn general, client derived CapturedValues will be created using the original function which derives a componentStack from a fiber and server originated CapturedValues will be created using with a passed in hash and optional componentStack.","tree":{"sha":"a09b213a1962bbed6ede9e96e0a3e070c548a1f6","url":"https://api.github.com/repos/facebook/react/git/trees/a09b213a1962bbed6ede9e96e0a3e070c548a1f6"},"url":"https://api.github.com/repos/facebook/react/git/commits/4f29ba1cc52061e439cede3813e100557b23a15c","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJinnBUCRBK7hj4Ov3rIwAAzh8IAKfJsCWkIWafpvk7y94nNLpq\npEtp/oAanzdRQfkFHLidhq9c4Kcr7o2HxrEnWFd/fcQ1us5Vte2QVkAPzklsfjls\nO1z0Glu7QwMQhCCXPjR/qFdo4zG6Z/NcwNiiM4z4jeadQ8cufMeGkZ0TR4xkqBsn\nhtYP+YtUfJl7vWCSOwewriGJetuA3dHfJY/vFSpxz4lArZ0cujON3q7cQB/N0qR5\nBLRwSRwEZrQe2Wz8aG5EU+9U5NI5vxBFl7lvXc04Am0hHqdL7kfQPS879vyzv8sw\nF7fdP359zvW1NPRvGk4zhvxAynmDMUJ11P7bUHMrFo0GXutnhuGg1BdA0N7EhWk=\n=EWvX\n-----END PGP SIGNATURE-----\n","payload":"tree a09b213a1962bbed6ede9e96e0a3e070c548a1f6\nparent 254b49e5897b4e493c88ecec5c80abeacda90526\nauthor Josh Story <story@hey.com> 1654550612 -0400\ncommitter GitHub <noreply@github.com> 1654550612 -0700\n\nsupport errorInfo in onRecoverableError (#24591)\n\n* extend onRecoverableError API to support errorInfo\r\n\r\nerrorInfo has been used in Error Boundaries wiht componentDidCatch for a while now. To date this metadata only contained a componentStack. onRecoverableError only receives an error (type mixed) argument and thus providing additional error metadata was not possible without mutating user created mixed objects.\r\n\r\nThis change modifies rootConcurrentErrors rootRecoverableErrors, and hydrationErrors so all expect CapturedValue types. additionally a new factory function allows the creation of CapturedValues from a value plus a hash and stack.\r\n\r\nIn general, client derived CapturedValues will be created using the original function which derives a componentStack from a fiber and server originated CapturedValues will be created using with a passed in hash and optional componentStack.\r\n"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-06T17:36:58Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-06T17:36:58Z"},"message":"Add snapshot testing on e2e test failure (#24672)\n\nWe have a currently unreproducible flaky e2e test. This PR captures snapshots on e2e test failures so we can better debug flaky e2e tests that don't fail locally.","tree":{"sha":"9ff19104c0edbe9f187d1692c5cdbd46b4ba7e78","url":"https://api.github.com/repos/facebook/react/git/trees/9ff19104c0edbe9f187d1692c5cdbd46b4ba7e78"},"url":"https://api.github.com/repos/facebook/react/git/commits/254b49e5897b4e493c88ecec5c80abeacda90526","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJinjs6CRBK7hj4Ov3rIwAAYloIAJwadezyd74/t4pn64nbiUO7\n/B8OEKWTKU3tlTOqNdxSQnZaEqhxBGmI/frvTeiS6QCQS3zecaFU3NU9ODcBe7ht\n5OBrElC8VDOGvFwWez0yXyYuiml89gvz41gMHUajPz6yFb3U5+b8TL3xoOeaetGE\nCafNDlYotnezD/4L/XatqufxWpb3nQmZAhpS4NCnvd6PUczLVDZyRnavUSZw08lR\nixI24SPjuHDH7qjjuaBoYX7AqAHNkQHHb51Bf1FQcO2udOKTGvOoHIvHMAyxr60i\nxxRfnWhmQEq0MbB//QyfMRoYfhJUqmLTZPjt9VsSXU6TdhMv6/Xm4FLb2GcISpI=\n=f4FN\n-----END PGP SIGNATURE-----\n","payload":"tree 9ff19104c0edbe9f187d1692c5cdbd46b4ba7e78\nparent 1cd90d2ccc791f3ed25d93ceb7137746185f6e34\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1654537018 -0700\ncommitter GitHub <noreply@github.com> 1654537018 -0700\n\nAdd snapshot testing on e2e test failure (#24672)\n\nWe have a currently unreproducible flaky e2e test. This PR captures snapshots on e2e test failures so we can better debug flaky e2e tests that don't fail locally."}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-06T16:15:59Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-06T16:15:59Z"},"message":"Refactor of interleaved (\"concurrent\") update queue (#24663)\n\n* Always push updates to interleaved queue first\r\n\r\nInterleaves updates (updates that are scheduled while another render\r\nis already is progress) go into a special queue that isn't applied until\r\nthe end of the current render. They are transferred to the \"real\" queue\r\nat the beginning of the next render.\r\n\r\nCurrently we check during `setState` whether an update should go\r\ndirectly onto the real queue or onto the special interleaved queue. The\r\nlogic is subtle and it can lead to bugs if you mess it up, as in #24400.\r\n\r\nInstead, this changes it to always go onto the interleaved queue. The\r\nbehavior is the same but the logic is simpler.\r\n\r\nAs a further step, we can also wait to update the `childLanes` until\r\nthe end of the current render. I'll do this in the next step.\r\n\r\n* Move setState return path traversal to own call\r\n\r\nA lot of the logic around scheduling an update needs access to the\r\nfiber root. To obtain this reference, we must walk up the fiber return\r\npath. We also do this to update `childLanes` on all the parent\r\nnodes, so we can use the same traversal for both purposes.\r\n\r\nThe traversal currently happens inside `scheduleUpdateOnFiber`, but\r\nsometimes we need to access it beyond that function, too.\r\n\r\nSo I've hoisted the traversal out of `scheduleUpdateOnFiber` into its\r\nown function call that happens at the beginning of the\r\n`setState` algorithm.\r\n\r\n* Rename ReactInterleavedUpdates -> ReactFiberConcurrentUpdates\r\n\r\nThe scope of this module is expanding so I've renamed accordingly. No\r\nbehavioral changes.\r\n\r\n* Enqueue and update childLanes in same function\r\n\r\nDuring a setState, the childLanes are updated immediately, even if a\r\nrender is already in progress. This can lead to subtle concurrency bugs,\r\nso the plan is to wait until the in-progress render has finished before\r\nupdating the childLanes, to prevent subtle concurrency bugs.\r\n\r\nAs a step toward that change, when scheduling an update, we should not\r\nupdate the childLanes directly, but instead defer to the\r\nReactConcurrentUpdates module to do it at the appropriate time.\r\n\r\nThis makes markUpdateLaneFromFiberToRoot a private function that is\r\nonly called from the ReactConcurrentUpdates module.\r\n\r\n* [FORKED] Don't update childLanes until after current render\r\n\r\n(This is the riskiest commit in the stack. Only affects the \"new\"\r\nreconciler fork.)\r\n\r\nUpdates that occur in a concurrent event while a render is already in\r\nprogress can't be processed during that render. This is tricky to get\r\nright. Previously we solved this by adding concurrent updates to a\r\nspecial `interleaved` queue, then transferring the `interleaved` queue\r\nto the `pending` queue after the render phase had completed.\r\n\r\nHowever, we would still mutate the `childLanes` along the parent path\r\nimmediately, which can lead to its own subtle data races.\r\n\r\nInstead, we can queue the entire operation until after the render phase\r\nhas completed. This replaces the need for an `interleaved` field on\r\nevery fiber/hook queue.\r\n\r\nThe main motivation for this change, aside from simplifying the logic a\r\nbit, is so we can read information about the current fiber while we're\r\nwalking up its return path, like whether it's inside a hidden tree.\r\n(I haven't done anything like that in this commit, though.)\r\n\r\n* Add 17691ac to forked revisions","tree":{"sha":"be4010fa9fddf812c8d6040c086925730169c77e","url":"https://api.github.com/repos/facebook/react/git/trees/be4010fa9fddf812c8d6040c086925730169c77e"},"url":"https://api.github.com/repos/facebook/react/git/commits/1cd90d2ccc791f3ed25d93ceb7137746185f6e34","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJinig/CRBK7hj4Ov3rIwAATrIIAD8iSDGIEYY5El0HbK4WoMOl\nRmN1ufat0WKG+LXImSgx8Sq4PYgXaTkzfFuJyJ8HCH6mn9Pc1oP6Cs3PLDzJO9BG\nCvJUTcrh+JhI4skH5SlAEBOjIrBPIIcwU6OJ4W2B4sMf+BZzZFIiNI8nJx8BKCxN\ndSqK10f/rhg7BWg3U+TC2hmzym39ZffTdfNKFEGN3kfeiz4YGnyqLRFnwvPWJ9WZ\nOCJBIjEH4/OZkG1j6+Zl0rZjh4RuFmXAKH3S9dHXpuF2281P2c7LKgpX//X6vMaA\nchI1+o/av0ERvZ0U5JMR2fP3Z3Tfa3oDCSUDfdVGIGAB3ZA7J3wxLlyIa3LpRuM=\n=dXOY\n-----END PGP SIGNATURE-----\n","payload":"tree be4010fa9fddf812c8d6040c086925730169c77e\nparent 4ddd8b455ce1dac02c56a18790d5068a7714c1a0\nauthor Andrew Clark <git@andrewclark.io> 1654532159 -0400\ncommitter GitHub <noreply@github.com> 1654532159 -0400\n\nRefactor of interleaved (\"concurrent\") update queue (#24663)\n\n* Always push updates to interleaved queue first\r\n\r\nInterleaves updates (updates that are scheduled while another render\r\nis already is progress) go into a special queue that isn't applied until\r\nthe end of the current render. They are transferred to the \"real\" queue\r\nat the beginning of the next render.\r\n\r\nCurrently we check during `setState` whether an update should go\r\ndirectly onto the real queue or onto the special interleaved queue. The\r\nlogic is subtle and it can lead to bugs if you mess it up, as in #24400.\r\n\r\nInstead, this changes it to always go onto the interleaved queue. The\r\nbehavior is the same but the logic is simpler.\r\n\r\nAs a further step, we can also wait to update the `childLanes` until\r\nthe end of the current render. I'll do this in the next step.\r\n\r\n* Move setState return path traversal to own call\r\n\r\nA lot of the logic around scheduling an update needs access to the\r\nfiber root. To obtain this reference, we must walk up the fiber return\r\npath. We also do this to update `childLanes` on all the parent\r\nnodes, so we can use the same traversal for both purposes.\r\n\r\nThe traversal currently happens inside `scheduleUpdateOnFiber`, but\r\nsometimes we need to access it beyond that function, too.\r\n\r\nSo I've hoisted the traversal out of `scheduleUpdateOnFiber` into its\r\nown function call that happens at the beginning of the\r\n`setState` algorithm.\r\n\r\n* Rename ReactInterleavedUpdates -> ReactFiberConcurrentUpdates\r\n\r\nThe scope of this module is expanding so I've renamed accordingly. No\r\nbehavioral changes.\r\n\r\n* Enqueue and update childLanes in same function\r\n\r\nDuring a setState, the childLanes are updated immediately, even if a\r\nrender is already in progress. This can lead to subtle concurrency bugs,\r\nso the plan is to wait until the in-progress render has finished before\r\nupdating the childLanes, to prevent subtle concurrency bugs.\r\n\r\nAs a step toward that change, when scheduling an update, we should not\r\nupdate the childLanes directly, but instead defer to the\r\nReactConcurrentUpdates module to do it at the appropriate time.\r\n\r\nThis makes markUpdateLaneFromFiberToRoot a private function that is\r\nonly called from the ReactConcurrentUpdates module.\r\n\r\n* [FORKED] Don't update childLanes until after current render\r\n\r\n(This is the riskiest commit in the stack. Only affects the \"new\"\r\nreconciler fork.)\r\n\r\nUpdates that occur in a concurrent event while a render is already in\r\nprogress can't be processed during that render. This is tricky to get\r\nright. Previously we solved this by adding concurrent updates to a\r\nspecial `interleaved` queue, then transferring the `interleaved` queue\r\nto the `pending` queue after the render phase had completed.\r\n\r\nHowever, we would still mutate the `childLanes` along the parent path\r\nimmediately, which can lead to its own subtle data races.\r\n\r\nInstead, we can queue the entire operation until after the render phase\r\nhas completed. This replaces the need for an `interleaved` field on\r\nevery fiber/hook queue.\r\n\r\nThe main motivation for this change, aside from simplifying the logic a\r\nbit, is so we can read information about the current fiber while we're\r\nwalking up its return path, like whether it's inside a hidden tree.\r\n(I haven't done anything like that in this commit, though.)\r\n\r\n* Add 17691ac to forked revisions"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-06T15:53:11Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-06T15:53:11Z"},"message":"Track revs that intentionally fork the reconciler (#24671)\n\n* Track revs that intentionaly fork the reconciler\r\n\r\nWhen we fork the the \"old\" and \"new\" reconciler implementations, it can\r\nbe difficult to keep track of which commits introduced the delta\r\nin behavior. This makes bisecting difficult if one of the changes\r\nintroduces a bug.\r\n\r\nI've added a new file called `forked-revisions` that contains the list\r\nof commits that intentionally forked the reconcilers.\r\n\r\nIn CI, we'll confirm that the reconcilers are identical except for the\r\nchanges in the listed revisions. This also ensures that the revisions\r\ncan be cleanly reverted.\r\n\r\n* [TEST] Add trivial divergence between forks\r\n\r\nThis should fail CI. We'll see if the next commit fixes it.\r\n\r\n* [TEST] Update list of forked revisions\r\n\r\nThis should fix CI\r\n\r\n* Revert temporary fork\r\n\r\nThis reverts the temporary fork added in the previous commits that was\r\nused to test CI.\r\n\r\n* Update error message when CI fails","tree":{"sha":"020218bf0092d15ac2ff0c67a8897bd8152ce7b7","url":"https://api.github.com/repos/facebook/react/git/trees/020218bf0092d15ac2ff0c67a8897bd8152ce7b7"},"url":"https://api.github.com/repos/facebook/react/git/commits/4ddd8b455ce1dac02c56a18790d5068a7714c1a0","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiniLnCRBK7hj4Ov3rIwAA4gsIAK5yM8v4Mw2+fdFXG3jiQzAU\nLl6C2o94XpVxvPruReUn9zJIBizc/Yy+ASmHzUSac1ZEGP1fTG6hu0pt+Bt/wWjf\ntuJ5W4Z0GgkzwpSa67sD3Tz2Q+kRjI+MIdz9L0QRPzm9o5I5uzv6QdK9ZHl3LrJR\n3g9xHgsJ9e9WDyT0DV5C2Bm+OPqMTigNsejPmcYCQQqiQIej5AwSoTiRn49ahxyL\nc89BPGFvPOUCudkhRHd8r6uN5mbKW0FLgfYo4uzOXwoDu47jfDTlGUrroS+9oxcI\noCYMHLGA5MHX4oMLRO0hjSoLMSK2msQKwqz6JVssuvQpZYfLKpgtnw3MqHSq44c=\n=Mm4x\n-----END PGP SIGNATURE-----\n","payload":"tree 020218bf0092d15ac2ff0c67a8897bd8152ce7b7\nparent 652dcf6550f3586377e910cf41b4846eff374210\nauthor Andrew Clark <git@andrewclark.io> 1654530791 -0400\ncommitter GitHub <noreply@github.com> 1654530791 -0400\n\nTrack revs that intentionally fork the reconciler (#24671)\n\n* Track revs that intentionaly fork the reconciler\r\n\r\nWhen we fork the the \"old\" and \"new\" reconciler implementations, it can\r\nbe difficult to keep track of which commits introduced the delta\r\nin behavior. This makes bisecting difficult if one of the changes\r\nintroduces a bug.\r\n\r\nI've added a new file called `forked-revisions` that contains the list\r\nof commits that intentionally forked the reconcilers.\r\n\r\nIn CI, we'll confirm that the reconcilers are identical except for the\r\nchanges in the listed revisions. This also ensures that the revisions\r\ncan be cleanly reverted.\r\n\r\n* [TEST] Add trivial divergence between forks\r\n\r\nThis should fail CI. We'll see if the next commit fixes it.\r\n\r\n* [TEST] Update list of forked revisions\r\n\r\nThis should fix CI\r\n\r\n* Revert temporary fork\r\n\r\nThis reverts the temporary fork added in the previous commits that was\r\nused to test CI.\r\n\r\n* Update error message when CI fails"}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-06T15:33:22Z"},"committer":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-06T15:33:32Z"},"message":"Fix CI: Persist build artifacts to workspace\n\nThe download_build job needs to persist its artifacts to the workspace\nso downstream jobs can access them.\n\nPersist the same directories as the normal build job.","tree":{"sha":"fd0a0662c45ff5d66b27935a4e0ce704dee01dcc","url":"https://api.github.com/repos/facebook/react/git/trees/fd0a0662c45ff5d66b27935a4e0ce704dee01dcc"},"url":"https://api.github.com/repos/facebook/react/git/commits/652dcf6550f3586377e910cf41b4846eff374210","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-06T15:29:37Z"},"committer":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-06T15:30:07Z"},"message":"Fix CI: Remove copypasta from sizebot download job\n\nThis was copy pasted from the similar job that exists to download\nbase artifacts for sizebot.","tree":{"sha":"a3640721e6f7b5f9832854a2141d9ea0fec40736","url":"https://api.github.com/repos/facebook/react/git/trees/a3640721e6f7b5f9832854a2141d9ea0fec40736"},"url":"https://api.github.com/repos/facebook/react/git/commits/dfd6f96f7699adc005a1b0a011b7c8e7261345ce","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-06T14:38:02Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-06T14:38:02Z"},"message":"Fix CI: Download to build instead of base-build (#24677)\n\nFixes a mistake in #24676. The get_base_build job downloads artifacts to\r\n`base-build` instead of `build`, so that sizebot can compare the two\r\ndirectories. For most other jobs, though, we want it to produce the\r\nsame output as the normal build job.","tree":{"sha":"634cbcddd4b538bb8156da0087c822e8c1e5e0ac","url":"https://api.github.com/repos/facebook/react/git/trees/634cbcddd4b538bb8156da0087c822e8c1e5e0ac"},"url":"https://api.github.com/repos/facebook/react/git/commits/a621cb099dafb8bd77370ed4f4d832f049642183","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJinhFKCRBK7hj4Ov3rIwAAmVUIAJlgRK629eNVdf2D7lqF+l4e\nR5ecpdwCVHz8lvY6ThcDc4th5oUlV9GkUd9FQSA8zxaPPNb9zrX06CrjhgmyZn1g\nE8u5/a5Zhcq/yF/nTS2pT0BSH+P2XW3Fj6b/wr9d+RAEHGMqqDXlWU23IW1wKSLr\n3KPZ1bqJjmyRMX4dJaHP3OOlmTI4Jx9Jd+U+acvLX+R8yzlsDskK6oF3jJByqQYk\nAJGYZoDNHGyH0zNZgW+jqfOsqa9XvUnQgAQiqoIAtHD1NqUwjD8vKD+eJ4hNTlFo\niAEjw+vhQNHkx96VnCHuahskBvSHiBfku4lSWEZxTpodJNqm9DF+I2M55RgJ4yU=\n=v5Y3\n-----END PGP SIGNATURE-----\n","payload":"tree 634cbcddd4b538bb8156da0087c822e8c1e5e0ac\nparent a97a0810eae4428dd55dc1fa1b94ee1f9c18715b\nauthor Andrew Clark <git@andrewclark.io> 1654526282 -0400\ncommitter GitHub <noreply@github.com> 1654526282 -0400\n\nFix CI: Download to build instead of base-build (#24677)\n\nFixes a mistake in #24676. The get_base_build job downloads artifacts to\r\n`base-build` instead of `build`, so that sizebot can compare the two\r\ndirectories. For most other jobs, though, we want it to produce the\r\nsame output as the normal build job."}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-06T13:57:35Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-06T13:57:35Z"},"message":"DevTools e2e workflow: Download build artifacts (#24676)\n\nWhen running the hourly DevTools testing workflow, we don't need to\r\nbuild React from scratch each time; we can download its build artifacts,\r\nlike we do for sizebot and the release workflow.","tree":{"sha":"957c1303839184a42e1d8676c7568250e1c11a4a","url":"https://api.github.com/repos/facebook/react/git/trees/957c1303839184a42e1d8676c7568250e1c11a4a"},"url":"https://api.github.com/repos/facebook/react/git/commits/a97a0810eae4428dd55dc1fa1b94ee1f9c18715b","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJingfPCRBK7hj4Ov3rIwAAKaAIAHLXfKvvSuPn3Xww+ff8DXGU\nDpE1TA4G1zDnBYH/C5Iw5lRTchuCGraUMTko0Gf9m9A6rP68qRQYxdoGAlL9+nGE\nsxHzdo8uEkzwO8IPdRF0pd+TzLewUFKxIuQI55fTMlJEiNI9RLwDbgBMehe4MmxA\nw50bjjFTHpa6YCqEDjPyCqwjG8m5xAKXu86LK/byw77YnEcoDmQiVldxER7teBC/\nJsUqwZvk3Z9Ly/i4j7O2LJHckw2mulnBYe3W0H6KIuzGiAfhcfYUSpdAxOER91xy\nakc4cVzq76z2iJHZISN9hZ/oldqa+tN0oCK0BeML8ww7M3VHQObKpZeLGj4OJ5w=\n=Ks4q\n-----END PGP SIGNATURE-----\n","payload":"tree 957c1303839184a42e1d8676c7568250e1c11a4a\nparent 7a5b8227c7d67aefe62f015cf0e961e28075d897\nauthor Andrew Clark <git@andrewclark.io> 1654523855 -0400\ncommitter GitHub <noreply@github.com> 1654523855 -0400\n\nDevTools e2e workflow: Download build artifacts (#24676)\n\nWhen running the hourly DevTools testing workflow, we don't need to\r\nbuild React from scratch each time; we can download its build artifacts,\r\nlike we do for sizebot and the release workflow."}},{"author":{"name":"Andrew Clark","email":"git@andrewclark.io","date":"2022-06-03T01:55:35Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-03T01:55:35Z"},"message":"Allow aritfacts download even if CI is broken (#24666)\n\n* Allow aritfacts download even if CI is broken\r\n\r\nAdds an option to the download script to disable the CI check and\r\ncontinue downloading the artifacts even if CI is broken.\r\n\r\nI often rely on this to debug broken build artifacts. I was thinking\r\nthe sizebot should also use this when downloading the base artifacts\r\nfrom main, since for the purposes of size tracking, it really doesn't\r\nmatter whether the base commit is broken.\r\n\r\n* Sizebot should work even if base rev is broken\r\n\r\nSizebot works by downloading the build artifacts for the base revision\r\nand comparing the fize sizes, but the download script will fail if\r\nthe base revision has a failing CI job. This happens more often than it\r\nshould because of flaky cron jobs, but even when it does, we shouldn't\r\nlet it affect the sizebot — for the purposes of tracking sizes, it\r\ndoesn't really matter whether the base revision is broken.","tree":{"sha":"7379fe5e397bc28acc91f8b87977d231de23a47a","url":"https://api.github.com/repos/facebook/react/git/trees/7379fe5e397bc28acc91f8b87977d231de23a47a"},"url":"https://api.github.com/repos/facebook/react/git/commits/7a5b8227c7d67aefe62f015cf0e961e28075d897","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJimWoXCRBK7hj4Ov3rIwAANZAIACuJxM24lGD0PnvbzEBqpK0W\nT5bw+qkqPg6/OEEXnWbmMYMGQi13gJ0fr5U+ndZjOymZupwh+HpvHSBUSxyVHrTm\nud6pQVbznLGGtHMXCq7EY9Ed4vPCb+Wt/AEI1iQawB+2qyDKvo2GcXBpECHisRn6\nYIas+0zkXWExTa4Q9urCliTFedJfWAaB2D98PnAHwLDS07wPWvuMkXRtCxxnj4l5\nlukOaMFFlc6Hn/4WUK5n53hD4Ixu7XzSoZxc5qnfiq8PCo+UDo78Ky8sF4PqTRDS\nlb4vpzd2yuFc9S0KVo61cP76zhbPbERY0G0rlA1MzuoJ2f4prATxokKGvDwOh+Q=\n=fi69\n-----END PGP SIGNATURE-----\n","payload":"tree 7379fe5e397bc28acc91f8b87977d231de23a47a\nparent d300cebde2a63e742ccb8b6aa7b0f61db1ae29b4\nauthor Andrew Clark <git@andrewclark.io> 1654221335 -0400\ncommitter GitHub <noreply@github.com> 1654221335 -0400\n\nAllow aritfacts download even if CI is broken (#24666)\n\n* Allow aritfacts download even if CI is broken\r\n\r\nAdds an option to the download script to disable the CI check and\r\ncontinue downloading the artifacts even if CI is broken.\r\n\r\nI often rely on this to debug broken build artifacts. I was thinking\r\nthe sizebot should also use this when downloading the base artifacts\r\nfrom main, since for the purposes of size tracking, it really doesn't\r\nmatter whether the base commit is broken.\r\n\r\n* Sizebot should work even if base rev is broken\r\n\r\nSizebot works by downloading the build artifacts for the base revision\r\nand comparing the fize sizes, but the download script will fail if\r\nthe base revision has a failing CI job. This happens more often than it\r\nshould because of flaky cron jobs, but even when it does, we shouldn't\r\nlet it affect the sizebot — for the purposes of tracking sizes, it\r\ndoesn't really matter whether the base revision is broken."}},{"author":{"name":"Mengdi Chen","email":"mengdi@fb.com","date":"2022-06-01T17:04:09Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-01T17:04:09Z"},"message":"[DevTools] only polyfill requestAnimationFrame when necessary (#24651)","tree":{"sha":"c4e86db2c88be7362214eba6049ac4e893b2c0f0","url":"https://api.github.com/repos/facebook/react/git/trees/c4e86db2c88be7362214eba6049ac4e893b2c0f0"},"url":"https://api.github.com/repos/facebook/react/git/commits/d300cebde2a63e742ccb8b6aa7b0f61db1ae29b4","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJil5wJCRBK7hj4Ov3rIwAAJgEIAKrxIJMY4N2tqv1Bi+jHSY+L\nU2kHhtdkoyw1WhJJbkBMBYojk1CaMIs80QEApnhcIIlaKCDJ9SLMmRc0mv3irNLP\nrAweAU/3enTiVbDFVp1EZyTQ+tevUercLvyT/LZxpVtJW4UOrZneWcvdipDzHiJ8\nZq64EAm2qSan46KaUEKkTw1wmwj8j0oc1ivS2sW5XCsCj0ZfFqDxdgHN5BFE6H7q\nuc2kThkHnahSfRARHvj3EZKqVF8w7yKOLqFOAWYBWzDxZGzjc1TI9YiU+toeuVw9\nul88oZhiPZavCdPM/s0f8CfS+SEzg8yKMYoosu7Yma1ujNYyLzeJrdSiSSoX7LM=\n=84+R\n-----END PGP SIGNATURE-----\n","payload":"tree c4e86db2c88be7362214eba6049ac4e893b2c0f0\nparent d2c9e834ae07377edbc94128eec4480693b64292\nauthor Mengdi Chen <mengdi@fb.com> 1654103049 -0400\ncommitter GitHub <noreply@github.com> 1654103049 -0400\n\n[DevTools] only polyfill requestAnimationFrame when necessary (#24651)\n\n"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-06-01T14:55:26Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-01T14:55:26Z"},"message":"[DevTools] Run e2e Regression Tests Hourly on Circle CI (#24648)\n\nModifies Circle CI so we run e2e regression tests hourly on Circle CI","tree":{"sha":"876fa023d8f8917776b12ac8646c89e712b3738c","url":"https://api.github.com/repos/facebook/react/git/trees/876fa023d8f8917776b12ac8646c89e712b3738c"},"url":"https://api.github.com/repos/facebook/react/git/commits/d2c9e834ae07377edbc94128eec4480693b64292","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJil33eCRBK7hj4Ov3rIwAAPpEIAD0GXrStj7IZq3NaUtcaWT+w\n/xLHDvcb8SF84sYy192SwV/lk3o6r1StdgKREYaU7I2JJnY23EmG3T4KTSz6wKzf\nMp7zYksEy2Y6E4rAcZ4/O25uq4mdx1sdZkiaqqdaB70+8ptcem9oQZ0iToCSeTdU\nIzeFPteIQrI17Vrff+aCCnmflh9QXsw2itrrgkCUvKk4XFpu4q9uBPwjpprOxkjR\nyfWgzhaJ6z+MpsZ+XlVsELgD4Y95fhQfKyeVzRy4azixrnOtbqoSQzHYQj7yXGl0\nYt56DYwBYjc/NCfbw83yi7C8cbFLBLyW4/vzGTtA3gYd6PKxjDNCBLt3vgiietw=\n=XDmL\n-----END PGP SIGNATURE-----\n","payload":"tree 876fa023d8f8917776b12ac8646c89e712b3738c\nparent b1858b110d2888034355ee6dd9c0b581feabbed3\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1654095326 -0400\ncommitter GitHub <noreply@github.com> 1654095326 -0400\n\n[DevTools] Run e2e Regression Tests Hourly on Circle CI (#24648)\n\nModifies Circle CI so we run e2e regression tests hourly on Circle CI"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-05-31T23:13:41Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-05-31T23:13:41Z"},"message":"[DevTools] devtools-test-shell Regression App fixes (#24644)\n\nMade a couple of fixes to the `devtools-test-shell`\r\n* test selectors aren't available in > React v18.0 either, so we'll need to mock the test selector functions there as well\r\n* `react-dom/client` should map to `react-dom/client` and not `react-dom`","tree":{"sha":"a40e9acf3d2ad3ae82f06528409bbb1c4b0c00c4","url":"https://api.github.com/repos/facebook/react/git/trees/a40e9acf3d2ad3ae82f06528409bbb1c4b0c00c4"},"url":"https://api.github.com/repos/facebook/react/git/commits/b1858b110d2888034355ee6dd9c0b581feabbed3","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilqElCRBK7hj4Ov3rIwAAFjMIAAYPDLRIGxRbcjdE1LwwYIWb\nOwmeWJ+KExT4yGN6N0ApwgJOO9SUsvgqHe/9+JBTrw/5heXZsvgdLiOuGkyD7KCp\nDLXFacbLLQJvVNyMiLEhLnSBBAJdJmyZku3lVGHRjLctbTcSOw4sdDaQhNGvYTgg\nH3l8zNFDLsw6DfeAdduz+chPzAefzKuBGX60WtbnsIm+Ks+gy7UwdlNPRodOJQ3O\nduaBAAm2PskgLHWsblt6lK5UI0h33Jxv4SwZuDhQynsnpqM/2NfiUHWMDwQw534c\nPYyJDFg0KyE1L3dRKZwNll9gIy9C8nVhKbI51BcEns62pVaWYln4D5gUxoLuZgM=\n=2nHf\n-----END PGP SIGNATURE-----\n","payload":"tree a40e9acf3d2ad3ae82f06528409bbb1c4b0c00c4\nparent dd4950c90e65a6c53870fd61d2aea67bce7d6713\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1654038821 -0400\ncommitter GitHub <noreply@github.com> 1654038821 -0700\n\n[DevTools] devtools-test-shell Regression App fixes (#24644)\n\nMade a couple of fixes to the `devtools-test-shell`\r\n* test selectors aren't available in > React v18.0 either, so we'll need to mock the test selector functions there as well\r\n* `react-dom/client` should map to `react-dom/client` and not `react-dom`"}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-05-31T21:53:32Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-05-31T21:53:32Z"},"message":"[Flight] Implement useId hook (#24172)\n\n* Implements useId hook for Flight server.\r\n\r\nThe approach for ids for Flight is different from Fizz/Client where there is a need for determinancy. Flight rendered elements will not be rendered on the client and as such the ids generated in a request only need to be unique. However since FLight does support refetching subtrees it is possible a client will need to patch up a part of the tree rather than replacing the entire thing so it is not safe to use a simple incrementing counter. To solve for this we allow the caller to specify a prefix. On an initial fetch it is likely this will be empty but on refetches or subtrees we expect to have a client `useId` provide the prefix since it will guaranteed be unique for that subtree and thus for the entire tree. It is also possible that we will automatically provide prefixes based on a client/Fizz useId on refetches\r\n\r\nin addition to the core change I also modified the structure of options for renderToReadableStream where `onError`, `context`, and the new `identifierPrefix` are properties of an Options object argument to avoid the clumsiness of a growing list of optional function arguments.\r\n\r\n* defend against useId call outside of rendering\r\n\r\n* switch to S from F for Server Component ids\r\n\r\n* default to empty string identifier prefix\r\n\r\n* Add a test demonstrating that there is no warning when double rendering on the client a server component that used useId\r\n\r\n* lints and gates","tree":{"sha":"36bfc0cf8b418f2457b85924854c6b4b0b880900","url":"https://api.github.com/repos/facebook/react/git/trees/36bfc0cf8b418f2457b85924854c6b4b0b880900"},"url":"https://api.github.com/repos/facebook/react/git/commits/dd4950c90e65a6c53870fd61d2aea67bce7d6713","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilo5cCRBK7hj4Ov3rIwAAvqUIAAEUtie3ul4JuGfrvdgULaWZ\nO8a58CWQP/Xfc6IuatB9wbif9DAjN7eYHMYPH+uWOBznhAnO6NVt2qrjb0UT1R5Z\nnXJ8RB7UrdxJLT+WjQfWJdTLmWccL2Cp/0ZP0/vg5wXGv/VjqpOCU9dJC5pwb68Y\ni53v3QsiahiR2Em46rXnDcVyGQyUZ8dyXDJdTooyrf1VVLJ/BaLMwZcvxWKM53FS\nSZGOJoXKjaWmbYjBXNCmehXBtNH+2EHhTAGH/nBlOGlFw3DPV6l4pmTt8sj4uWyH\n3rEqWhPsmZFmmq+OyUxsGh/Jb+O75f5fSIL8d0uEj9hRkJwLl+oogunVA2SiIDQ=\n=Pi7n\n-----END PGP SIGNATURE-----\n","payload":"tree 36bfc0cf8b418f2457b85924854c6b4b0b880900\nparent 26a5b3c7f781e93b5bcf4e5a7a6f13233409475d\nauthor Josh Story <story@hey.com> 1654034012 -0700\ncommitter GitHub <noreply@github.com> 1654034012 -0700\n\n[Flight] Implement useId hook (#24172)\n\n* Implements useId hook for Flight server.\r\n\r\nThe approach for ids for Flight is different from Fizz/Client where there is a need for determinancy. Flight rendered elements will not be rendered on the client and as such the ids generated in a request only need to be unique. However since FLight does support refetching subtrees it is possible a client will need to patch up a part of the tree rather than replacing the entire thing so it is not safe to use a simple incrementing counter. To solve for this we allow the caller to specify a prefix. On an initial fetch it is likely this will be empty but on refetches or subtrees we expect to have a client `useId` provide the prefix since it will guaranteed be unique for that subtree and thus for the entire tree. It is also possible that we will automatically provide prefixes based on a client/Fizz useId on refetches\r\n\r\nin addition to the core change I also modified the structure of options for renderToReadableStream where `onError`, `context`, and the new `identifierPrefix` are properties of an Options object argument to avoid the clumsiness of a growing list of optional function arguments.\r\n\r\n* defend against useId call outside of rendering\r\n\r\n* switch to S from F for Server Component ids\r\n\r\n* default to empty string identifier prefix\r\n\r\n* Add a test demonstrating that there is no warning when double rendering on the client a server component that used useId\r\n\r\n* lints and gates"}},{"author":{"name":"Josh Larson","email":"josh.larson@shopify.com","date":"2022-05-31T20:20:36Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-05-31T20:20:36Z"},"message":"Explicitly set `highWaterMark` to 0 for `ReadableStream` (#24641)\n\n* Explicitly set highWaterMark to 0 for ReadableStreams\r\n\r\nThis is because not all streaming implementations respect the\r\ndefault behavior of settings highWaterMark to 0 for byte streams.\r\nBeing explicit guarantees the intended behavior across runtimes.\r\n\r\n* Remove size methods and add FlowFixMe instead","tree":{"sha":"bd461b63b07903f25ad3293bfdd2873cda8966c8","url":"https://api.github.com/repos/facebook/react/git/trees/bd461b63b07903f25ad3293bfdd2873cda8966c8"},"url":"https://api.github.com/repos/facebook/react/git/commits/26a5b3c7f781e93b5bcf4e5a7a6f13233409475d","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilniUCRBK7hj4Ov3rIwAAkf8IAD0Ft9suVyQJy3V3TjWbGWAt\n2q64cVppYdLgY/e+hFLTzhnaFLwAmUwWf+c24yOVQamTpIvGtsUJT4Tfyqy5IV4l\nLU2NMv6xhAajFX9hxIOl0u9YhYgPOgJlQFKkMTnpMniLHPB4NKVlZHyn4zEbALzK\n68tyVXJ5H6BmdVF6toS4Kza/XC5sk0V4fmYdnIQGkl94GWIctKO73bzDU/uM+v7E\na1jNyT8X1lV2T7U3eP/96VbsFPzwVO+xE12Kp+wZDv2a7bOEUQwRVJvsa5PLFlSV\n43Sbf3C4UrsSkOBixT0oZm3QIs5mJOlhPKlfJsU71HJNx9n4gqhoofyhYJjmAdc=\n=C+dn\n-----END PGP SIGNATURE-----\n","payload":"tree bd461b63b07903f25ad3293bfdd2873cda8966c8\nparent 25837acfee5f5305d49fe19649e010dbf4f887a2\nauthor Josh Larson <josh.larson@shopify.com> 1654028436 -0500\ncommitter GitHub <noreply@github.com> 1654028436 -0400\n\nExplicitly set `highWaterMark` to 0 for `ReadableStream` (#24641)\n\n* Explicitly set highWaterMark to 0 for ReadableStreams\r\n\r\nThis is because not all streaming implementations respect the\r\ndefault behavior of settings highWaterMark to 0 for byte streams.\r\nBeing explicit guarantees the intended behavior across runtimes.\r\n\r\n* Remove size methods and add FlowFixMe instead"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-05-31T20:16:07Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-05-31T20:16:07Z"},"message":"React DevTools 4.24.6 -> 4.24.7 (#24646)","tree":{"sha":"43fbada3c6fceae196962e98b27196ded84f7ce3","url":"https://api.github.com/repos/facebook/react/git/trees/43fbada3c6fceae196962e98b27196ded84f7ce3"},"url":"https://api.github.com/repos/facebook/react/git/commits/25837acfee5f5305d49fe19649e010dbf4f887a2","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilneHCRBK7hj4Ov3rIwAANycIACaZAOLGZB6ONleJhxe6eAns\nkTR3JiUUSVNHrBqd5Rm9ilZIQllTfa68MRacQQPgbs6PPcsmmBR0M+cI+XVKCw/f\nc8UIxqJvXiXzvteDTjqBOae1VBTpE1p7cZcSknJxtsT/CUZUYWRGYhHjsCG4O2lf\npPMLQEhuQz0FtZQaGwAWvg6e0/0/fa5wQK0Hn1GcO3sat2eE89dIxW5H2hwS/gGO\nHhLlDhHA1ih52m87hkx1Y9Emz8BNxsTRtMcI53DV64t3X+J6honih7PeWiouGbO5\n2ztWEgWaAQ05RLRjTpc8sY9GarlLLwCmjx1th6E4LvKgnFhMl8s+/QZfWq7ZLxI=\n=vms0\n-----END PGP SIGNATURE-----\n","payload":"tree 43fbada3c6fceae196962e98b27196ded84f7ce3\nparent be1fd48e96a617f3758d179ebfb0386a382af942\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1654028167 -0400\ncommitter GitHub <noreply@github.com> 1654028167 -0400\n\nReact DevTools 4.24.6 -> 4.24.7 (#24646)\n\n"}},{"author":{"name":"Mengdi Chen","email":"mengdi@fb.com","date":"2022-05-31T19:32:21Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-05-31T19:32:21Z"},"message":"[DevTools] mock requestAnimationFrame with setTimeout as a temporary fix for #24626 (#24633)\n\n* mock requestAnimationFrame as a temp workaround for #24626\r\n\r\n* give name to constant variable","tree":{"sha":"9b388a7b050ba0d89d42039fe7ce9a8c6d54d840","url":"https://api.github.com/repos/facebook/react/git/trees/9b388a7b050ba0d89d42039fe7ce9a8c6d54d840"},"url":"https://api.github.com/repos/facebook/react/git/commits/be1fd48e96a617f3758d179ebfb0386a382af942","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilm1FCRBK7hj4Ov3rIwAAH2oIAEzQ5Tzz/6tJ49e/5Y3LE6e0\nx4HriiIWsWb8VHf/QfT+NJEm9vTRhNZjfWLeaRjej8O0AE3CQSaVnctkflVC0U45\nyDIB1QyWeKmtJlEd72W3OyACBKfwctXMjPmdof1u6gDKm6Sb3OYOOuaxtVem51WC\nEsRdEauerju4rffvnL4m1+gV4ph8PkT2EZNx0MYsxfbrwpxcVlcsAx/H1ZZmnJLz\nrNEKUX+pmoRx6EymEEHG5Mr9BgdRhuCZU4LutggQTwEYQ0q+dyYQe2uvzz+dBWJ8\nznDZKHlp2jeIRO3AvpaylcxhzR6J7PPh/q7Rk1H9IUadTjQuKaee8R/jAbYpLAg=\n=/Ojx\n-----END PGP SIGNATURE-----\n","payload":"tree 9b388a7b050ba0d89d42039fe7ce9a8c6d54d840\nparent 0b545551e6dea328797e64eed6a9677bf4051eae\nauthor Mengdi Chen <mengdi@fb.com> 1654025541 -0400\ncommitter GitHub <noreply@github.com> 1654025541 -0400\n\n[DevTools] mock requestAnimationFrame with setTimeout as a temporary fix for #24626 (#24633)\n\n* mock requestAnimationFrame as a temp workaround for #24626\r\n\r\n* give name to constant variable"}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-05-31T18:39:30Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-05-31T18:39:30Z"},"message":"[DevTools] Modify DevTools e2e test script for regression tests (#24642)\n\nModified the `run_devtools_e2e_tests` script so that you can pass in a React version. If you pass in a version, it will build the DevTools shell and run the e2e tests with that version.","tree":{"sha":"494d73b5970a7c8524567a54b9815194300b0d14","url":"https://api.github.com/repos/facebook/react/git/trees/494d73b5970a7c8524567a54b9815194300b0d14"},"url":"https://api.github.com/repos/facebook/react/git/commits/0b545551e6dea328797e64eed6a9677bf4051eae","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilmDiCRBK7hj4Ov3rIwAA7noIAHD+yy5L107/g947sVKUmeRk\nVnyw6g0Zaa0gcujHHQtLPszJD43qsJQriktqRzNeUyhpTWgYcESOBe5JkMAdI5IL\n+NmEvBXt7FbvjekxA0iuaEijp6MboUbLMiyxKhAcnphSd6JZ0nYoCg/2SSQI4isj\nDDOPa6l4FAQV67EwMPM3Yr0aXqS2v34QLhiiGBkfOP+bBoNgrmBfmAzFBA9nEQtn\no+8xMe4m46ajA6V9C7sxKTrSYTEgWiRNnl8YVf0/eN1h5UO9+RCJOOP7tE4YxewY\nImkAFzgm1Fupilgk4IzqegzQa232e1dXBo8O4sDsrMKFd/rAzkwFj8KQdhKDTr8=\n=obNa\n-----END PGP SIGNATURE-----\n","payload":"tree 494d73b5970a7c8524567a54b9815194300b0d14\nparent f534cc6ea4e7cffbfd53b00e14cd0b1849b291f1\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1654022370 -0400\ncommitter GitHub <noreply@github.com> 1654022370 -0400\n\n[DevTools] Modify DevTools e2e test script for regression tests (#24642)\n\nModified the `run_devtools_e2e_tests` script so that you can pass in a React version. If you pass in a version, it will build the DevTools shell and run the e2e tests with that version."}},{"author":{"name":"Luna Ruan","email":"lunaris.ruan@gmail.com","date":"2022-05-31T16:23:44Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-05-31T16:23:44Z"},"message":"[DevTools] Add --replaceBuild option to Older React Builds Download Script (#24621)\n\nThis PR adds a `--replaceBuild` option to the script that downloads older React version builds. If this flag is true, we will replace the contents of the `build` folder with the contents of the `build-regression` folder and remove the `build-regression` folder after, which was the original behavior.\r\n\r\nHowever, for e2e tests, we need both the original build (for DevTools) and the new build (for the React Apps), so we need both the `build` and the `build-regression` folders. Not adding the `--replaceBuild` option will do this.\r\n\r\nThis PR also modifies the circle CI config to reflect this change.","tree":{"sha":"c3e5d1e4259e27a5017ba74e6e963ab1c8291690","url":"https://api.github.com/repos/facebook/react/git/trees/c3e5d1e4259e27a5017ba74e6e963ab1c8291690"},"url":"https://api.github.com/repos/facebook/react/git/commits/f534cc6ea4e7cffbfd53b00e14cd0b1849b291f1","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilkEQCRBK7hj4Ov3rIwAAOC8IAKSKMHPC21A3Mz95GBzh19AM\nMaBWJoVMNUtpWBJYEKszgHO47/vcmoivH2eQFF6dFoKikbVEwvCuuP5O//A1JDDs\nMVzrFvpfPrpfilxrRuvQKTfpfmTixvCgMrx2KW4YrxOdmJgJ94zYLidzIYWixlfm\nnUc9nCdlbcOVZdurnZUOFECPKUEPV6wXkZ1C6m0KKXxAmLyr/XLqYJuFQnRLL2W7\ns+txbLKYCKgh2koUFTmuCSMoOeK3mRZ8fxYkqs/mCjsqDsmVq/R68iqXz+6JwRRc\nWEG0dW/Ja841Ot1gAwizpQvhTHA2jB0jxAwR7z87aPfl8e4UnuDzGHa0ZGZowQE=\n=E5yJ\n-----END PGP SIGNATURE-----\n","payload":"tree c3e5d1e4259e27a5017ba74e6e963ab1c8291690\nparent aec575914a0fd76c9db8998ea62c3ee975de70d7\nauthor Luna Ruan <lunaris.ruan@gmail.com> 1654014224 -0400\ncommitter GitHub <noreply@github.com> 1654014224 -0400\n\n[DevTools] Add --replaceBuild option to Older React Builds Download Script (#24621)\n\nThis PR adds a `--replaceBuild` option to the script that downloads older React version builds. If this flag is true, we will replace the contents of the `build` folder with the contents of the `build-regression` folder and remove the `build-regression` folder after, which was the original behavior.\r\n\r\nHowever, for e2e tests, we need both the original build (for DevTools) and the new build (for the React Apps), so we need both the `build` and the `build-regression` folders. Not adding the `--replaceBuild` option will do this.\r\n\r\nThis PR also modifies the circle CI config to reflect this change."}},{"author":{"name":"Josh Story","email":"story@hey.com","date":"2022-05-30T06:07:10Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-05-30T06:07:10Z"},"message":"[Fizz] Send errors down to client (#24551)\n\n* use return from onError\r\n\r\n* export getSuspenseInstanceFallbackError\r\n\r\n* stringToChunk\r\n\r\n* return string from onError in downstream type signatures\r\n\r\n* 1 more type\r\n\r\n* support encoding errors in html stream and escape user input\r\n\r\nThis commit adds another way to get errors to the suspense instance by encoding them as dataset properties of a template element at the head of the boundary. Previously if there was an error before the boundary flushed there was no way to stream the error to the client because there would never be a client render instruction.\r\n\r\nAdditionally the error is sent in 3 parts\r\n\r\n1) error hash - this is always sent (dev or prod) if one is provided\r\n2) error message - Dev only\r\n3) error component stack - Dev only, this now captures the stack at the point of error\r\n\r\nAnother item addressed in this commit is the escaping of potentially unsafe data. all error components are escaped as test for browers when written into the html and as javascript strings when written into a client render instruction.\r\n\r\n* nits\r\n\r\nCo-authored-by: Marco Salazar <salazarm@fb.com>","tree":{"sha":"5090e1ca65612875d2751095c10c238d721ac56c","url":"https://api.github.com/repos/facebook/react/git/trees/5090e1ca65612875d2751095c10c238d721ac56c"},"url":"https://api.github.com/repos/facebook/react/git/commits/aec575914a0fd76c9db8998ea62c3ee975de70d7","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilF8OCRBK7hj4Ov3rIwAAqFMIAIFrQ651LH7w/PSSTPgVGpzY\nIDUQ0j668LFEXkNf8L3unt7lKSPp+GQcmDRC3t8wjb8YG9CQWzKezX135qSE/22h\nPrvLY8CBLknXEWLcFQmjeQvJOCrB0lICg/B8xA1bxTnao2G2usamG2Cznn2c2+/x\nuf6wun5NE/0qH3j4dd01hCQLiLZe8IGTp6Ij9XEN+tKu5pcEcR6y+DxAmklyrtzz\n3MChy3lCSj9gbtSAVaGWMySA9hsOktpQAG1ofdvSB20ZIDlrH6cZN1HRNgTl2MrS\nvszE90xDwzUtc6mtXpm+Z/ufOjPe/QXitg5xhs46PBj+nSsOarOgVHVpdvP5O1o=\n=ETmI\n-----END PGP SIGNATURE-----\n","payload":"tree 5090e1ca65612875d2751095c10c238d721ac56c\nparent a2766387efe68b318b23d8c35c70b850d1e6a250\nauthor Josh Story <story@hey.com> 1653890830 -0700\ncommitter GitHub <noreply@github.com> 1653890830 -0700\n\n[Fizz] Send errors down to client (#24551)\n\n* use return from onError\r\n\r\n* export getSuspenseInstanceFallbackError\r\n\r\n* stringToChunk\r\n\r\n* return string from onError in downstream type signatures\r\n\r\n* 1 more type\r\n\r\n* support encoding errors in html stream and escape user input\r\n\r\nThis commit adds another way to get errors to the suspense instance by encoding them as dataset properties of a template element at the head of the boundary. Previously if there was an error before the boundary flushed there was no way to stream the error to the client because there would never be a client render instruction.\r\n\r\nAdditionally the error is sent in 3 parts\r\n\r\n1) error hash - this is always sent (dev or prod) if one is provided\r\n2) error message - Dev only\r\n3) error component stack - Dev only, this now captures the stack at the point of error\r\n\r\nAnother item addressed in this commit is the escaping of potentially unsafe data. all error components are escaped as test for browers when written into the html and as javascript strings when written into a client render instruction.\r\n\r\n* nits\r\n\r\nCo-authored-by: Marco Salazar <salazarm@fb.com>"}}]